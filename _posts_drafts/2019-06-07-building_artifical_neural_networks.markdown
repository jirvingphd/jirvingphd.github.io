---
layout: post
title:      "BUILDING ARTIFICAL NEURAL NETWORKS:"
date:       2019-06-07 13:42:22 -0400
permalink:  building_artifical_neural_networks
---

## From real neurons to artificial ones

Coming from a neuroscience background, performing _in vivo_ electrophysiology experiments (recording and analyzing the electrical activity of neuorns), I was intrigued when first exposed to artificial neural networks (ANNs). 

My understanding of the  neural circuitry, neurotransmission, and neuroplasticity gave me a very strong intuitive understanding of how they work. But an intuitive understanding vs. practical usability are _not_ the same thing...

Below we will first dive into a high-level primer on how neurons communicate before turning to designing ANNs.

<script src="https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML" type="text/javascript"></script>

<img src="https://raw.githubusercontent.com/jirvingphd/dsc-4-final-project-online-ds-ft-021119/master/blog/brain_neural_network_illustration.png" width="500">

> The human brain contains approximately **86** ***billion*** neurons. 
>       - Dr. Suzana Herculano-Houzel, Vanderbuilt University

### How Real Neurons Process Information

For the purposes of this introduction, we are going to use a superficial now-ancient-dogma view of how neurons work. The rosy, organized, easier-to-wrap-your-head-around version I was taught back when I started undergrad. This is actually perfect for our needs, considering that this is what we knew back when neural networks inspired data scientists to create the very first artificial neural networks (ANNs) back in late 1950s through late 1980s.


<img src="https://raw.githubusercontent.com/jirvingphd/dsc-4-final-project-online-ds-ft-021119/master/blog/neuron-gif_orig.gif" width="500">

<img src="https://raw.githubusercontent.com/jirvingphd/dsc-4-final-project-online-ds-ft-021119/master/blog/Perceptron_moj.png" width="500">


A neuron is a specialized brain cell that receives, processes, and transmits information, and is sort of shaped like a tree. 

It has leaves on branches that spread out from the top of its trunk, which is a long central rod/pole/tube through which water and energy from the sun are transferred. If you follow the trunk down into the ground, it has roots that extend out deep into the earth. In a neuron, the branches and leaves are called the dendtrites. 
They all spread out form one central trunk of the neuron, called the soma/body. If you travel down the neuron's trunk, called the axon, you will reach its roots, which are called terminals.

A neuron receives input information in the leaves(synapses) of its dendrites, that information is funneled down the branches to where they all meet, the top of the trunk. Then a calculation is made and if the input signal is strong enough that information is sent down through the trunk of the neuron (down its axon) and down into its roots/terminals.


<i mg src="https://raw.githubusercontent.com/jirvingphd/dsc-4-final-project-online-ds-ft-021119/master/blog/neuron-gif_orig.gif" width="500">


This process is called "neurotransmission" and is called an  _electro-chemical process_, meaning that it has both an electrical component and a chemical component. The chemical component is the many different neurotransmitters(like dopamine, serotonin, and glutamate) that are sent from one neuron to other neurons that are connected by synapses.

<img src="https://raw.githubusercontent.com/jirvingphd/dsc-4-final-project-online-ds-ft-021119/master/blog/synapse-7d_orig.gif" width="300">

The electrical component is a large, incredibly fast, spike of electricity that shoots through a neuron from its head to its tail. This spike of electricity is called the _action potential_ and thats what we are referring to when we say our brain is firing.  

> So how and why is information transmission divided into these separate, but interconnected and inter-dependent pieces?


Now, the action potential has a couple special properties that are essential to neurotransmission. 
1) An action potential is all-or-nothing. Either a neuron fires, or it doesn't. It's a binary process. <br>_Hmm I know some activation functions kinda like that.._
2) An action potential only happens if a cell gets enough excitatory input from other neurons. A neuron is constantly receiving excitatory and inhibitory inputs from thousands of neurons that are essentially playing tug-of-war, with excitatory signals pushing the neuron closer and closer to firing, while the inhibitory signals are doing the opposite, trying to prevent the neuron from firing, pushing it down into a quiet state. 

If the excitatory input is strong enough, it overpowers any inhibition, build up enough electrical charge to reach a special electrical threshold that will open a cascade of special channels allow a tidal wave of electrical charge to rush into the neuron and down its axon to its terminals. The terminals are connected to thousands of other neurons, and this rush of electrical activity launches boats of neurotransmitters into the synapse to pass the information to the next layer of neurons. 




The action potential travels down a neuron's tail (the axon) until it reaches the neuron's feet(its terminals), which are like branching roots that form connections with _other_ neurons. But the _connection_ isn't a physical one, there is a gap between each neuron that needs to be traveled through to reach the next neuron. 


A prototypical neuron carries informaton in one-direction, from the top of its head, where it receives neurontransmiters from other neurons, to its tail where it sends out its own neurotranmissters onto other neurons. .

The head contains made of 
1. Dendrites 
2. Soma 


## How real neural networks learn
There's a catchy little rhyme to summarize the Hebbian cell assembly theory the simplest form of neuroplasticity. 

>  _neuroplasticity_: the ability of the brain to form and reorganize synaptic connections, especially in response to learning or experience or following injury.
>> _"Cells that fire together wire together."_
>> 

A long time ago neuroscientists believed that your brain developed until a certain age and then stopped and would simply decay over time. 

Now we know that your brain is _constantly_ changing. Everything you with your brain every moment is making those pathways for thing stronger and stronger.

 When we are born our brains are full of potential. We start out with our neurons over-connected, ready to work together, ready to learn. Then as we learn, specif c connections get strong or weaker, until the unneeded ones are pruned off and wither. 

## How your senses work and layer of the human cortex


---- WORK IN PROGRESS -----

This is the underlying concept behind 
> ## Artificial Neural Networks: 
> 

<html><head>


<!-- Load require.js. Delete this if your page already loads require.js -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.4/require.min.js" integrity="sha256-Ae2Vz/4ePdIu6ZyI/5ZGsYnb+m0JlOmKPjt6XZ9JJkA=" crossorigin="anonymous"></script>
<script src="https://unpkg.com/@jupyter-widgets/html-manager@*/dist/embed-amd.js" crossorigin="anonymous"></script>
<script type="application/vnd.jupyter.widget-state+json">
{
    "version_major": 2,
    "version_minor": 0,
    "state": {
        "d6d9e962c51f43929838d3e6c8e4fab8": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "8ac6235e858944879e007d21f9b008cb": {
            "model_name": "VBoxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_dom_classes": [
                    "widget-interact"
                ],
                "children": [
                    "IPY_MODEL_cabf9d884aad4f85a4fd7311f02b806d",
                    "IPY_MODEL_750d35157cee46bf920128c72273fbde",
                    "IPY_MODEL_858b7db0cdc14db08bf34f46795e36fd",
                    "IPY_MODEL_64f4c385d1a343e68903773881853f65"
                ],
                "layout": "IPY_MODEL_d6d9e962c51f43929838d3e6c8e4fab8"
            }
        },
        "19f50f18ccc546bf8c82eaee40591e23": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "06aee74da22a44d5a83a5c2e5cbe748d": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "cabf9d884aad4f85a4fd7311f02b806d": {
            "model_name": "DropdownModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_options_labels": [
                    "compare_time_shifted_model",
                    "compare_eval_metrics_for_shifts",
                    "compare_u_for_shifts"
                ],
                "description": "any_function",
                "index": 0,
                "layout": "IPY_MODEL_19f50f18ccc546bf8c82eaee40591e23",
                "style": "IPY_MODEL_06aee74da22a44d5a83a5c2e5cbe748d"
            }
        },
        "9770b5a81cc0437987ca163d5430178e": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "6a149679472143f7852f6de97b2bd4a3": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "750d35157cee46bf920128c72273fbde": {
            "model_name": "CheckboxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "show_help",
                "disabled": false,
                "layout": "IPY_MODEL_9770b5a81cc0437987ca163d5430178e",
                "style": "IPY_MODEL_6a149679472143f7852f6de97b2bd4a3",
                "value": false
            }
        },
        "d42fc5b1852846819c838f88eb8acab1": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "a8f87243784942b39a0682956b663631": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "858b7db0cdc14db08bf34f46795e36fd": {
            "model_name": "CheckboxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "show_code",
                "disabled": false,
                "layout": "IPY_MODEL_d42fc5b1852846819c838f88eb8acab1",
                "style": "IPY_MODEL_a8f87243784942b39a0682956b663631",
                "value": true
            }
        },
        "d18777bea917474ba2749f259a8f2c31": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "64f4c385d1a343e68903773881853f65": {
            "model_name": "OutputModel",
            "model_module": "@jupyter-widgets/output",
            "model_module_version": "1.0.0",
            "state": {
                "layout": "IPY_MODEL_d18777bea917474ba2749f259a8f2c31",
                "outputs": [
                    {
                        "output_type": "display_data",
                        "data": {
                            "text/plain": "<IPython.core.display.Markdown object>",
                            "text/markdown": "##### SOURCE CODE:\n ____"
                        },
                        "metadata": {}
                    },
                    {
                        "output_type": "display_data",
                        "data": {
                            "text/plain": "<IPython.core.display.Markdown object>",
                            "text/markdown": "```python\ndef compare_time_shifted_model(df_model,true_colname='True Test Price',pred_colname='Predicted Test Price',\n                               shift_list=[-4,-3,-2,-1,0,1,2,3,4]):\n    \n    # GET EVALUATION METRICS FROM PREDICTIONS\n    true_test_series = df_model[true_colname].dropna()\n    pred_test_series = df_model[pred_colname].dropna()\n    \n    # Comparing Shifted Timebins\n    res_df = compare_eval_metrics_for_shifts(true_test_series, pred_test_series,shift_list=np.arange(-4,4,1))\n    res_U = compare_u_for_shifts(true_test_series,pred_test_series,shift_list=np.arange(-4,4,1),\n                                 plot_all=True)#,plot_best=True)\n    display(res_U)\n    \n    res_df = res_df.swaplevel(i=-2, j=-2, axis=0).unstack(-1)\n    res_df = color_cols(res_df)#, subset=['R_squared'])\n    display(res_df)\n    return res_df;\n\n```\n___"
                        },
                        "metadata": {}
                    }
                ]
            }
        },
        "db9207984164408db5f4f05c9a3499e5": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "c16bcb90d88f42c994730fed227a6de9": {
            "model_name": "VBoxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_dom_classes": [
                    "widget-interact"
                ],
                "children": [
                    "IPY_MODEL_d97bbe5ed6714b10970101c5442e49ca",
                    "IPY_MODEL_83d3cbcb7cf2456690f1b5b69e92d09a",
                    "IPY_MODEL_482bdbeb12c44744b289fd3602fb8b02",
                    "IPY_MODEL_b32edeb2a0e64279a7be98a2b9d7a628"
                ],
                "layout": "IPY_MODEL_db9207984164408db5f4f05c9a3499e5"
            }
        },
        "d32c5575a67d4e158fa49d131a2ae21e": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "c499c48e26264570abaa6cc48f019d43": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "d97bbe5ed6714b10970101c5442e49ca": {
            "model_name": "DropdownModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_options_labels": [
                    "compare_time_shifted_model",
                    "compare_eval_metrics_for_shifts",
                    "compare_u_for_shifts"
                ],
                "description": "any_function",
                "index": 0,
                "layout": "IPY_MODEL_d32c5575a67d4e158fa49d131a2ae21e",
                "style": "IPY_MODEL_c499c48e26264570abaa6cc48f019d43"
            }
        },
        "129df44fb1844d938614d635e6dfcc3a": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "d3b5ef4f60c74367b193d6056beb0778": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "83d3cbcb7cf2456690f1b5b69e92d09a": {
            "model_name": "CheckboxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "show_help",
                "disabled": false,
                "layout": "IPY_MODEL_129df44fb1844d938614d635e6dfcc3a",
                "style": "IPY_MODEL_d3b5ef4f60c74367b193d6056beb0778",
                "value": false
            }
        },
        "1cf3f252e204494383fe9672c71fd62d": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "e43bff6ecfe543a29aa9809ef1331d4d": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "482bdbeb12c44744b289fd3602fb8b02": {
            "model_name": "CheckboxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "show_code",
                "disabled": false,
                "layout": "IPY_MODEL_1cf3f252e204494383fe9672c71fd62d",
                "style": "IPY_MODEL_e43bff6ecfe543a29aa9809ef1331d4d",
                "value": true
            }
        },
        "f966458a243545efacd896629b51949c": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "b32edeb2a0e64279a7be98a2b9d7a628": {
            "model_name": "OutputModel",
            "model_module": "@jupyter-widgets/output",
            "model_module_version": "1.0.0",
            "state": {
                "layout": "IPY_MODEL_f966458a243545efacd896629b51949c",
                "outputs": [
                    {
                        "output_type": "display_data",
                        "data": {
                            "text/plain": "<IPython.core.display.Markdown object>",
                            "text/markdown": "##### SOURCE CODE:\n ____"
                        },
                        "metadata": {}
                    },
                    {
                        "output_type": "display_data",
                        "data": {
                            "text/plain": "<IPython.core.display.Markdown object>",
                            "text/markdown": "```python\ndef compare_time_shifted_model(df_model,true_colname='True Test Price',pred_colname='Predicted Test Price',\n                               shift_list=[-4,-3,-2,-1,0,1,2,3,4]):\n    \n    # GET EVALUATION METRICS FROM PREDICTIONS\n    true_test_series = df_model[true_colname].dropna()\n    pred_test_series = df_model[pred_colname].dropna()\n    \n    # Comparing Shifted Timebins\n    res_df = compare_eval_metrics_for_shifts(true_test_series, pred_test_series,shift_list=np.arange(-4,4,1))\n    res_U = compare_u_for_shifts(true_test_series,pred_test_series,shift_list=np.arange(-4,4,1),\n                                 plot_all=True)#,plot_best=True)\n    display(res_U)\n    \n    res_df = res_df.swaplevel(i=-2, j=-2, axis=0).unstack(-1)\n    res_df = color_cols(res_df)#, subset=['R_squared'])\n    display(res_df)\n    return res_df;\n\n```\n___"
                        },
                        "metadata": {}
                    }
                ]
            }
        },
        "35144097a57c4b5e947fb20493c94bdc": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "8ab1a997e9eb4488ab9c9557285c4b6c": {
            "model_name": "VBoxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_dom_classes": [
                    "widget-interact"
                ],
                "layout": "IPY_MODEL_35144097a57c4b5e947fb20493c94bdc"
            }
        },
        "b2ff915751a74901a221cb589b26d788": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "6c18b24bf3184577abdf621ca74d8fe2": {
            "model_name": "VBoxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_dom_classes": [
                    "widget-interact"
                ],
                "layout": "IPY_MODEL_b2ff915751a74901a221cb589b26d788"
            }
        },
        "8f4eadf5cba049c59a2ed0fe2de5994c": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "9853cf81844b4a06acbf4416748d4868": {
            "model_name": "VBoxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_dom_classes": [
                    "widget-interact"
                ],
                "children": [
                    "IPY_MODEL_376bb3fdeaba4c71b2bfc7fa6f3fb75e",
                    "IPY_MODEL_0d600d815601400dbab9a6a776559615",
                    "IPY_MODEL_0939aff6e5cf40c48302378889483f8a",
                    "IPY_MODEL_f5ccf63a31734888b4050d34b9ca0e84",
                    "IPY_MODEL_36964d87bd70479386aec237dd3983a9",
                    "IPY_MODEL_eb451834294b449785e541bc949db617"
                ],
                "layout": "IPY_MODEL_8f4eadf5cba049c59a2ed0fe2de5994c"
            }
        },
        "a284c3a109b9476b96a40bd246fbdad0": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "8f68dfe545c44aabb91659f3eaf963c1": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "376bb3fdeaba4c71b2bfc7fa6f3fb75e": {
            "model_name": "DropdownModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_options_labels": [
                    "True Train Price",
                    "Predicted Train Price",
                    "True Test Price",
                    "Predicted Test Price"
                ],
                "description": "df_model",
                "index": 0,
                "layout": "IPY_MODEL_a284c3a109b9476b96a40bd246fbdad0",
                "style": "IPY_MODEL_8f68dfe545c44aabb91659f3eaf963c1"
            }
        },
        "64808b6988cc43f4b78fd5a291b45b90": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "863f592d5c1e47598d621de16d9554d1": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "0d600d815601400dbab9a6a776559615": {
            "model_name": "TextModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "true_colname",
                "layout": "IPY_MODEL_64808b6988cc43f4b78fd5a291b45b90",
                "style": "IPY_MODEL_863f592d5c1e47598d621de16d9554d1",
                "value": "True Test Price"
            }
        },
        "1aefbf5d0c7a41899acbc81080f90eb3": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "4756095468e24392b12877a4f404e769": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "0939aff6e5cf40c48302378889483f8a": {
            "model_name": "TextModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "pred_colname",
                "layout": "IPY_MODEL_1aefbf5d0c7a41899acbc81080f90eb3",
                "style": "IPY_MODEL_4756095468e24392b12877a4f404e769",
                "value": "Predicted Test Price"
            }
        },
        "4edae6fa85ea4335983fef320491b599": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "04a709c06aa244d7b94e49c392124944": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "f5ccf63a31734888b4050d34b9ca0e84": {
            "model_name": "DropdownModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_options_labels": [
                    "-4",
                    "-3",
                    "-2",
                    "-1",
                    "0",
                    "1",
                    "2",
                    "3"
                ],
                "description": "shift_list",
                "index": 0,
                "layout": "IPY_MODEL_4edae6fa85ea4335983fef320491b599",
                "style": "IPY_MODEL_04a709c06aa244d7b94e49c392124944"
            }
        },
        "be810d0f6e874ce5b6935c6eee266290": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "d2c210ddefac4370811cded457a8d00d": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "36964d87bd70479386aec237dd3983a9": {
            "model_name": "CheckboxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "show_results",
                "disabled": false,
                "layout": "IPY_MODEL_be810d0f6e874ce5b6935c6eee266290",
                "style": "IPY_MODEL_d2c210ddefac4370811cded457a8d00d",
                "value": true
            }
        },
        "123c94ecf887410fbc5e9347851b88e6": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "eb451834294b449785e541bc949db617": {
            "model_name": "OutputModel",
            "model_module": "@jupyter-widgets/output",
            "model_module_version": "1.0.0",
            "state": {
                "layout": "IPY_MODEL_123c94ecf887410fbc5e9347851b88e6",
                "outputs": [
                    {
                        "output_type": "error",
                        "ename": "TypeError",
                        "evalue": "string indices must be integers",
                        "traceback": [
                            "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
                            "\u001b[1;31mTypeError\u001b[0m                                 Traceback (most recent call last)",
                            "\u001b[1;32m~\\Anaconda3\\envs\\learn-env-ext\\lib\\site-packages\\ipywidgets\\widgets\\interaction.py\u001b[0m in \u001b[0;36mupdate\u001b[1;34m(self, *args)\u001b[0m\n\u001b[0;32m    249\u001b[0m                     \u001b[0mvalue\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mwidget\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mget_interact_value\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    250\u001b[0m                     \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[1;33m[\u001b[0m\u001b[0mwidget\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0m_kwarg\u001b[0m\u001b[1;33m]\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mvalue\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m--> 251\u001b[1;33m                 \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mresult\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mf\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m**\u001b[0m\u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m    252\u001b[0m                 \u001b[0mshow_inline_matplotlib_plots\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    253\u001b[0m                 \u001b[1;32mif\u001b[0m \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mauto_display\u001b[0m \u001b[1;32mand\u001b[0m \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mresult\u001b[0m \u001b[1;32mis\u001b[0m \u001b[1;32mnot\u001b[0m \u001b[1;32mNone\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
                            "\u001b[1;32m<ipython-input-187-e9a6112a7084>\u001b[0m in \u001b[0;36mcompare_time_shifted_model\u001b[1;34m(df_model, true_colname, pred_colname, shift_list, show_results)\u001b[0m\n\u001b[0;32m      5\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m      6\u001b[0m     \u001b[1;31m# GET EVALUATION METRICS FROM PREDICTIONS\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m----> 7\u001b[1;33m     \u001b[0mtrue_test_series\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mdf_model\u001b[0m\u001b[1;33m[\u001b[0m\u001b[0mtrue_colname\u001b[0m\u001b[1;33m]\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mdropna\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m      8\u001b[0m     \u001b[0mpred_test_series\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mdf_model\u001b[0m\u001b[1;33m[\u001b[0m\u001b[0mpred_colname\u001b[0m\u001b[1;33m]\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mdropna\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m      9\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n",
                            "\u001b[1;31mTypeError\u001b[0m: string indices must be integers"
                        ]
                    }
                ]
            }
        },
        "b2e339079f904350a39bd23a79a63d19": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "2c0a49d190374b1499c72ead87285a84": {
            "model_name": "VBoxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_dom_classes": [
                    "widget-interact"
                ],
                "children": [
                    "IPY_MODEL_23ead00b7cb14487bf11406e832d03d9",
                    "IPY_MODEL_dcc2d22e530648fab82aca0cc57696b1",
                    "IPY_MODEL_d1ab9fb36de94a25a7ee13257b12c1dd",
                    "IPY_MODEL_1e6da34435b9467f91ccc7a2fe90a156",
                    "IPY_MODEL_2923a8671b06442881168847966e602a",
                    "IPY_MODEL_b79cb0d0e8764188bba19714378d72de"
                ],
                "layout": "IPY_MODEL_b2e339079f904350a39bd23a79a63d19"
            }
        },
        "3eb2ad41d04d4c398399376347fa0498": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "09df6e458a9642f2ac2ef9105afe1c08": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "23ead00b7cb14487bf11406e832d03d9": {
            "model_name": "DropdownModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_options_labels": [
                    "True Train Price",
                    "Predicted Train Price",
                    "True Test Price",
                    "Predicted Test Price"
                ],
                "description": "df_model",
                "index": 0,
                "layout": "IPY_MODEL_3eb2ad41d04d4c398399376347fa0498",
                "style": "IPY_MODEL_09df6e458a9642f2ac2ef9105afe1c08"
            }
        },
        "9fe405bea87d4e38b25ca5df1b5a9095": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "6c9257a26f334a019b6ee1ae8d708007": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "dcc2d22e530648fab82aca0cc57696b1": {
            "model_name": "TextModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "true_colname",
                "layout": "IPY_MODEL_9fe405bea87d4e38b25ca5df1b5a9095",
                "style": "IPY_MODEL_6c9257a26f334a019b6ee1ae8d708007",
                "value": "True Test Price"
            }
        },
        "651d675c26e24bc58d26d990ed0cbd9e": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "c4e5cf715db642b192d97a2fa92fd2dd": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "d1ab9fb36de94a25a7ee13257b12c1dd": {
            "model_name": "TextModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "pred_colname",
                "layout": "IPY_MODEL_651d675c26e24bc58d26d990ed0cbd9e",
                "style": "IPY_MODEL_c4e5cf715db642b192d97a2fa92fd2dd",
                "value": "Predicted Test Price"
            }
        },
        "0882890ce8c54d37bf3e9b4ac31ef8b5": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "ac472cfa3c0d49d88ee493f7d4ca3cc0": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "1e6da34435b9467f91ccc7a2fe90a156": {
            "model_name": "DropdownModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_options_labels": [
                    "-4",
                    "-3",
                    "-2",
                    "-1",
                    "0",
                    "1",
                    "2",
                    "3"
                ],
                "description": "shift_list",
                "index": 0,
                "layout": "IPY_MODEL_0882890ce8c54d37bf3e9b4ac31ef8b5",
                "style": "IPY_MODEL_ac472cfa3c0d49d88ee493f7d4ca3cc0"
            }
        },
        "1fa93529090048679e996819f10e724c": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "737c31e317b44f9888effcb7e9f61707": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "2923a8671b06442881168847966e602a": {
            "model_name": "CheckboxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "show_results",
                "disabled": false,
                "layout": "IPY_MODEL_1fa93529090048679e996819f10e724c",
                "style": "IPY_MODEL_737c31e317b44f9888effcb7e9f61707",
                "value": true
            }
        },
        "9ee4eb501b184fd1ace4935a72bdb973": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "b79cb0d0e8764188bba19714378d72de": {
            "model_name": "OutputModel",
            "model_module": "@jupyter-widgets/output",
            "model_module_version": "1.0.0",
            "state": {
                "layout": "IPY_MODEL_9ee4eb501b184fd1ace4935a72bdb973",
                "outputs": [
                    {
                        "output_type": "error",
                        "ename": "TypeError",
                        "evalue": "string indices must be integers",
                        "traceback": [
                            "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
                            "\u001b[1;31mTypeError\u001b[0m                                 Traceback (most recent call last)",
                            "\u001b[1;32m~\\Anaconda3\\envs\\learn-env-ext\\lib\\site-packages\\ipywidgets\\widgets\\interaction.py\u001b[0m in \u001b[0;36mupdate\u001b[1;34m(self, *args)\u001b[0m\n\u001b[0;32m    249\u001b[0m                     \u001b[0mvalue\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mwidget\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mget_interact_value\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    250\u001b[0m                     \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[1;33m[\u001b[0m\u001b[0mwidget\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0m_kwarg\u001b[0m\u001b[1;33m]\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mvalue\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m--> 251\u001b[1;33m                 \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mresult\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mf\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m**\u001b[0m\u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m    252\u001b[0m                 \u001b[0mshow_inline_matplotlib_plots\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    253\u001b[0m                 \u001b[1;32mif\u001b[0m \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mauto_display\u001b[0m \u001b[1;32mand\u001b[0m \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mresult\u001b[0m \u001b[1;32mis\u001b[0m \u001b[1;32mnot\u001b[0m \u001b[1;32mNone\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
                            "\u001b[1;32m<ipython-input-187-e9a6112a7084>\u001b[0m in \u001b[0;36mcompare_time_shifted_model\u001b[1;34m(df_model, true_colname, pred_colname, shift_list, show_results)\u001b[0m\n\u001b[0;32m      5\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m      6\u001b[0m     \u001b[1;31m# GET EVALUATION METRICS FROM PREDICTIONS\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m----> 7\u001b[1;33m     \u001b[0mtrue_test_series\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mdf_model\u001b[0m\u001b[1;33m[\u001b[0m\u001b[0mtrue_colname\u001b[0m\u001b[1;33m]\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mdropna\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m      8\u001b[0m     \u001b[0mpred_test_series\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mdf_model\u001b[0m\u001b[1;33m[\u001b[0m\u001b[0mpred_colname\u001b[0m\u001b[1;33m]\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mdropna\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m      9\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n",
                            "\u001b[1;31mTypeError\u001b[0m: string indices must be integers"
                        ]
                    }
                ]
            }
        },
        "3637de2ab07d4b7780841e74f678a15e": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "c192f43d1fb9442daaa2e6370a4793bb": {
            "model_name": "VBoxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_dom_classes": [
                    "widget-interact"
                ],
                "children": [
                    "IPY_MODEL_d949f8aaefe04db9b87df513466a4a02",
                    "IPY_MODEL_2112b03612ed4f1c850e7817132fe255",
                    "IPY_MODEL_f2ea771748644e13b61bc928c8f2433e",
                    "IPY_MODEL_ca50a3e660d1465c8ca600e1267cde1c",
                    "IPY_MODEL_fbb5b4cd047b41938d80030b057b61e2",
                    "IPY_MODEL_cc4afbbc23974adfbd79f9b896415071"
                ],
                "layout": "IPY_MODEL_3637de2ab07d4b7780841e74f678a15e"
            }
        },
        "b745b1009a874dbba12eefe9dce5051b": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "2236b40b3de2418b8faeccac22d2bb7d": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "d949f8aaefe04db9b87df513466a4a02": {
            "model_name": "DropdownModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_options_labels": [
                    "True Train Price",
                    "Predicted Train Price",
                    "True Test Price",
                    "Predicted Test Price"
                ],
                "description": "df_model",
                "index": 0,
                "layout": "IPY_MODEL_b745b1009a874dbba12eefe9dce5051b",
                "style": "IPY_MODEL_2236b40b3de2418b8faeccac22d2bb7d"
            }
        },
        "a6c8d954e0ff4ea493e77c98f976122b": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "5a417d820c374f90b50df2d1b921a09e": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "2112b03612ed4f1c850e7817132fe255": {
            "model_name": "TextModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "true_colname",
                "layout": "IPY_MODEL_a6c8d954e0ff4ea493e77c98f976122b",
                "style": "IPY_MODEL_5a417d820c374f90b50df2d1b921a09e",
                "value": "True Test Price"
            }
        },
        "96e3f7a43d0b4248a66240970a7e8f03": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "ee215bf58276414d9960ee68ac9093e0": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "f2ea771748644e13b61bc928c8f2433e": {
            "model_name": "TextModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "pred_colname",
                "layout": "IPY_MODEL_96e3f7a43d0b4248a66240970a7e8f03",
                "style": "IPY_MODEL_ee215bf58276414d9960ee68ac9093e0",
                "value": "Predicted Test Price"
            }
        },
        "0aaa91bb5c654d0b88376e07c8c00afc": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "3ad4fbe4517242fd876657721cad0d38": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "ca50a3e660d1465c8ca600e1267cde1c": {
            "model_name": "DropdownModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_options_labels": [
                    "-4",
                    "-3",
                    "-2",
                    "-1",
                    "0",
                    "1",
                    "2",
                    "3",
                    "4"
                ],
                "description": "shift_list",
                "index": 0,
                "layout": "IPY_MODEL_0aaa91bb5c654d0b88376e07c8c00afc",
                "style": "IPY_MODEL_3ad4fbe4517242fd876657721cad0d38"
            }
        },
        "1b2136ed48b94167ba4d45978288c5c3": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "74d6fd5ed8d34117b038d4bd7b2f34f2": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "fbb5b4cd047b41938d80030b057b61e2": {
            "model_name": "CheckboxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "show_results",
                "disabled": false,
                "layout": "IPY_MODEL_1b2136ed48b94167ba4d45978288c5c3",
                "style": "IPY_MODEL_74d6fd5ed8d34117b038d4bd7b2f34f2",
                "value": true
            }
        },
        "ae68581d1fdc40b09a61fe97b0edff82": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "cc4afbbc23974adfbd79f9b896415071": {
            "model_name": "OutputModel",
            "model_module": "@jupyter-widgets/output",
            "model_module_version": "1.0.0",
            "state": {
                "layout": "IPY_MODEL_ae68581d1fdc40b09a61fe97b0edff82",
                "outputs": [
                    {
                        "output_type": "error",
                        "ename": "TypeError",
                        "evalue": "string indices must be integers",
                        "traceback": [
                            "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
                            "\u001b[1;31mTypeError\u001b[0m                                 Traceback (most recent call last)",
                            "\u001b[1;32m~\\Anaconda3\\envs\\learn-env-ext\\lib\\site-packages\\ipywidgets\\widgets\\interaction.py\u001b[0m in \u001b[0;36mupdate\u001b[1;34m(self, *args)\u001b[0m\n\u001b[0;32m    249\u001b[0m                     \u001b[0mvalue\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mwidget\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mget_interact_value\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    250\u001b[0m                     \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[1;33m[\u001b[0m\u001b[0mwidget\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0m_kwarg\u001b[0m\u001b[1;33m]\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mvalue\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m--> 251\u001b[1;33m                 \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mresult\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mf\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m**\u001b[0m\u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m    252\u001b[0m                 \u001b[0mshow_inline_matplotlib_plots\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    253\u001b[0m                 \u001b[1;32mif\u001b[0m \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mauto_display\u001b[0m \u001b[1;32mand\u001b[0m \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mresult\u001b[0m \u001b[1;32mis\u001b[0m \u001b[1;32mnot\u001b[0m \u001b[1;32mNone\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
                            "\u001b[1;32m<ipython-input-187-e9a6112a7084>\u001b[0m in \u001b[0;36mcompare_time_shifted_model\u001b[1;34m(df_model, true_colname, pred_colname, shift_list, show_results)\u001b[0m\n\u001b[0;32m      5\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m      6\u001b[0m     \u001b[1;31m# GET EVALUATION METRICS FROM PREDICTIONS\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m----> 7\u001b[1;33m     \u001b[0mtrue_test_series\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mdf_model\u001b[0m\u001b[1;33m[\u001b[0m\u001b[0mtrue_colname\u001b[0m\u001b[1;33m]\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mdropna\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m      8\u001b[0m     \u001b[0mpred_test_series\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mdf_model\u001b[0m\u001b[1;33m[\u001b[0m\u001b[0mpred_colname\u001b[0m\u001b[1;33m]\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mdropna\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m      9\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n",
                            "\u001b[1;31mTypeError\u001b[0m: string indices must be integers"
                        ]
                    }
                ]
            }
        },
        "54fdccd15b03487185c6f6841c227056": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "4f090315eec142cbba0047c85d6aaaf4": {
            "model_name": "VBoxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_dom_classes": [
                    "widget-interact"
                ],
                "children": [
                    "IPY_MODEL_8baf6cabe1ed485fb46e9704c0f9722e",
                    "IPY_MODEL_0a5746d6b6334faf91699a8bdf362c52",
                    "IPY_MODEL_7eaf78c3c9dc409e8fdc28f0b8825f6c"
                ],
                "layout": "IPY_MODEL_54fdccd15b03487185c6f6841c227056"
            }
        },
        "d53ed673f6bd42018ec06d9ad5574688": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "2997e79992184f088c0c147b9f43c0e5": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "8baf6cabe1ed485fb46e9704c0f9722e": {
            "model_name": "DropdownModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_options_labels": [
                    "True Train Price",
                    "Predicted Train Price",
                    "True Test Price",
                    "Predicted Test Price"
                ],
                "description": "df_model",
                "index": 0,
                "layout": "IPY_MODEL_d53ed673f6bd42018ec06d9ad5574688",
                "style": "IPY_MODEL_2997e79992184f088c0c147b9f43c0e5"
            }
        },
        "a19729aa714e4b3795d033a646adf39d": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "f26ec9892edf4f82b59725ad7ae92efb": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "0a5746d6b6334faf91699a8bdf362c52": {
            "model_name": "DropdownModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_options_labels": [
                    "-4",
                    "-3",
                    "-2",
                    "-1",
                    "0",
                    "1",
                    "2",
                    "3",
                    "4"
                ],
                "description": "shift_list",
                "index": 0,
                "layout": "IPY_MODEL_a19729aa714e4b3795d033a646adf39d",
                "style": "IPY_MODEL_f26ec9892edf4f82b59725ad7ae92efb"
            }
        },
        "54857a35a1e946f8aedc63fecae62267": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "7eaf78c3c9dc409e8fdc28f0b8825f6c": {
            "model_name": "OutputModel",
            "model_module": "@jupyter-widgets/output",
            "model_module_version": "1.0.0",
            "state": {
                "layout": "IPY_MODEL_54857a35a1e946f8aedc63fecae62267",
                "outputs": [
                    {
                        "output_type": "error",
                        "ename": "TypeError",
                        "evalue": "string indices must be integers",
                        "traceback": [
                            "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
                            "\u001b[1;31mTypeError\u001b[0m                                 Traceback (most recent call last)",
                            "\u001b[1;32m~\\Anaconda3\\envs\\learn-env-ext\\lib\\site-packages\\ipywidgets\\widgets\\interaction.py\u001b[0m in \u001b[0;36mupdate\u001b[1;34m(self, *args)\u001b[0m\n\u001b[0;32m    249\u001b[0m                     \u001b[0mvalue\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mwidget\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mget_interact_value\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    250\u001b[0m                     \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[1;33m[\u001b[0m\u001b[0mwidget\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0m_kwarg\u001b[0m\u001b[1;33m]\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mvalue\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m--> 251\u001b[1;33m                 \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mresult\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mf\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m**\u001b[0m\u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m    252\u001b[0m                 \u001b[0mshow_inline_matplotlib_plots\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    253\u001b[0m                 \u001b[1;32mif\u001b[0m \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mauto_display\u001b[0m \u001b[1;32mand\u001b[0m \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mresult\u001b[0m \u001b[1;32mis\u001b[0m \u001b[1;32mnot\u001b[0m \u001b[1;32mNone\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
                            "\u001b[1;32m<ipython-input-278-09bfaf278247>\u001b[0m in \u001b[0;36mplot_shift_list\u001b[1;34m(df_model, shift_list)\u001b[0m\n\u001b[0;32m      8\u001b[0m     \u001b[0mpred_colname\u001b[0m\u001b[1;33m=\u001b[0m\u001b[1;34m'Predicted Test Price'\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m      9\u001b[0m     \u001b[0mdf_shift\u001b[0m\u001b[1;33m=\u001b[0m\u001b[0mpd\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mDataFrame\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m---> 10\u001b[1;33m     \u001b[0mdf_shift\u001b[0m\u001b[1;33m[\u001b[0m\u001b[0mpred_colname\u001b[0m\u001b[1;33m]\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mdf_model\u001b[0m\u001b[1;33m[\u001b[0m\u001b[0mpred_colname\u001b[0m\u001b[1;33m]\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mshift\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mshift_list\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m     11\u001b[0m     \u001b[0mdf_shift\u001b[0m\u001b[1;33m[\u001b[0m\u001b[0mtrue_colname\u001b[0m\u001b[1;33m]\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mdf_model\u001b[0m\u001b[1;33m[\u001b[0m\u001b[0mtrue_colname\u001b[0m\u001b[1;33m]\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m     12\u001b[0m     \u001b[0mdf_shift\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mdropna\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0minplace\u001b[0m\u001b[1;33m=\u001b[0m\u001b[1;32mTrue\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
                            "\u001b[1;31mTypeError\u001b[0m: string indices must be integers"
                        ]
                    }
                ]
            }
        },
        "7dc6872ae1964f6d9df36e73d0da92c7": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "4ee142c27936427ca61729c3f15fb90f": {
            "model_name": "VBoxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_dom_classes": [
                    "widget-interact"
                ],
                "children": [
                    "IPY_MODEL_f50e24bb48314e0c94da65fa0b8a64ac",
                    "IPY_MODEL_e6bc2baa95d84a23bdc97c7d87cc86e1",
                    "IPY_MODEL_40fa9c59fc7742b2aacdd14fddcfa4f5"
                ],
                "layout": "IPY_MODEL_7dc6872ae1964f6d9df36e73d0da92c7"
            }
        },
        "84ca88c507fa4e9daf3f1c7468ece644": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "2d32e09280954379b89bb945bf743e80": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "f50e24bb48314e0c94da65fa0b8a64ac": {
            "model_name": "DropdownModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_options_labels": [
                    "True Train Price",
                    "Predicted Train Price",
                    "True Test Price",
                    "Predicted Test Price"
                ],
                "description": "df_model",
                "index": 0,
                "layout": "IPY_MODEL_84ca88c507fa4e9daf3f1c7468ece644",
                "style": "IPY_MODEL_2d32e09280954379b89bb945bf743e80"
            }
        },
        "fc67461352ea49fbb8543c40893cd9f7": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "3464f99365af4757b59f1223ab6ce3a1": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "e6bc2baa95d84a23bdc97c7d87cc86e1": {
            "model_name": "DropdownModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_options_labels": [
                    "-4",
                    "-3",
                    "-2",
                    "-1",
                    "0",
                    "1",
                    "2",
                    "3",
                    "4"
                ],
                "description": "shift_list",
                "index": 0,
                "layout": "IPY_MODEL_fc67461352ea49fbb8543c40893cd9f7",
                "style": "IPY_MODEL_3464f99365af4757b59f1223ab6ce3a1"
            }
        },
        "2010a6f8ff6842bebdf49179345c8128": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "40fa9c59fc7742b2aacdd14fddcfa4f5": {
            "model_name": "OutputModel",
            "model_module": "@jupyter-widgets/output",
            "model_module_version": "1.0.0",
            "state": {
                "layout": "IPY_MODEL_2010a6f8ff6842bebdf49179345c8128",
                "outputs": [
                    {
                        "output_type": "error",
                        "ename": "TypeError",
                        "evalue": "'numpy.int32' object is not iterable",
                        "traceback": [
                            "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
                            "\u001b[1;31mTypeError\u001b[0m                                 Traceback (most recent call last)",
                            "\u001b[1;32m~\\Anaconda3\\envs\\learn-env-ext\\lib\\site-packages\\ipywidgets\\widgets\\interaction.py\u001b[0m in \u001b[0;36mupdate\u001b[1;34m(self, *args)\u001b[0m\n\u001b[0;32m    249\u001b[0m                     \u001b[0mvalue\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mwidget\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mget_interact_value\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    250\u001b[0m                     \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[1;33m[\u001b[0m\u001b[0mwidget\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0m_kwarg\u001b[0m\u001b[1;33m]\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mvalue\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m--> 251\u001b[1;33m                 \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mresult\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mf\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m**\u001b[0m\u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m    252\u001b[0m                 \u001b[0mshow_inline_matplotlib_plots\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    253\u001b[0m                 \u001b[1;32mif\u001b[0m \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mauto_display\u001b[0m \u001b[1;32mand\u001b[0m \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mresult\u001b[0m \u001b[1;32mis\u001b[0m \u001b[1;32mnot\u001b[0m \u001b[1;32mNone\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
                            "\u001b[1;32m<ipython-input-280-93d85d7df7bb>\u001b[0m in \u001b[0;36mplot_shift_list\u001b[1;34m(df_model, shift_list)\u001b[0m\n\u001b[0;32m      5\u001b[0m \u001b[1;33m@\u001b[0m\u001b[0minteract\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mshift_list\u001b[0m\u001b[1;33m=\u001b[0m\u001b[0mshift_list_in\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m      6\u001b[0m \u001b[1;32mdef\u001b[0m \u001b[0mplot_shift_list\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mdf_model\u001b[0m\u001b[1;33m=\u001b[0m\u001b[0mdf_model1\u001b[0m\u001b[1;33m,\u001b[0m\u001b[0mshift_list\u001b[0m\u001b[1;33m=\u001b[0m\u001b[0mshift_list\u001b[0m \u001b[1;33m)\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m----> 7\u001b[1;33m     \u001b[1;32mfor\u001b[0m \u001b[0mshift\u001b[0m \u001b[1;32min\u001b[0m \u001b[0mshift_list\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m      8\u001b[0m         \u001b[0mtrue_colname\u001b[0m\u001b[1;33m=\u001b[0m\u001b[1;34m'True Test Price'\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m      9\u001b[0m         \u001b[0mpred_colname\u001b[0m\u001b[1;33m=\u001b[0m\u001b[1;34m'Predicted Test Price'\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
                            "\u001b[1;31mTypeError\u001b[0m: 'numpy.int32' object is not iterable"
                        ]
                    }
                ]
            }
        },
        "774705a9fe6d45d38800210bed986e1c": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "78386a16aaa84f14a78409b3b30b426f": {
            "model_name": "VBoxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_dom_classes": [
                    "widget-interact"
                ],
                "children": [
                    "IPY_MODEL_2b819702f2fd49c9a02b0ed39372dc7a",
                    "IPY_MODEL_e5478d64981a4b41a5e00d66a0c07b5e",
                    "IPY_MODEL_ade0666469c44a75a5d613b05b05a13a",
                    "IPY_MODEL_c331c9c9e8d644ab8e37f993cafa7665"
                ],
                "layout": "IPY_MODEL_774705a9fe6d45d38800210bed986e1c"
            }
        },
        "01979daa327c4e00a92f291263d74c31": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "d4d4d91852ad4381aced89808c2679a4": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "2b819702f2fd49c9a02b0ed39372dc7a": {
            "model_name": "DropdownModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_options_labels": [
                    "115.98",
                    "116.19999999999999",
                    "116.47999999999999",
                    "116.47999999999999",
                    "116.77",
                    "116.72",
                    "116.73",
                    "116.63",
                    "116.54",
                    "116.28999999999999",
                    "116.13",
                    "116.13",
                    "116.36",
                    "116.65",
                    "116.55",
                    "117.12000000000002",
                    "117.08000000000001",
                    "117.19",
                    "117.19",
                    "117.1",
                    "117.1",
                    "116.86",
                    "116.11000000000001",
                    "116.42",
                    "115.68",
                    "115.67",
                    "115.94",
                    "115.92000000000002",
                    "115.89",
                    "116.45",
                    "116.38",
                    "116.55",
                    "116.83",
                    "116.89000000000001",
                    "116.89000000000001",
                    "116.79000000000002",
                    "114.93",
                    "115.57",
                    "115.94",
                    "115.94",
                    "115.84",
                    "116.0",
                    "116.38999999999999",
                    "115.16",
                    "114.98",
                    "114.66",
                    "114.77000000000001",
                    "114.77000000000001",
                    "113.87",
                    "113.78",
                    "114.11",
                    "114.3",
                    "114.51",
                    "114.31999999999998",
                    "114.49",
                    "114.59",
                    "114.7",
                    "113.01999999999998",
                    "112.48",
                    "112.48",
                    "113.23",
                    "113.58",
                    "113.88",
                    "113.76",
                    "113.4",
                    "112.74000000000001",
                    "112.16",
                    "112.99",
                    "113.45",
                    "113.45",
                    "114.38",
                    "112.07",
                    "112.07",
                    "111.54",
                    "111.16",
                    "110.96",
                    "111.49",
                    "111.12999999999998",
                    "111.58000000000001",
                    "111.58000000000001",
                    "112.5",
                    "112.5",
                    "112.9",
                    "112.92000000000002",
                    "112.68000000000002",
                    "111.52",
                    "112.27",
                    "112.27",
                    "112.27",
                    "112.27",
                    "112.27",
                    "112.88000000000001",
                    "112.92000000000002",
                    "113.54",
                    "113.74",
                    "113.86",
                    "113.66000000000001",
                    "113.72",
                    "113.27",
                    "112.22",
                    "112.94",
                    "113.37",
                    "113.37",
                    "113.18",
                    "113.12",
                    "112.73000000000002",
                    "111.98",
                    "112.37999999999998",
                    "112.31",
                    "112.27",
                    "112.2",
                    "112.06",
                    "111.88",
                    "112.53",
                    "112.53",
                    "112.53",
                    "113.08",
                    "113.08",
                    "113.24",
                    "113.19",
                    "112.64000000000001",
                    "112.71",
                    "112.7",
                    "112.4",
                    "112.34",
                    "112.5",
                    "112.5",
                    "111.37",
                    "110.89000000000001",
                    "110.96",
                    "110.78",
                    "110.64",
                    "110.56000000000002",
                    "110.92",
                    "111.54",
                    "111.25999999999999",
                    "111.25999999999999",
                    "111.30999999999999",
                    "111.31999999999998",
                    "111.31999999999998",
                    "111.41",
                    "111.41",
                    "111.41",
                    "111.41",
                    "111.41",
                    "111.41",
                    "111.41",
                    "111.41",
                    "111.38",
                    "111.11999999999999",
                    "110.83",
                    "111.02999999999999",
                    "111.02999999999999",
                    "110.6",
                    "110.29999999999998",
                    "109.09999999999998",
                    "109.57",
                    "108.99",
                    "108.97",
                    "109.12",
                    "109.04999999999998",
                    "109.03999999999999",
                    "109.52",
                    "109.81",
                    "109.34",
                    "109.22999999999999",
                    "109.22999999999999",
                    "108.98",
                    "109.02",
                    "108.18",
                    "108.18",
                    "108.51",
                    "108.51",
                    "108.51",
                    "108.0",
                    "107.93000000000002",
                    "107.91",
                    "108.77000000000001",
                    "108.65",
                    "108.07",
                    "108.28",
                    "108.65",
                    "108.05",
                    "109.60000000000001",
                    "110.18",
                    "110.5",
                    "110.48",
                    "110.6",
                    "110.64",
                    "110.89000000000001",
                    "111.73",
                    "111.06",
                    "111.38",
                    "111.41",
                    "111.66",
                    "111.65",
                    "111.5",
                    "111.83",
                    "111.83",
                    "112.07",
                    "112.07",
                    "112.13999999999999",
                    "112.12",
                    "112.56",
                    "112.82",
                    "112.82",
                    "113.37",
                    "113.46",
                    "113.46",
                    "113.45",
                    "113.47",
                    "113.85000000000001",
                    "114.24",
                    "114.24",
                    "114.24",
                    "114.21999999999998",
                    "113.93000000000002",
                    "113.88",
                    "114.57",
                    "114.51",
                    "114.38",
                    "114.38",
                    "113.83",
                    "114.05",
                    "113.88",
                    "113.91",
                    "113.70000000000002",
                    "113.64",
                    "113.59",
                    "113.59",
                    "113.5",
                    "113.5",
                    "113.93000000000002",
                    "114.16999999999999",
                    "114.06",
                    "114.07999999999998",
                    "114.31999999999998",
                    "114.18",
                    "113.99000000000001",
                    "114.06",
                    "114.06",
                    "113.88",
                    "113.86",
                    "113.86",
                    "114.05",
                    "114.29",
                    "114.11999999999999",
                    "114.11999999999999",
                    "114.21",
                    "114.09",
                    "114.11999999999999",
                    "114.16",
                    "114.05",
                    "114.44999999999999",
                    "115.5",
                    "115.35",
                    "115.35",
                    "115.11",
                    "115.11",
                    "115.2",
                    "115.36",
                    "115.32",
                    "115.27999999999999",
                    "115.22",
                    "115.22",
                    "115.27999999999999",
                    "115.48",
                    "116.32",
                    "116.01000000000002",
                    "115.86",
                    "115.86",
                    "116.06000000000002",
                    "116.14",
                    "116.27",
                    "116.19999999999999",
                    "116.33999999999999",
                    "116.56",
                    "116.4",
                    "116.45",
                    "116.45",
                    "116.45"
                ],
                "description": "true",
                "index": 0,
                "layout": "IPY_MODEL_01979daa327c4e00a92f291263d74c31",
                "style": "IPY_MODEL_d4d4d91852ad4381aced89808c2679a4"
            }
        },
        "56d380697f0145138b5e16a602e650f9": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "566f295bd23d4494911c11a4bee9a891": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "e5478d64981a4b41a5e00d66a0c07b5e": {
            "model_name": "DropdownModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_options_labels": [
                    "115.85887908935547",
                    "115.96217346191406",
                    "116.21099853515625",
                    "116.51026916503906",
                    "116.44573211669922",
                    "116.77699279785156",
                    "116.65660095214844",
                    "116.65394592285156",
                    "116.52963256835938",
                    "116.43795013427734",
                    "116.16097259521484",
                    "116.02178192138672",
                    "116.0703125",
                    "116.36695861816406",
                    "116.69207000732422",
                    "116.50367736816406",
                    "117.20589447021484",
                    "117.04352569580078",
                    "117.14323425292969",
                    "117.11446380615234",
                    "116.98936462402344",
                    "117.00788116455078",
                    "116.7171859741211",
                    "115.85929870605469",
                    "116.379638671875",
                    "115.51661682128906",
                    "115.6009521484375",
                    "115.97655487060547",
                    "115.93025970458984",
                    "115.880859375",
                    "116.55480194091797",
                    "116.37938690185547",
                    "116.5513916015625",
                    "116.86123657226562",
                    "116.86395263671875",
                    "116.82482147216797",
                    "116.69039154052734",
                    "114.53022766113281",
                    "115.49700927734375",
                    "116.01007080078125",
                    "115.95280456542969",
                    "115.81319427490234",
                    "116.0107421875",
                    "116.45984649658203",
                    "114.94313049316406",
                    "114.85895538330078",
                    "114.59385681152344",
                    "114.76580047607422",
                    "114.7887191772461",
                    "113.8150863647461",
                    "113.7582778930664",
                    "114.15794372558594",
                    "114.37068939208984",
                    "114.57695770263672",
                    "114.3397216796875",
                    "114.51215362548828",
                    "114.6137466430664",
                    "114.71529388427734",
                    "112.92506408691406",
                    "112.41398620605469",
                    "112.46980285644531",
                    "113.26464080810547",
                    "113.66800689697266",
                    "113.95883178710938",
                    "113.79788970947266",
                    "113.39488983154297",
                    "112.7228012084961",
                    "112.15782165527344",
                    "112.9742202758789",
                    "113.51158142089844",
                    "113.49686431884766",
                    "114.4570083618164",
                    "112.06981658935547",
                    "111.99729919433594",
                    "111.56987762451172",
                    "111.21161651611328",
                    "111.02033996582031",
                    "111.49645233154297",
                    "111.23039245605469",
                    "111.60277557373047",
                    "111.64196014404297",
                    "112.50764465332031",
                    "112.55686950683594",
                    "112.91718292236328",
                    "112.9327163696289",
                    "112.66971588134766",
                    "111.54632568359375",
                    "112.18833923339844",
                    "112.27843475341797",
                    "112.27652740478516",
                    "112.2762451171875",
                    "112.2769775390625",
                    "112.87650299072266",
                    "112.9425048828125",
                    "113.55367279052734",
                    "113.75907135009766",
                    "113.85009765625",
                    "113.61683654785156",
                    "113.67030334472656",
                    "113.21281433105469",
                    "112.1783447265625",
                    "112.87167358398438",
                    "113.39126586914062",
                    "113.39349365234375",
                    "113.1799545288086",
                    "113.11089324951172",
                    "112.7244873046875",
                    "111.99266815185547",
                    "112.3542251586914",
                    "112.34068298339844",
                    "112.29927062988281",
                    "112.23140716552734",
                    "112.09429931640625",
                    "111.91594696044922",
                    "112.53155517578125",
                    "112.57424926757812",
                    "112.55375671386719",
                    "113.09176635742188",
                    "113.10319519042969",
                    "113.23992156982422",
                    "113.18119812011719",
                    "112.61956024169922",
                    "112.67369842529297",
                    "112.68890380859375",
                    "112.40240478515625",
                    "112.33646392822266",
                    "112.50235748291016",
                    "112.51812744140625",
                    "111.44834899902344",
                    "110.94120025634766",
                    "110.978759765625",
                    "110.8450698852539",
                    "110.71104431152344",
                    "110.62862396240234",
                    "110.93680572509766",
                    "111.54008483886719",
                    "111.33705139160156",
                    "111.29434967041016",
                    "111.33177185058594",
                    "111.34075164794922",
                    "111.33738708496094",
                    "111.41676330566406",
                    "111.42343139648438",
                    "111.42108917236328",
                    "111.41981506347656",
                    "111.41938018798828",
                    "111.41938018798828",
                    "111.41961669921875",
                    "111.41996765136719",
                    "111.39289093017578",
                    "111.15476989746094",
                    "110.87242126464844",
                    "111.02383422851562",
                    "111.05160522460938",
                    "110.67377471923828",
                    "110.36719512939453",
                    "109.34368133544922",
                    "109.55009460449219",
                    "109.14775085449219",
                    "109.05046844482422",
                    "109.15467071533203",
                    "109.12223815917969",
                    "109.10308837890625",
                    "109.48075866699219",
                    "109.79275512695312",
                    "109.45431518554688",
                    "109.29329681396484",
                    "109.26354217529297",
                    "109.06034851074219",
                    "109.04883575439453",
                    "108.40438842773438",
                    "108.25631713867188",
                    "108.47732543945312",
                    "108.5356674194336",
                    "108.54523468017578",
                    "108.16226196289062",
                    "108.01374816894531",
                    "107.96439361572266",
                    "108.59841918945312",
                    "108.66703796386719",
                    "108.23226928710938",
                    "108.28012084960938",
                    "108.57874298095703",
                    "108.1978759765625",
                    "109.29931640625",
                    "110.04570770263672",
                    "110.43517303466797",
                    "110.46007537841797",
                    "110.5561752319336",
                    "110.60175323486328",
                    "110.82598876953125",
                    "111.62006378173828",
                    "111.09036254882812",
                    "111.30819702148438",
                    "111.373291015625",
                    "111.60984802246094",
                    "111.62543487548828",
                    "111.4856185913086",
                    "111.78169250488281",
                    "111.81543731689453",
                    "112.0406265258789",
                    "112.05807495117188",
                    "112.12079620361328",
                    "112.10579681396484",
                    "112.53006744384766",
                    "112.812744140625",
                    "112.81009674072266",
                    "113.3535385131836",
                    "113.45309448242188",
                    "113.4289321899414",
                    "113.40821075439453",
                    "113.42759704589844",
                    "113.8273696899414",
                    "114.24425506591797",
                    "114.21770477294922",
                    "114.1943588256836",
                    "114.1684799194336",
                    "113.86038970947266",
                    "113.82034301757812",
                    "114.58655548095703",
                    "114.50733947753906",
                    "114.3350830078125",
                    "114.3384780883789",
                    "113.75743103027344",
                    "114.01094055175781",
                    "113.85874938964844",
                    "113.89453125",
                    "113.68414306640625",
                    "113.62745666503906",
                    "113.58773040771484",
                    "113.59453582763672",
                    "113.50528717041016",
                    "113.50639343261719",
                    "113.96165466308594",
                    "114.21331024169922",
                    "114.06380462646484",
                    "114.06715393066406",
                    "114.3234634399414",
                    "114.16009521484375",
                    "113.94795989990234",
                    "114.03315734863281",
                    "114.04373168945312",
                    "113.85340881347656",
                    "113.83856201171875",
                    "113.8500747680664",
                    "114.05702209472656",
                    "114.31290435791016",
                    "114.11112213134766",
                    "114.10076904296875",
                    "114.20171356201172",
                    "114.06999969482422",
                    "114.10161590576172",
                    "114.14958953857422",
                    "114.03076171875",
                    "114.46531677246094",
                    "115.64114379882812",
                    "115.3586654663086",
                    "115.29818725585938",
                    "115.01641082763672",
                    "115.0342025756836",
                    "115.15290069580078",
                    "115.33531188964844",
                    "115.27425384521484",
                    "115.2251968383789",
                    "115.16413116455078",
                    "115.1749267578125",
                    "115.25056457519531",
                    "115.47853088378906",
                    "116.4526138305664",
                    "115.95143127441406",
                    "115.75618743896484",
                    "115.78627014160156",
                    "116.0344009399414",
                    "116.1069564819336",
                    "116.24121856689453",
                    "116.13190460205078",
                    "116.30216979980469",
                    "116.55298614501953",
                    "116.31229400634766",
                    "116.3839340209961",
                    "116.38636779785156"
                ],
                "description": "pred",
                "index": 0,
                "layout": "IPY_MODEL_56d380697f0145138b5e16a602e650f9",
                "style": "IPY_MODEL_566f295bd23d4494911c11a4bee9a891"
            }
        },
        "60bc6473501a4c7888af466f666575d2": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "b2e1c0fcbfe24b578338fbf91d05f4a6": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "ade0666469c44a75a5d613b05b05a13a": {
            "model_name": "DropdownModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_options_labels": [
                    "-4",
                    "-3",
                    "-2",
                    "-1",
                    "0",
                    "1",
                    "2",
                    "3",
                    "4"
                ],
                "description": "shift_list",
                "index": 0,
                "layout": "IPY_MODEL_60bc6473501a4c7888af466f666575d2",
                "style": "IPY_MODEL_b2e1c0fcbfe24b578338fbf91d05f4a6"
            }
        },
        "dc1aa753590f44b8adccb9b57785de2c": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "c331c9c9e8d644ab8e37f993cafa7665": {
            "model_name": "OutputModel",
            "model_module": "@jupyter-widgets/output",
            "model_module_version": "1.0.0",
            "state": {
                "layout": "IPY_MODEL_dc1aa753590f44b8adccb9b57785de2c",
                "outputs": [
                    {
                        "output_type": "error",
                        "ename": "TypeError",
                        "evalue": "'numpy.int32' object is not iterable",
                        "traceback": [
                            "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
                            "\u001b[1;31mTypeError\u001b[0m                                 Traceback (most recent call last)",
                            "\u001b[1;32m~\\Anaconda3\\envs\\learn-env-ext\\lib\\site-packages\\ipywidgets\\widgets\\interaction.py\u001b[0m in \u001b[0;36mupdate\u001b[1;34m(self, *args)\u001b[0m\n\u001b[0;32m    249\u001b[0m                     \u001b[0mvalue\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mwidget\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mget_interact_value\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    250\u001b[0m                     \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[1;33m[\u001b[0m\u001b[0mwidget\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0m_kwarg\u001b[0m\u001b[1;33m]\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mvalue\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m--> 251\u001b[1;33m                 \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mresult\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mf\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m**\u001b[0m\u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m    252\u001b[0m                 \u001b[0mshow_inline_matplotlib_plots\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    253\u001b[0m                 \u001b[1;32mif\u001b[0m \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mauto_display\u001b[0m \u001b[1;32mand\u001b[0m \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mresult\u001b[0m \u001b[1;32mis\u001b[0m \u001b[1;32mnot\u001b[0m \u001b[1;32mNone\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
                            "\u001b[1;32m<ipython-input-283-9d516561e397>\u001b[0m in \u001b[0;36mplot_shift_list\u001b[1;34m(true, pred, shift_list)\u001b[0m\n\u001b[0;32m      8\u001b[0m                     shift_list=shift_list ):\n\u001b[0;32m      9\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m---> 10\u001b[1;33m     \u001b[1;32mfor\u001b[0m \u001b[0mshift\u001b[0m \u001b[1;32min\u001b[0m \u001b[0mshift_list\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m     11\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m     12\u001b[0m         \u001b[0mdf_shift\u001b[0m\u001b[1;33m=\u001b[0m\u001b[0mpd\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mDataFrame\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
                            "\u001b[1;31mTypeError\u001b[0m: 'numpy.int32' object is not iterable"
                        ]
                    }
                ]
            }
        },
        "f989244f645846188bb8c6d2d023d5ff": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "06d4d268ea2d4abeacd0da9e857eae8a": {
            "model_name": "VBoxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_dom_classes": [
                    "widget-interact"
                ],
                "children": [
                    "IPY_MODEL_cd8da1ae676b4516b70de36da74bef39",
                    "IPY_MODEL_476e30b8c2824a75a77a16d25868eef2",
                    "IPY_MODEL_c0bf13be0111454d81a736a498a33eea",
                    "IPY_MODEL_fcd375babbf14d7aab622107f67e273d"
                ],
                "layout": "IPY_MODEL_f989244f645846188bb8c6d2d023d5ff"
            }
        },
        "9a21caeee330427eae7ec29a5658621b": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "8fea744454f64bd78b73399c0ae3a12b": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "cd8da1ae676b4516b70de36da74bef39": {
            "model_name": "DropdownModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_options_labels": [
                    "115.98",
                    "116.19999999999999",
                    "116.47999999999999",
                    "116.47999999999999",
                    "116.77",
                    "116.72",
                    "116.73",
                    "116.63",
                    "116.54",
                    "116.28999999999999",
                    "116.13",
                    "116.13",
                    "116.36",
                    "116.65",
                    "116.55",
                    "117.12000000000002",
                    "117.08000000000001",
                    "117.19",
                    "117.19",
                    "117.1",
                    "117.1",
                    "116.86",
                    "116.11000000000001",
                    "116.42",
                    "115.68",
                    "115.67",
                    "115.94",
                    "115.92000000000002",
                    "115.89",
                    "116.45",
                    "116.38",
                    "116.55",
                    "116.83",
                    "116.89000000000001",
                    "116.89000000000001",
                    "116.79000000000002",
                    "114.93",
                    "115.57",
                    "115.94",
                    "115.94",
                    "115.84",
                    "116.0",
                    "116.38999999999999",
                    "115.16",
                    "114.98",
                    "114.66",
                    "114.77000000000001",
                    "114.77000000000001",
                    "113.87",
                    "113.78",
                    "114.11",
                    "114.3",
                    "114.51",
                    "114.31999999999998",
                    "114.49",
                    "114.59",
                    "114.7",
                    "113.01999999999998",
                    "112.48",
                    "112.48",
                    "113.23",
                    "113.58",
                    "113.88",
                    "113.76",
                    "113.4",
                    "112.74000000000001",
                    "112.16",
                    "112.99",
                    "113.45",
                    "113.45",
                    "114.38",
                    "112.07",
                    "112.07",
                    "111.54",
                    "111.16",
                    "110.96",
                    "111.49",
                    "111.12999999999998",
                    "111.58000000000001",
                    "111.58000000000001",
                    "112.5",
                    "112.5",
                    "112.9",
                    "112.92000000000002",
                    "112.68000000000002",
                    "111.52",
                    "112.27",
                    "112.27",
                    "112.27",
                    "112.27",
                    "112.27",
                    "112.88000000000001",
                    "112.92000000000002",
                    "113.54",
                    "113.74",
                    "113.86",
                    "113.66000000000001",
                    "113.72",
                    "113.27",
                    "112.22",
                    "112.94",
                    "113.37",
                    "113.37",
                    "113.18",
                    "113.12",
                    "112.73000000000002",
                    "111.98",
                    "112.37999999999998",
                    "112.31",
                    "112.27",
                    "112.2",
                    "112.06",
                    "111.88",
                    "112.53",
                    "112.53",
                    "112.53",
                    "113.08",
                    "113.08",
                    "113.24",
                    "113.19",
                    "112.64000000000001",
                    "112.71",
                    "112.7",
                    "112.4",
                    "112.34",
                    "112.5",
                    "112.5",
                    "111.37",
                    "110.89000000000001",
                    "110.96",
                    "110.78",
                    "110.64",
                    "110.56000000000002",
                    "110.92",
                    "111.54",
                    "111.25999999999999",
                    "111.25999999999999",
                    "111.30999999999999",
                    "111.31999999999998",
                    "111.31999999999998",
                    "111.41",
                    "111.41",
                    "111.41",
                    "111.41",
                    "111.41",
                    "111.41",
                    "111.41",
                    "111.41",
                    "111.38",
                    "111.11999999999999",
                    "110.83",
                    "111.02999999999999",
                    "111.02999999999999",
                    "110.6",
                    "110.29999999999998",
                    "109.09999999999998",
                    "109.57",
                    "108.99",
                    "108.97",
                    "109.12",
                    "109.04999999999998",
                    "109.03999999999999",
                    "109.52",
                    "109.81",
                    "109.34",
                    "109.22999999999999",
                    "109.22999999999999",
                    "108.98",
                    "109.02",
                    "108.18",
                    "108.18",
                    "108.51",
                    "108.51",
                    "108.51",
                    "108.0",
                    "107.93000000000002",
                    "107.91",
                    "108.77000000000001",
                    "108.65",
                    "108.07",
                    "108.28",
                    "108.65",
                    "108.05",
                    "109.60000000000001",
                    "110.18",
                    "110.5",
                    "110.48",
                    "110.6",
                    "110.64",
                    "110.89000000000001",
                    "111.73",
                    "111.06",
                    "111.38",
                    "111.41",
                    "111.66",
                    "111.65",
                    "111.5",
                    "111.83",
                    "111.83",
                    "112.07",
                    "112.07",
                    "112.13999999999999",
                    "112.12",
                    "112.56",
                    "112.82",
                    "112.82",
                    "113.37",
                    "113.46",
                    "113.46",
                    "113.45",
                    "113.47",
                    "113.85000000000001",
                    "114.24",
                    "114.24",
                    "114.24",
                    "114.21999999999998",
                    "113.93000000000002",
                    "113.88",
                    "114.57",
                    "114.51",
                    "114.38",
                    "114.38",
                    "113.83",
                    "114.05",
                    "113.88",
                    "113.91",
                    "113.70000000000002",
                    "113.64",
                    "113.59",
                    "113.59",
                    "113.5",
                    "113.5",
                    "113.93000000000002",
                    "114.16999999999999",
                    "114.06",
                    "114.07999999999998",
                    "114.31999999999998",
                    "114.18",
                    "113.99000000000001",
                    "114.06",
                    "114.06",
                    "113.88",
                    "113.86",
                    "113.86",
                    "114.05",
                    "114.29",
                    "114.11999999999999",
                    "114.11999999999999",
                    "114.21",
                    "114.09",
                    "114.11999999999999",
                    "114.16",
                    "114.05",
                    "114.44999999999999",
                    "115.5",
                    "115.35",
                    "115.35",
                    "115.11",
                    "115.11",
                    "115.2",
                    "115.36",
                    "115.32",
                    "115.27999999999999",
                    "115.22",
                    "115.22",
                    "115.27999999999999",
                    "115.48",
                    "116.32",
                    "116.01000000000002",
                    "115.86",
                    "115.86",
                    "116.06000000000002",
                    "116.14",
                    "116.27",
                    "116.19999999999999",
                    "116.33999999999999",
                    "116.56",
                    "116.4",
                    "116.45",
                    "116.45",
                    "116.45"
                ],
                "description": "true",
                "index": 0,
                "layout": "IPY_MODEL_9a21caeee330427eae7ec29a5658621b",
                "style": "IPY_MODEL_8fea744454f64bd78b73399c0ae3a12b"
            }
        },
        "d365088524d64deb9db279d48fb6225f": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "24c7fb1e649f42808c917bdbfee6fccf": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "476e30b8c2824a75a77a16d25868eef2": {
            "model_name": "DropdownModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_options_labels": [
                    "115.85887908935547",
                    "115.96217346191406",
                    "116.21099853515625",
                    "116.51026916503906",
                    "116.44573211669922",
                    "116.77699279785156",
                    "116.65660095214844",
                    "116.65394592285156",
                    "116.52963256835938",
                    "116.43795013427734",
                    "116.16097259521484",
                    "116.02178192138672",
                    "116.0703125",
                    "116.36695861816406",
                    "116.69207000732422",
                    "116.50367736816406",
                    "117.20589447021484",
                    "117.04352569580078",
                    "117.14323425292969",
                    "117.11446380615234",
                    "116.98936462402344",
                    "117.00788116455078",
                    "116.7171859741211",
                    "115.85929870605469",
                    "116.379638671875",
                    "115.51661682128906",
                    "115.6009521484375",
                    "115.97655487060547",
                    "115.93025970458984",
                    "115.880859375",
                    "116.55480194091797",
                    "116.37938690185547",
                    "116.5513916015625",
                    "116.86123657226562",
                    "116.86395263671875",
                    "116.82482147216797",
                    "116.69039154052734",
                    "114.53022766113281",
                    "115.49700927734375",
                    "116.01007080078125",
                    "115.95280456542969",
                    "115.81319427490234",
                    "116.0107421875",
                    "116.45984649658203",
                    "114.94313049316406",
                    "114.85895538330078",
                    "114.59385681152344",
                    "114.76580047607422",
                    "114.7887191772461",
                    "113.8150863647461",
                    "113.7582778930664",
                    "114.15794372558594",
                    "114.37068939208984",
                    "114.57695770263672",
                    "114.3397216796875",
                    "114.51215362548828",
                    "114.6137466430664",
                    "114.71529388427734",
                    "112.92506408691406",
                    "112.41398620605469",
                    "112.46980285644531",
                    "113.26464080810547",
                    "113.66800689697266",
                    "113.95883178710938",
                    "113.79788970947266",
                    "113.39488983154297",
                    "112.7228012084961",
                    "112.15782165527344",
                    "112.9742202758789",
                    "113.51158142089844",
                    "113.49686431884766",
                    "114.4570083618164",
                    "112.06981658935547",
                    "111.99729919433594",
                    "111.56987762451172",
                    "111.21161651611328",
                    "111.02033996582031",
                    "111.49645233154297",
                    "111.23039245605469",
                    "111.60277557373047",
                    "111.64196014404297",
                    "112.50764465332031",
                    "112.55686950683594",
                    "112.91718292236328",
                    "112.9327163696289",
                    "112.66971588134766",
                    "111.54632568359375",
                    "112.18833923339844",
                    "112.27843475341797",
                    "112.27652740478516",
                    "112.2762451171875",
                    "112.2769775390625",
                    "112.87650299072266",
                    "112.9425048828125",
                    "113.55367279052734",
                    "113.75907135009766",
                    "113.85009765625",
                    "113.61683654785156",
                    "113.67030334472656",
                    "113.21281433105469",
                    "112.1783447265625",
                    "112.87167358398438",
                    "113.39126586914062",
                    "113.39349365234375",
                    "113.1799545288086",
                    "113.11089324951172",
                    "112.7244873046875",
                    "111.99266815185547",
                    "112.3542251586914",
                    "112.34068298339844",
                    "112.29927062988281",
                    "112.23140716552734",
                    "112.09429931640625",
                    "111.91594696044922",
                    "112.53155517578125",
                    "112.57424926757812",
                    "112.55375671386719",
                    "113.09176635742188",
                    "113.10319519042969",
                    "113.23992156982422",
                    "113.18119812011719",
                    "112.61956024169922",
                    "112.67369842529297",
                    "112.68890380859375",
                    "112.40240478515625",
                    "112.33646392822266",
                    "112.50235748291016",
                    "112.51812744140625",
                    "111.44834899902344",
                    "110.94120025634766",
                    "110.978759765625",
                    "110.8450698852539",
                    "110.71104431152344",
                    "110.62862396240234",
                    "110.93680572509766",
                    "111.54008483886719",
                    "111.33705139160156",
                    "111.29434967041016",
                    "111.33177185058594",
                    "111.34075164794922",
                    "111.33738708496094",
                    "111.41676330566406",
                    "111.42343139648438",
                    "111.42108917236328",
                    "111.41981506347656",
                    "111.41938018798828",
                    "111.41938018798828",
                    "111.41961669921875",
                    "111.41996765136719",
                    "111.39289093017578",
                    "111.15476989746094",
                    "110.87242126464844",
                    "111.02383422851562",
                    "111.05160522460938",
                    "110.67377471923828",
                    "110.36719512939453",
                    "109.34368133544922",
                    "109.55009460449219",
                    "109.14775085449219",
                    "109.05046844482422",
                    "109.15467071533203",
                    "109.12223815917969",
                    "109.10308837890625",
                    "109.48075866699219",
                    "109.79275512695312",
                    "109.45431518554688",
                    "109.29329681396484",
                    "109.26354217529297",
                    "109.06034851074219",
                    "109.04883575439453",
                    "108.40438842773438",
                    "108.25631713867188",
                    "108.47732543945312",
                    "108.5356674194336",
                    "108.54523468017578",
                    "108.16226196289062",
                    "108.01374816894531",
                    "107.96439361572266",
                    "108.59841918945312",
                    "108.66703796386719",
                    "108.23226928710938",
                    "108.28012084960938",
                    "108.57874298095703",
                    "108.1978759765625",
                    "109.29931640625",
                    "110.04570770263672",
                    "110.43517303466797",
                    "110.46007537841797",
                    "110.5561752319336",
                    "110.60175323486328",
                    "110.82598876953125",
                    "111.62006378173828",
                    "111.09036254882812",
                    "111.30819702148438",
                    "111.373291015625",
                    "111.60984802246094",
                    "111.62543487548828",
                    "111.4856185913086",
                    "111.78169250488281",
                    "111.81543731689453",
                    "112.0406265258789",
                    "112.05807495117188",
                    "112.12079620361328",
                    "112.10579681396484",
                    "112.53006744384766",
                    "112.812744140625",
                    "112.81009674072266",
                    "113.3535385131836",
                    "113.45309448242188",
                    "113.4289321899414",
                    "113.40821075439453",
                    "113.42759704589844",
                    "113.8273696899414",
                    "114.24425506591797",
                    "114.21770477294922",
                    "114.1943588256836",
                    "114.1684799194336",
                    "113.86038970947266",
                    "113.82034301757812",
                    "114.58655548095703",
                    "114.50733947753906",
                    "114.3350830078125",
                    "114.3384780883789",
                    "113.75743103027344",
                    "114.01094055175781",
                    "113.85874938964844",
                    "113.89453125",
                    "113.68414306640625",
                    "113.62745666503906",
                    "113.58773040771484",
                    "113.59453582763672",
                    "113.50528717041016",
                    "113.50639343261719",
                    "113.96165466308594",
                    "114.21331024169922",
                    "114.06380462646484",
                    "114.06715393066406",
                    "114.3234634399414",
                    "114.16009521484375",
                    "113.94795989990234",
                    "114.03315734863281",
                    "114.04373168945312",
                    "113.85340881347656",
                    "113.83856201171875",
                    "113.8500747680664",
                    "114.05702209472656",
                    "114.31290435791016",
                    "114.11112213134766",
                    "114.10076904296875",
                    "114.20171356201172",
                    "114.06999969482422",
                    "114.10161590576172",
                    "114.14958953857422",
                    "114.03076171875",
                    "114.46531677246094",
                    "115.64114379882812",
                    "115.3586654663086",
                    "115.29818725585938",
                    "115.01641082763672",
                    "115.0342025756836",
                    "115.15290069580078",
                    "115.33531188964844",
                    "115.27425384521484",
                    "115.2251968383789",
                    "115.16413116455078",
                    "115.1749267578125",
                    "115.25056457519531",
                    "115.47853088378906",
                    "116.4526138305664",
                    "115.95143127441406",
                    "115.75618743896484",
                    "115.78627014160156",
                    "116.0344009399414",
                    "116.1069564819336",
                    "116.24121856689453",
                    "116.13190460205078",
                    "116.30216979980469",
                    "116.55298614501953",
                    "116.31229400634766",
                    "116.3839340209961",
                    "116.38636779785156"
                ],
                "description": "pred",
                "index": 0,
                "layout": "IPY_MODEL_d365088524d64deb9db279d48fb6225f",
                "style": "IPY_MODEL_24c7fb1e649f42808c917bdbfee6fccf"
            }
        },
        "f5702478edf641d7b8def5ca73d0a58f": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "65dbc9d04b5540dc9c7effee7d9573aa": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "c0bf13be0111454d81a736a498a33eea": {
            "model_name": "DropdownModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_options_labels": [
                    "-4",
                    "-3",
                    "-2",
                    "-1",
                    "0",
                    "1",
                    "2",
                    "3",
                    "4"
                ],
                "description": "shift_list",
                "index": 0,
                "layout": "IPY_MODEL_f5702478edf641d7b8def5ca73d0a58f",
                "style": "IPY_MODEL_65dbc9d04b5540dc9c7effee7d9573aa"
            }
        },
        "04b5da5947b442bbabe7f269376b0b0a": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "fcd375babbf14d7aab622107f67e273d": {
            "model_name": "OutputModel",
            "model_module": "@jupyter-widgets/output",
            "model_module_version": "1.0.0",
            "state": {
                "layout": "IPY_MODEL_04b5da5947b442bbabe7f269376b0b0a",
                "outputs": [
                    {
                        "output_type": "error",
                        "ename": "TypeError",
                        "evalue": "'numpy.int32' object is not iterable",
                        "traceback": [
                            "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
                            "\u001b[1;31mTypeError\u001b[0m                                 Traceback (most recent call last)",
                            "\u001b[1;32m~\\Anaconda3\\envs\\learn-env-ext\\lib\\site-packages\\ipywidgets\\widgets\\interaction.py\u001b[0m in \u001b[0;36mupdate\u001b[1;34m(self, *args)\u001b[0m\n\u001b[0;32m    249\u001b[0m                     \u001b[0mvalue\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mwidget\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mget_interact_value\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    250\u001b[0m                     \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[1;33m[\u001b[0m\u001b[0mwidget\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0m_kwarg\u001b[0m\u001b[1;33m]\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mvalue\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m--> 251\u001b[1;33m                 \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mresult\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mf\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m**\u001b[0m\u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m    252\u001b[0m                 \u001b[0mshow_inline_matplotlib_plots\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    253\u001b[0m                 \u001b[1;32mif\u001b[0m \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mauto_display\u001b[0m \u001b[1;32mand\u001b[0m \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mresult\u001b[0m \u001b[1;32mis\u001b[0m \u001b[1;32mnot\u001b[0m \u001b[1;32mNone\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
                            "\u001b[1;32m<ipython-input-288-7ccbb256d575>\u001b[0m in \u001b[0;36mplot_shift_list\u001b[1;34m(true, pred, shift_list)\u001b[0m\n\u001b[0;32m     12\u001b[0m                     shift_list=shift_list ):\n\u001b[0;32m     13\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m---> 14\u001b[1;33m     \u001b[1;32mfor\u001b[0m \u001b[0mshift\u001b[0m \u001b[1;32min\u001b[0m \u001b[0mshift_list\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m     15\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m     16\u001b[0m         \u001b[0mdf_shift\u001b[0m\u001b[1;33m=\u001b[0m\u001b[0mpd\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mDataFrame\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
                            "\u001b[1;31mTypeError\u001b[0m: 'numpy.int32' object is not iterable"
                        ]
                    }
                ]
            }
        },
        "c57f904a4a8e4fc99e0146c11f36a2a2": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "719f039c958d4f048894b9d477983c7d": {
            "model_name": "VBoxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_dom_classes": [
                    "widget-interact"
                ],
                "children": [
                    "IPY_MODEL_d5aa00c9b566463186164d9f6ddc6341",
                    "IPY_MODEL_98f91c00cf5e44f488e34c06af8c7e81",
                    "IPY_MODEL_72736db8acad44129c70d0f9fd077446",
                    "IPY_MODEL_219a89961bf3435eb4f7869a8ffbaae3"
                ],
                "layout": "IPY_MODEL_c57f904a4a8e4fc99e0146c11f36a2a2"
            }
        },
        "77f96f3acf9e497eb4ea744fa1f18b3c": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "39f69a3b2f3d48c1ae9a21b307cfa89f": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "d5aa00c9b566463186164d9f6ddc6341": {
            "model_name": "DropdownModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_options_labels": [
                    "115.98",
                    "116.19999999999999",
                    "116.47999999999999",
                    "116.47999999999999",
                    "116.77",
                    "116.72",
                    "116.73",
                    "116.63",
                    "116.54",
                    "116.28999999999999",
                    "116.13",
                    "116.13",
                    "116.36",
                    "116.65",
                    "116.55",
                    "117.12000000000002",
                    "117.08000000000001",
                    "117.19",
                    "117.19",
                    "117.1",
                    "117.1",
                    "116.86",
                    "116.11000000000001",
                    "116.42",
                    "115.68",
                    "115.67",
                    "115.94",
                    "115.92000000000002",
                    "115.89",
                    "116.45",
                    "116.38",
                    "116.55",
                    "116.83",
                    "116.89000000000001",
                    "116.89000000000001",
                    "116.79000000000002",
                    "114.93",
                    "115.57",
                    "115.94",
                    "115.94",
                    "115.84",
                    "116.0",
                    "116.38999999999999",
                    "115.16",
                    "114.98",
                    "114.66",
                    "114.77000000000001",
                    "114.77000000000001",
                    "113.87",
                    "113.78",
                    "114.11",
                    "114.3",
                    "114.51",
                    "114.31999999999998",
                    "114.49",
                    "114.59",
                    "114.7",
                    "113.01999999999998",
                    "112.48",
                    "112.48",
                    "113.23",
                    "113.58",
                    "113.88",
                    "113.76",
                    "113.4",
                    "112.74000000000001",
                    "112.16",
                    "112.99",
                    "113.45",
                    "113.45",
                    "114.38",
                    "112.07",
                    "112.07",
                    "111.54",
                    "111.16",
                    "110.96",
                    "111.49",
                    "111.12999999999998",
                    "111.58000000000001",
                    "111.58000000000001",
                    "112.5",
                    "112.5",
                    "112.9",
                    "112.92000000000002",
                    "112.68000000000002",
                    "111.52",
                    "112.27",
                    "112.27",
                    "112.27",
                    "112.27",
                    "112.27",
                    "112.88000000000001",
                    "112.92000000000002",
                    "113.54",
                    "113.74",
                    "113.86",
                    "113.66000000000001",
                    "113.72",
                    "113.27",
                    "112.22",
                    "112.94",
                    "113.37",
                    "113.37",
                    "113.18",
                    "113.12",
                    "112.73000000000002",
                    "111.98",
                    "112.37999999999998",
                    "112.31",
                    "112.27",
                    "112.2",
                    "112.06",
                    "111.88",
                    "112.53",
                    "112.53",
                    "112.53",
                    "113.08",
                    "113.08",
                    "113.24",
                    "113.19",
                    "112.64000000000001",
                    "112.71",
                    "112.7",
                    "112.4",
                    "112.34",
                    "112.5",
                    "112.5",
                    "111.37",
                    "110.89000000000001",
                    "110.96",
                    "110.78",
                    "110.64",
                    "110.56000000000002",
                    "110.92",
                    "111.54",
                    "111.25999999999999",
                    "111.25999999999999",
                    "111.30999999999999",
                    "111.31999999999998",
                    "111.31999999999998",
                    "111.41",
                    "111.41",
                    "111.41",
                    "111.41",
                    "111.41",
                    "111.41",
                    "111.41",
                    "111.41",
                    "111.38",
                    "111.11999999999999",
                    "110.83",
                    "111.02999999999999",
                    "111.02999999999999",
                    "110.6",
                    "110.29999999999998",
                    "109.09999999999998",
                    "109.57",
                    "108.99",
                    "108.97",
                    "109.12",
                    "109.04999999999998",
                    "109.03999999999999",
                    "109.52",
                    "109.81",
                    "109.34",
                    "109.22999999999999",
                    "109.22999999999999",
                    "108.98",
                    "109.02",
                    "108.18",
                    "108.18",
                    "108.51",
                    "108.51",
                    "108.51",
                    "108.0",
                    "107.93000000000002",
                    "107.91",
                    "108.77000000000001",
                    "108.65",
                    "108.07",
                    "108.28",
                    "108.65",
                    "108.05",
                    "109.60000000000001",
                    "110.18",
                    "110.5",
                    "110.48",
                    "110.6",
                    "110.64",
                    "110.89000000000001",
                    "111.73",
                    "111.06",
                    "111.38",
                    "111.41",
                    "111.66",
                    "111.65",
                    "111.5",
                    "111.83",
                    "111.83",
                    "112.07",
                    "112.07",
                    "112.13999999999999",
                    "112.12",
                    "112.56",
                    "112.82",
                    "112.82",
                    "113.37",
                    "113.46",
                    "113.46",
                    "113.45",
                    "113.47",
                    "113.85000000000001",
                    "114.24",
                    "114.24",
                    "114.24",
                    "114.21999999999998",
                    "113.93000000000002",
                    "113.88",
                    "114.57",
                    "114.51",
                    "114.38",
                    "114.38",
                    "113.83",
                    "114.05",
                    "113.88",
                    "113.91",
                    "113.70000000000002",
                    "113.64",
                    "113.59",
                    "113.59",
                    "113.5",
                    "113.5",
                    "113.93000000000002",
                    "114.16999999999999",
                    "114.06",
                    "114.07999999999998",
                    "114.31999999999998",
                    "114.18",
                    "113.99000000000001",
                    "114.06",
                    "114.06",
                    "113.88",
                    "113.86",
                    "113.86",
                    "114.05",
                    "114.29",
                    "114.11999999999999",
                    "114.11999999999999",
                    "114.21",
                    "114.09",
                    "114.11999999999999",
                    "114.16",
                    "114.05",
                    "114.44999999999999",
                    "115.5",
                    "115.35",
                    "115.35",
                    "115.11",
                    "115.11",
                    "115.2",
                    "115.36",
                    "115.32",
                    "115.27999999999999",
                    "115.22",
                    "115.22",
                    "115.27999999999999",
                    "115.48",
                    "116.32",
                    "116.01000000000002",
                    "115.86",
                    "115.86",
                    "116.06000000000002",
                    "116.14",
                    "116.27",
                    "116.19999999999999",
                    "116.33999999999999",
                    "116.56",
                    "116.4",
                    "116.45",
                    "116.45",
                    "116.45"
                ],
                "description": "true",
                "index": 0,
                "layout": "IPY_MODEL_77f96f3acf9e497eb4ea744fa1f18b3c",
                "style": "IPY_MODEL_39f69a3b2f3d48c1ae9a21b307cfa89f"
            }
        },
        "a698b770d5e34fe9955f5f0285a132a1": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "cd295bd63a0f4fe58a2f382ebb2770b4": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "98f91c00cf5e44f488e34c06af8c7e81": {
            "model_name": "DropdownModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_options_labels": [
                    "115.85887908935547",
                    "115.96217346191406",
                    "116.21099853515625",
                    "116.51026916503906",
                    "116.44573211669922",
                    "116.77699279785156",
                    "116.65660095214844",
                    "116.65394592285156",
                    "116.52963256835938",
                    "116.43795013427734",
                    "116.16097259521484",
                    "116.02178192138672",
                    "116.0703125",
                    "116.36695861816406",
                    "116.69207000732422",
                    "116.50367736816406",
                    "117.20589447021484",
                    "117.04352569580078",
                    "117.14323425292969",
                    "117.11446380615234",
                    "116.98936462402344",
                    "117.00788116455078",
                    "116.7171859741211",
                    "115.85929870605469",
                    "116.379638671875",
                    "115.51661682128906",
                    "115.6009521484375",
                    "115.97655487060547",
                    "115.93025970458984",
                    "115.880859375",
                    "116.55480194091797",
                    "116.37938690185547",
                    "116.5513916015625",
                    "116.86123657226562",
                    "116.86395263671875",
                    "116.82482147216797",
                    "116.69039154052734",
                    "114.53022766113281",
                    "115.49700927734375",
                    "116.01007080078125",
                    "115.95280456542969",
                    "115.81319427490234",
                    "116.0107421875",
                    "116.45984649658203",
                    "114.94313049316406",
                    "114.85895538330078",
                    "114.59385681152344",
                    "114.76580047607422",
                    "114.7887191772461",
                    "113.8150863647461",
                    "113.7582778930664",
                    "114.15794372558594",
                    "114.37068939208984",
                    "114.57695770263672",
                    "114.3397216796875",
                    "114.51215362548828",
                    "114.6137466430664",
                    "114.71529388427734",
                    "112.92506408691406",
                    "112.41398620605469",
                    "112.46980285644531",
                    "113.26464080810547",
                    "113.66800689697266",
                    "113.95883178710938",
                    "113.79788970947266",
                    "113.39488983154297",
                    "112.7228012084961",
                    "112.15782165527344",
                    "112.9742202758789",
                    "113.51158142089844",
                    "113.49686431884766",
                    "114.4570083618164",
                    "112.06981658935547",
                    "111.99729919433594",
                    "111.56987762451172",
                    "111.21161651611328",
                    "111.02033996582031",
                    "111.49645233154297",
                    "111.23039245605469",
                    "111.60277557373047",
                    "111.64196014404297",
                    "112.50764465332031",
                    "112.55686950683594",
                    "112.91718292236328",
                    "112.9327163696289",
                    "112.66971588134766",
                    "111.54632568359375",
                    "112.18833923339844",
                    "112.27843475341797",
                    "112.27652740478516",
                    "112.2762451171875",
                    "112.2769775390625",
                    "112.87650299072266",
                    "112.9425048828125",
                    "113.55367279052734",
                    "113.75907135009766",
                    "113.85009765625",
                    "113.61683654785156",
                    "113.67030334472656",
                    "113.21281433105469",
                    "112.1783447265625",
                    "112.87167358398438",
                    "113.39126586914062",
                    "113.39349365234375",
                    "113.1799545288086",
                    "113.11089324951172",
                    "112.7244873046875",
                    "111.99266815185547",
                    "112.3542251586914",
                    "112.34068298339844",
                    "112.29927062988281",
                    "112.23140716552734",
                    "112.09429931640625",
                    "111.91594696044922",
                    "112.53155517578125",
                    "112.57424926757812",
                    "112.55375671386719",
                    "113.09176635742188",
                    "113.10319519042969",
                    "113.23992156982422",
                    "113.18119812011719",
                    "112.61956024169922",
                    "112.67369842529297",
                    "112.68890380859375",
                    "112.40240478515625",
                    "112.33646392822266",
                    "112.50235748291016",
                    "112.51812744140625",
                    "111.44834899902344",
                    "110.94120025634766",
                    "110.978759765625",
                    "110.8450698852539",
                    "110.71104431152344",
                    "110.62862396240234",
                    "110.93680572509766",
                    "111.54008483886719",
                    "111.33705139160156",
                    "111.29434967041016",
                    "111.33177185058594",
                    "111.34075164794922",
                    "111.33738708496094",
                    "111.41676330566406",
                    "111.42343139648438",
                    "111.42108917236328",
                    "111.41981506347656",
                    "111.41938018798828",
                    "111.41938018798828",
                    "111.41961669921875",
                    "111.41996765136719",
                    "111.39289093017578",
                    "111.15476989746094",
                    "110.87242126464844",
                    "111.02383422851562",
                    "111.05160522460938",
                    "110.67377471923828",
                    "110.36719512939453",
                    "109.34368133544922",
                    "109.55009460449219",
                    "109.14775085449219",
                    "109.05046844482422",
                    "109.15467071533203",
                    "109.12223815917969",
                    "109.10308837890625",
                    "109.48075866699219",
                    "109.79275512695312",
                    "109.45431518554688",
                    "109.29329681396484",
                    "109.26354217529297",
                    "109.06034851074219",
                    "109.04883575439453",
                    "108.40438842773438",
                    "108.25631713867188",
                    "108.47732543945312",
                    "108.5356674194336",
                    "108.54523468017578",
                    "108.16226196289062",
                    "108.01374816894531",
                    "107.96439361572266",
                    "108.59841918945312",
                    "108.66703796386719",
                    "108.23226928710938",
                    "108.28012084960938",
                    "108.57874298095703",
                    "108.1978759765625",
                    "109.29931640625",
                    "110.04570770263672",
                    "110.43517303466797",
                    "110.46007537841797",
                    "110.5561752319336",
                    "110.60175323486328",
                    "110.82598876953125",
                    "111.62006378173828",
                    "111.09036254882812",
                    "111.30819702148438",
                    "111.373291015625",
                    "111.60984802246094",
                    "111.62543487548828",
                    "111.4856185913086",
                    "111.78169250488281",
                    "111.81543731689453",
                    "112.0406265258789",
                    "112.05807495117188",
                    "112.12079620361328",
                    "112.10579681396484",
                    "112.53006744384766",
                    "112.812744140625",
                    "112.81009674072266",
                    "113.3535385131836",
                    "113.45309448242188",
                    "113.4289321899414",
                    "113.40821075439453",
                    "113.42759704589844",
                    "113.8273696899414",
                    "114.24425506591797",
                    "114.21770477294922",
                    "114.1943588256836",
                    "114.1684799194336",
                    "113.86038970947266",
                    "113.82034301757812",
                    "114.58655548095703",
                    "114.50733947753906",
                    "114.3350830078125",
                    "114.3384780883789",
                    "113.75743103027344",
                    "114.01094055175781",
                    "113.85874938964844",
                    "113.89453125",
                    "113.68414306640625",
                    "113.62745666503906",
                    "113.58773040771484",
                    "113.59453582763672",
                    "113.50528717041016",
                    "113.50639343261719",
                    "113.96165466308594",
                    "114.21331024169922",
                    "114.06380462646484",
                    "114.06715393066406",
                    "114.3234634399414",
                    "114.16009521484375",
                    "113.94795989990234",
                    "114.03315734863281",
                    "114.04373168945312",
                    "113.85340881347656",
                    "113.83856201171875",
                    "113.8500747680664",
                    "114.05702209472656",
                    "114.31290435791016",
                    "114.11112213134766",
                    "114.10076904296875",
                    "114.20171356201172",
                    "114.06999969482422",
                    "114.10161590576172",
                    "114.14958953857422",
                    "114.03076171875",
                    "114.46531677246094",
                    "115.64114379882812",
                    "115.3586654663086",
                    "115.29818725585938",
                    "115.01641082763672",
                    "115.0342025756836",
                    "115.15290069580078",
                    "115.33531188964844",
                    "115.27425384521484",
                    "115.2251968383789",
                    "115.16413116455078",
                    "115.1749267578125",
                    "115.25056457519531",
                    "115.47853088378906",
                    "116.4526138305664",
                    "115.95143127441406",
                    "115.75618743896484",
                    "115.78627014160156",
                    "116.0344009399414",
                    "116.1069564819336",
                    "116.24121856689453",
                    "116.13190460205078",
                    "116.30216979980469",
                    "116.55298614501953",
                    "116.31229400634766",
                    "116.3839340209961",
                    "116.38636779785156"
                ],
                "description": "pred",
                "index": 0,
                "layout": "IPY_MODEL_a698b770d5e34fe9955f5f0285a132a1",
                "style": "IPY_MODEL_cd295bd63a0f4fe58a2f382ebb2770b4"
            }
        },
        "af93a892e4cf4a50820c8062bc657c42": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "fe6297b1d43d45b887208aabb302d271": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "72736db8acad44129c70d0f9fd077446": {
            "model_name": "DropdownModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_options_labels": [
                    "-4",
                    "-3",
                    "-2",
                    "-1",
                    "0",
                    "1",
                    "2",
                    "3",
                    "4"
                ],
                "description": "shift_list",
                "index": 0,
                "layout": "IPY_MODEL_af93a892e4cf4a50820c8062bc657c42",
                "style": "IPY_MODEL_fe6297b1d43d45b887208aabb302d271"
            }
        },
        "a4d1968b68f842e989a665897df01a18": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "219a89961bf3435eb4f7869a8ffbaae3": {
            "model_name": "OutputModel",
            "model_module": "@jupyter-widgets/output",
            "model_module_version": "1.0.0",
            "state": {
                "layout": "IPY_MODEL_a4d1968b68f842e989a665897df01a18",
                "outputs": [
                    {
                        "output_type": "error",
                        "ename": "AttributeError",
                        "evalue": "'numpy.int32' object has no attribute 'nditer'",
                        "traceback": [
                            "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
                            "\u001b[1;31mAttributeError\u001b[0m                            Traceback (most recent call last)",
                            "\u001b[1;32m~\\Anaconda3\\envs\\learn-env-ext\\lib\\site-packages\\ipywidgets\\widgets\\interaction.py\u001b[0m in \u001b[0;36mupdate\u001b[1;34m(self, *args)\u001b[0m\n\u001b[0;32m    249\u001b[0m                     \u001b[0mvalue\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mwidget\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mget_interact_value\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    250\u001b[0m                     \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[1;33m[\u001b[0m\u001b[0mwidget\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0m_kwarg\u001b[0m\u001b[1;33m]\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mvalue\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m--> 251\u001b[1;33m                 \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mresult\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mf\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m**\u001b[0m\u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m    252\u001b[0m                 \u001b[0mshow_inline_matplotlib_plots\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    253\u001b[0m                 \u001b[1;32mif\u001b[0m \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mauto_display\u001b[0m \u001b[1;32mand\u001b[0m \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mresult\u001b[0m \u001b[1;32mis\u001b[0m \u001b[1;32mnot\u001b[0m \u001b[1;32mNone\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
                            "\u001b[1;32m<ipython-input-289-6b2111b9bc38>\u001b[0m in \u001b[0;36mplot_shift_list\u001b[1;34m(true, pred, shift_list)\u001b[0m\n\u001b[0;32m     12\u001b[0m                     shift_list=shift_list ):\n\u001b[0;32m     13\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m---> 14\u001b[1;33m     \u001b[1;32mfor\u001b[0m \u001b[0mshift\u001b[0m \u001b[1;32min\u001b[0m \u001b[0mshift_list\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mnditer\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m     15\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m     16\u001b[0m         \u001b[0mdf_shift\u001b[0m\u001b[1;33m=\u001b[0m\u001b[0mpd\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mDataFrame\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
                            "\u001b[1;31mAttributeError\u001b[0m: 'numpy.int32' object has no attribute 'nditer'"
                        ]
                    }
                ]
            }
        },
        "b26773f854e3464e9a212651de3b76d2": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "ae5f41fcb8fb4f6b8b07ded2c94df039": {
            "model_name": "VBoxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_dom_classes": [
                    "widget-interact"
                ],
                "children": [
                    "IPY_MODEL_33d7b2ea3a20432d835410227f6d8cc2",
                    "IPY_MODEL_05f5f6ebbd2c4323a5671e6b83115769",
                    "IPY_MODEL_c6dbb52fe47a4ce5b7ecaae8e2c29773",
                    "IPY_MODEL_f4f9f384168a4bd9a1414f27c8283cfc"
                ],
                "layout": "IPY_MODEL_b26773f854e3464e9a212651de3b76d2"
            }
        },
        "4abd5b90551c4b7d9b259110d3b44840": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "e09a8357eadc436c87976165469d10c1": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "33d7b2ea3a20432d835410227f6d8cc2": {
            "model_name": "DropdownModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_options_labels": [
                    "115.98",
                    "116.19999999999999",
                    "116.47999999999999",
                    "116.47999999999999",
                    "116.77",
                    "116.72",
                    "116.73",
                    "116.63",
                    "116.54",
                    "116.28999999999999",
                    "116.13",
                    "116.13",
                    "116.36",
                    "116.65",
                    "116.55",
                    "117.12000000000002",
                    "117.08000000000001",
                    "117.19",
                    "117.19",
                    "117.1",
                    "117.1",
                    "116.86",
                    "116.11000000000001",
                    "116.42",
                    "115.68",
                    "115.67",
                    "115.94",
                    "115.92000000000002",
                    "115.89",
                    "116.45",
                    "116.38",
                    "116.55",
                    "116.83",
                    "116.89000000000001",
                    "116.89000000000001",
                    "116.79000000000002",
                    "114.93",
                    "115.57",
                    "115.94",
                    "115.94",
                    "115.84",
                    "116.0",
                    "116.38999999999999",
                    "115.16",
                    "114.98",
                    "114.66",
                    "114.77000000000001",
                    "114.77000000000001",
                    "113.87",
                    "113.78",
                    "114.11",
                    "114.3",
                    "114.51",
                    "114.31999999999998",
                    "114.49",
                    "114.59",
                    "114.7",
                    "113.01999999999998",
                    "112.48",
                    "112.48",
                    "113.23",
                    "113.58",
                    "113.88",
                    "113.76",
                    "113.4",
                    "112.74000000000001",
                    "112.16",
                    "112.99",
                    "113.45",
                    "113.45",
                    "114.38",
                    "112.07",
                    "112.07",
                    "111.54",
                    "111.16",
                    "110.96",
                    "111.49",
                    "111.12999999999998",
                    "111.58000000000001",
                    "111.58000000000001",
                    "112.5",
                    "112.5",
                    "112.9",
                    "112.92000000000002",
                    "112.68000000000002",
                    "111.52",
                    "112.27",
                    "112.27",
                    "112.27",
                    "112.27",
                    "112.27",
                    "112.88000000000001",
                    "112.92000000000002",
                    "113.54",
                    "113.74",
                    "113.86",
                    "113.66000000000001",
                    "113.72",
                    "113.27",
                    "112.22",
                    "112.94",
                    "113.37",
                    "113.37",
                    "113.18",
                    "113.12",
                    "112.73000000000002",
                    "111.98",
                    "112.37999999999998",
                    "112.31",
                    "112.27",
                    "112.2",
                    "112.06",
                    "111.88",
                    "112.53",
                    "112.53",
                    "112.53",
                    "113.08",
                    "113.08",
                    "113.24",
                    "113.19",
                    "112.64000000000001",
                    "112.71",
                    "112.7",
                    "112.4",
                    "112.34",
                    "112.5",
                    "112.5",
                    "111.37",
                    "110.89000000000001",
                    "110.96",
                    "110.78",
                    "110.64",
                    "110.56000000000002",
                    "110.92",
                    "111.54",
                    "111.25999999999999",
                    "111.25999999999999",
                    "111.30999999999999",
                    "111.31999999999998",
                    "111.31999999999998",
                    "111.41",
                    "111.41",
                    "111.41",
                    "111.41",
                    "111.41",
                    "111.41",
                    "111.41",
                    "111.41",
                    "111.38",
                    "111.11999999999999",
                    "110.83",
                    "111.02999999999999",
                    "111.02999999999999",
                    "110.6",
                    "110.29999999999998",
                    "109.09999999999998",
                    "109.57",
                    "108.99",
                    "108.97",
                    "109.12",
                    "109.04999999999998",
                    "109.03999999999999",
                    "109.52",
                    "109.81",
                    "109.34",
                    "109.22999999999999",
                    "109.22999999999999",
                    "108.98",
                    "109.02",
                    "108.18",
                    "108.18",
                    "108.51",
                    "108.51",
                    "108.51",
                    "108.0",
                    "107.93000000000002",
                    "107.91",
                    "108.77000000000001",
                    "108.65",
                    "108.07",
                    "108.28",
                    "108.65",
                    "108.05",
                    "109.60000000000001",
                    "110.18",
                    "110.5",
                    "110.48",
                    "110.6",
                    "110.64",
                    "110.89000000000001",
                    "111.73",
                    "111.06",
                    "111.38",
                    "111.41",
                    "111.66",
                    "111.65",
                    "111.5",
                    "111.83",
                    "111.83",
                    "112.07",
                    "112.07",
                    "112.13999999999999",
                    "112.12",
                    "112.56",
                    "112.82",
                    "112.82",
                    "113.37",
                    "113.46",
                    "113.46",
                    "113.45",
                    "113.47",
                    "113.85000000000001",
                    "114.24",
                    "114.24",
                    "114.24",
                    "114.21999999999998",
                    "113.93000000000002",
                    "113.88",
                    "114.57",
                    "114.51",
                    "114.38",
                    "114.38",
                    "113.83",
                    "114.05",
                    "113.88",
                    "113.91",
                    "113.70000000000002",
                    "113.64",
                    "113.59",
                    "113.59",
                    "113.5",
                    "113.5",
                    "113.93000000000002",
                    "114.16999999999999",
                    "114.06",
                    "114.07999999999998",
                    "114.31999999999998",
                    "114.18",
                    "113.99000000000001",
                    "114.06",
                    "114.06",
                    "113.88",
                    "113.86",
                    "113.86",
                    "114.05",
                    "114.29",
                    "114.11999999999999",
                    "114.11999999999999",
                    "114.21",
                    "114.09",
                    "114.11999999999999",
                    "114.16",
                    "114.05",
                    "114.44999999999999",
                    "115.5",
                    "115.35",
                    "115.35",
                    "115.11",
                    "115.11",
                    "115.2",
                    "115.36",
                    "115.32",
                    "115.27999999999999",
                    "115.22",
                    "115.22",
                    "115.27999999999999",
                    "115.48",
                    "116.32",
                    "116.01000000000002",
                    "115.86",
                    "115.86",
                    "116.06000000000002",
                    "116.14",
                    "116.27",
                    "116.19999999999999",
                    "116.33999999999999",
                    "116.56",
                    "116.4",
                    "116.45",
                    "116.45",
                    "116.45"
                ],
                "description": "true",
                "index": 0,
                "layout": "IPY_MODEL_4abd5b90551c4b7d9b259110d3b44840",
                "style": "IPY_MODEL_e09a8357eadc436c87976165469d10c1"
            }
        },
        "3314a6af1ed2445fbe505cd10af65184": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "ab5bd3e0d0264b4d8ffc4e20d9a72486": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "05f5f6ebbd2c4323a5671e6b83115769": {
            "model_name": "DropdownModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_options_labels": [
                    "115.85887908935547",
                    "115.96217346191406",
                    "116.21099853515625",
                    "116.51026916503906",
                    "116.44573211669922",
                    "116.77699279785156",
                    "116.65660095214844",
                    "116.65394592285156",
                    "116.52963256835938",
                    "116.43795013427734",
                    "116.16097259521484",
                    "116.02178192138672",
                    "116.0703125",
                    "116.36695861816406",
                    "116.69207000732422",
                    "116.50367736816406",
                    "117.20589447021484",
                    "117.04352569580078",
                    "117.14323425292969",
                    "117.11446380615234",
                    "116.98936462402344",
                    "117.00788116455078",
                    "116.7171859741211",
                    "115.85929870605469",
                    "116.379638671875",
                    "115.51661682128906",
                    "115.6009521484375",
                    "115.97655487060547",
                    "115.93025970458984",
                    "115.880859375",
                    "116.55480194091797",
                    "116.37938690185547",
                    "116.5513916015625",
                    "116.86123657226562",
                    "116.86395263671875",
                    "116.82482147216797",
                    "116.69039154052734",
                    "114.53022766113281",
                    "115.49700927734375",
                    "116.01007080078125",
                    "115.95280456542969",
                    "115.81319427490234",
                    "116.0107421875",
                    "116.45984649658203",
                    "114.94313049316406",
                    "114.85895538330078",
                    "114.59385681152344",
                    "114.76580047607422",
                    "114.7887191772461",
                    "113.8150863647461",
                    "113.7582778930664",
                    "114.15794372558594",
                    "114.37068939208984",
                    "114.57695770263672",
                    "114.3397216796875",
                    "114.51215362548828",
                    "114.6137466430664",
                    "114.71529388427734",
                    "112.92506408691406",
                    "112.41398620605469",
                    "112.46980285644531",
                    "113.26464080810547",
                    "113.66800689697266",
                    "113.95883178710938",
                    "113.79788970947266",
                    "113.39488983154297",
                    "112.7228012084961",
                    "112.15782165527344",
                    "112.9742202758789",
                    "113.51158142089844",
                    "113.49686431884766",
                    "114.4570083618164",
                    "112.06981658935547",
                    "111.99729919433594",
                    "111.56987762451172",
                    "111.21161651611328",
                    "111.02033996582031",
                    "111.49645233154297",
                    "111.23039245605469",
                    "111.60277557373047",
                    "111.64196014404297",
                    "112.50764465332031",
                    "112.55686950683594",
                    "112.91718292236328",
                    "112.9327163696289",
                    "112.66971588134766",
                    "111.54632568359375",
                    "112.18833923339844",
                    "112.27843475341797",
                    "112.27652740478516",
                    "112.2762451171875",
                    "112.2769775390625",
                    "112.87650299072266",
                    "112.9425048828125",
                    "113.55367279052734",
                    "113.75907135009766",
                    "113.85009765625",
                    "113.61683654785156",
                    "113.67030334472656",
                    "113.21281433105469",
                    "112.1783447265625",
                    "112.87167358398438",
                    "113.39126586914062",
                    "113.39349365234375",
                    "113.1799545288086",
                    "113.11089324951172",
                    "112.7244873046875",
                    "111.99266815185547",
                    "112.3542251586914",
                    "112.34068298339844",
                    "112.29927062988281",
                    "112.23140716552734",
                    "112.09429931640625",
                    "111.91594696044922",
                    "112.53155517578125",
                    "112.57424926757812",
                    "112.55375671386719",
                    "113.09176635742188",
                    "113.10319519042969",
                    "113.23992156982422",
                    "113.18119812011719",
                    "112.61956024169922",
                    "112.67369842529297",
                    "112.68890380859375",
                    "112.40240478515625",
                    "112.33646392822266",
                    "112.50235748291016",
                    "112.51812744140625",
                    "111.44834899902344",
                    "110.94120025634766",
                    "110.978759765625",
                    "110.8450698852539",
                    "110.71104431152344",
                    "110.62862396240234",
                    "110.93680572509766",
                    "111.54008483886719",
                    "111.33705139160156",
                    "111.29434967041016",
                    "111.33177185058594",
                    "111.34075164794922",
                    "111.33738708496094",
                    "111.41676330566406",
                    "111.42343139648438",
                    "111.42108917236328",
                    "111.41981506347656",
                    "111.41938018798828",
                    "111.41938018798828",
                    "111.41961669921875",
                    "111.41996765136719",
                    "111.39289093017578",
                    "111.15476989746094",
                    "110.87242126464844",
                    "111.02383422851562",
                    "111.05160522460938",
                    "110.67377471923828",
                    "110.36719512939453",
                    "109.34368133544922",
                    "109.55009460449219",
                    "109.14775085449219",
                    "109.05046844482422",
                    "109.15467071533203",
                    "109.12223815917969",
                    "109.10308837890625",
                    "109.48075866699219",
                    "109.79275512695312",
                    "109.45431518554688",
                    "109.29329681396484",
                    "109.26354217529297",
                    "109.06034851074219",
                    "109.04883575439453",
                    "108.40438842773438",
                    "108.25631713867188",
                    "108.47732543945312",
                    "108.5356674194336",
                    "108.54523468017578",
                    "108.16226196289062",
                    "108.01374816894531",
                    "107.96439361572266",
                    "108.59841918945312",
                    "108.66703796386719",
                    "108.23226928710938",
                    "108.28012084960938",
                    "108.57874298095703",
                    "108.1978759765625",
                    "109.29931640625",
                    "110.04570770263672",
                    "110.43517303466797",
                    "110.46007537841797",
                    "110.5561752319336",
                    "110.60175323486328",
                    "110.82598876953125",
                    "111.62006378173828",
                    "111.09036254882812",
                    "111.30819702148438",
                    "111.373291015625",
                    "111.60984802246094",
                    "111.62543487548828",
                    "111.4856185913086",
                    "111.78169250488281",
                    "111.81543731689453",
                    "112.0406265258789",
                    "112.05807495117188",
                    "112.12079620361328",
                    "112.10579681396484",
                    "112.53006744384766",
                    "112.812744140625",
                    "112.81009674072266",
                    "113.3535385131836",
                    "113.45309448242188",
                    "113.4289321899414",
                    "113.40821075439453",
                    "113.42759704589844",
                    "113.8273696899414",
                    "114.24425506591797",
                    "114.21770477294922",
                    "114.1943588256836",
                    "114.1684799194336",
                    "113.86038970947266",
                    "113.82034301757812",
                    "114.58655548095703",
                    "114.50733947753906",
                    "114.3350830078125",
                    "114.3384780883789",
                    "113.75743103027344",
                    "114.01094055175781",
                    "113.85874938964844",
                    "113.89453125",
                    "113.68414306640625",
                    "113.62745666503906",
                    "113.58773040771484",
                    "113.59453582763672",
                    "113.50528717041016",
                    "113.50639343261719",
                    "113.96165466308594",
                    "114.21331024169922",
                    "114.06380462646484",
                    "114.06715393066406",
                    "114.3234634399414",
                    "114.16009521484375",
                    "113.94795989990234",
                    "114.03315734863281",
                    "114.04373168945312",
                    "113.85340881347656",
                    "113.83856201171875",
                    "113.8500747680664",
                    "114.05702209472656",
                    "114.31290435791016",
                    "114.11112213134766",
                    "114.10076904296875",
                    "114.20171356201172",
                    "114.06999969482422",
                    "114.10161590576172",
                    "114.14958953857422",
                    "114.03076171875",
                    "114.46531677246094",
                    "115.64114379882812",
                    "115.3586654663086",
                    "115.29818725585938",
                    "115.01641082763672",
                    "115.0342025756836",
                    "115.15290069580078",
                    "115.33531188964844",
                    "115.27425384521484",
                    "115.2251968383789",
                    "115.16413116455078",
                    "115.1749267578125",
                    "115.25056457519531",
                    "115.47853088378906",
                    "116.4526138305664",
                    "115.95143127441406",
                    "115.75618743896484",
                    "115.78627014160156",
                    "116.0344009399414",
                    "116.1069564819336",
                    "116.24121856689453",
                    "116.13190460205078",
                    "116.30216979980469",
                    "116.55298614501953",
                    "116.31229400634766",
                    "116.3839340209961",
                    "116.38636779785156"
                ],
                "description": "pred",
                "index": 0,
                "layout": "IPY_MODEL_3314a6af1ed2445fbe505cd10af65184",
                "style": "IPY_MODEL_ab5bd3e0d0264b4d8ffc4e20d9a72486"
            }
        },
        "274aa31b529e402ca5a6563328a507cc": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "a0e1afeee3e248aa8af8c1c65c331953": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "c6dbb52fe47a4ce5b7ecaae8e2c29773": {
            "model_name": "DropdownModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_options_labels": [
                    "-4",
                    "-3",
                    "-2",
                    "-1",
                    "0",
                    "1",
                    "2",
                    "3",
                    "4"
                ],
                "description": "shift_list",
                "index": 0,
                "layout": "IPY_MODEL_274aa31b529e402ca5a6563328a507cc",
                "style": "IPY_MODEL_a0e1afeee3e248aa8af8c1c65c331953"
            }
        },
        "93aec0fe3bb545288ad3ffc08fd8a6c4": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "f4f9f384168a4bd9a1414f27c8283cfc": {
            "model_name": "OutputModel",
            "model_module": "@jupyter-widgets/output",
            "model_module_version": "1.0.0",
            "state": {
                "layout": "IPY_MODEL_93aec0fe3bb545288ad3ffc08fd8a6c4",
                "outputs": [
                    {
                        "output_type": "error",
                        "ename": "AttributeError",
                        "evalue": "'float' object has no attribute 'shift'",
                        "traceback": [
                            "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
                            "\u001b[1;31mAttributeError\u001b[0m                            Traceback (most recent call last)",
                            "\u001b[1;32m~\\Anaconda3\\envs\\learn-env-ext\\lib\\site-packages\\ipywidgets\\widgets\\interaction.py\u001b[0m in \u001b[0;36mupdate\u001b[1;34m(self, *args)\u001b[0m\n\u001b[0;32m    249\u001b[0m                     \u001b[0mvalue\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mwidget\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mget_interact_value\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    250\u001b[0m                     \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[1;33m[\u001b[0m\u001b[0mwidget\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0m_kwarg\u001b[0m\u001b[1;33m]\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mvalue\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m--> 251\u001b[1;33m                 \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mresult\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mf\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m**\u001b[0m\u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m    252\u001b[0m                 \u001b[0mshow_inline_matplotlib_plots\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    253\u001b[0m                 \u001b[1;32mif\u001b[0m \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mauto_display\u001b[0m \u001b[1;32mand\u001b[0m \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mresult\u001b[0m \u001b[1;32mis\u001b[0m \u001b[1;32mnot\u001b[0m \u001b[1;32mNone\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
                            "\u001b[1;32m<ipython-input-290-816da63226ed>\u001b[0m in \u001b[0;36mplot_shift_list\u001b[1;34m(true, pred, shift_list)\u001b[0m\n\u001b[0;32m     15\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m     16\u001b[0m         \u001b[0mdf_shift\u001b[0m\u001b[1;33m=\u001b[0m\u001b[0mpd\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mDataFrame\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m---> 17\u001b[1;33m         \u001b[0mdf_shift\u001b[0m\u001b[1;33m[\u001b[0m\u001b[0mpred_colname\u001b[0m\u001b[1;33m]\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mtrue\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mshift\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mshift\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m     18\u001b[0m         \u001b[0mdf_shift\u001b[0m\u001b[1;33m[\u001b[0m\u001b[0mtrue_colname\u001b[0m\u001b[1;33m]\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mpred\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m     19\u001b[0m         \u001b[0mdf_shift\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mdropna\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0minplace\u001b[0m\u001b[1;33m=\u001b[0m\u001b[1;32mTrue\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
                            "\u001b[1;31mAttributeError\u001b[0m: 'float' object has no attribute 'shift'"
                        ]
                    }
                ]
            }
        },
        "185b7674949c4f9eae01b1663a80b898": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "ba6570aa01fc4db6a5d6059297c41ca9": {
            "model_name": "VBoxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_dom_classes": [
                    "widget-interact"
                ],
                "children": [
                    "IPY_MODEL_0373d8f5c91f49818f0c781bc1314e9c",
                    "IPY_MODEL_edf87d2ac14e429abd436314bb0d181d",
                    "IPY_MODEL_b86113e908554a5ab7bdc87122a363d6",
                    "IPY_MODEL_35fc1d7d3c8c48e180376fe523ed87a6"
                ],
                "layout": "IPY_MODEL_185b7674949c4f9eae01b1663a80b898"
            }
        },
        "0abd97cbb02443209b5716b407803a97": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "f67d28ceef644eb88dcdb1722edb4a8b": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "0373d8f5c91f49818f0c781bc1314e9c": {
            "model_name": "DropdownModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_options_labels": [
                    "115.98",
                    "116.19999999999999",
                    "116.47999999999999",
                    "116.47999999999999",
                    "116.77",
                    "116.72",
                    "116.73",
                    "116.63",
                    "116.54",
                    "116.28999999999999",
                    "116.13",
                    "116.13",
                    "116.36",
                    "116.65",
                    "116.55",
                    "117.12000000000002",
                    "117.08000000000001",
                    "117.19",
                    "117.19",
                    "117.1",
                    "117.1",
                    "116.86",
                    "116.11000000000001",
                    "116.42",
                    "115.68",
                    "115.67",
                    "115.94",
                    "115.92000000000002",
                    "115.89",
                    "116.45",
                    "116.38",
                    "116.55",
                    "116.83",
                    "116.89000000000001",
                    "116.89000000000001",
                    "116.79000000000002",
                    "114.93",
                    "115.57",
                    "115.94",
                    "115.94",
                    "115.84",
                    "116.0",
                    "116.38999999999999",
                    "115.16",
                    "114.98",
                    "114.66",
                    "114.77000000000001",
                    "114.77000000000001",
                    "113.87",
                    "113.78",
                    "114.11",
                    "114.3",
                    "114.51",
                    "114.31999999999998",
                    "114.49",
                    "114.59",
                    "114.7",
                    "113.01999999999998",
                    "112.48",
                    "112.48",
                    "113.23",
                    "113.58",
                    "113.88",
                    "113.76",
                    "113.4",
                    "112.74000000000001",
                    "112.16",
                    "112.99",
                    "113.45",
                    "113.45",
                    "114.38",
                    "112.07",
                    "112.07",
                    "111.54",
                    "111.16",
                    "110.96",
                    "111.49",
                    "111.12999999999998",
                    "111.58000000000001",
                    "111.58000000000001",
                    "112.5",
                    "112.5",
                    "112.9",
                    "112.92000000000002",
                    "112.68000000000002",
                    "111.52",
                    "112.27",
                    "112.27",
                    "112.27",
                    "112.27",
                    "112.27",
                    "112.88000000000001",
                    "112.92000000000002",
                    "113.54",
                    "113.74",
                    "113.86",
                    "113.66000000000001",
                    "113.72",
                    "113.27",
                    "112.22",
                    "112.94",
                    "113.37",
                    "113.37",
                    "113.18",
                    "113.12",
                    "112.73000000000002",
                    "111.98",
                    "112.37999999999998",
                    "112.31",
                    "112.27",
                    "112.2",
                    "112.06",
                    "111.88",
                    "112.53",
                    "112.53",
                    "112.53",
                    "113.08",
                    "113.08",
                    "113.24",
                    "113.19",
                    "112.64000000000001",
                    "112.71",
                    "112.7",
                    "112.4",
                    "112.34",
                    "112.5",
                    "112.5",
                    "111.37",
                    "110.89000000000001",
                    "110.96",
                    "110.78",
                    "110.64",
                    "110.56000000000002",
                    "110.92",
                    "111.54",
                    "111.25999999999999",
                    "111.25999999999999",
                    "111.30999999999999",
                    "111.31999999999998",
                    "111.31999999999998",
                    "111.41",
                    "111.41",
                    "111.41",
                    "111.41",
                    "111.41",
                    "111.41",
                    "111.41",
                    "111.41",
                    "111.38",
                    "111.11999999999999",
                    "110.83",
                    "111.02999999999999",
                    "111.02999999999999",
                    "110.6",
                    "110.29999999999998",
                    "109.09999999999998",
                    "109.57",
                    "108.99",
                    "108.97",
                    "109.12",
                    "109.04999999999998",
                    "109.03999999999999",
                    "109.52",
                    "109.81",
                    "109.34",
                    "109.22999999999999",
                    "109.22999999999999",
                    "108.98",
                    "109.02",
                    "108.18",
                    "108.18",
                    "108.51",
                    "108.51",
                    "108.51",
                    "108.0",
                    "107.93000000000002",
                    "107.91",
                    "108.77000000000001",
                    "108.65",
                    "108.07",
                    "108.28",
                    "108.65",
                    "108.05",
                    "109.60000000000001",
                    "110.18",
                    "110.5",
                    "110.48",
                    "110.6",
                    "110.64",
                    "110.89000000000001",
                    "111.73",
                    "111.06",
                    "111.38",
                    "111.41",
                    "111.66",
                    "111.65",
                    "111.5",
                    "111.83",
                    "111.83",
                    "112.07",
                    "112.07",
                    "112.13999999999999",
                    "112.12",
                    "112.56",
                    "112.82",
                    "112.82",
                    "113.37",
                    "113.46",
                    "113.46",
                    "113.45",
                    "113.47",
                    "113.85000000000001",
                    "114.24",
                    "114.24",
                    "114.24",
                    "114.21999999999998",
                    "113.93000000000002",
                    "113.88",
                    "114.57",
                    "114.51",
                    "114.38",
                    "114.38",
                    "113.83",
                    "114.05",
                    "113.88",
                    "113.91",
                    "113.70000000000002",
                    "113.64",
                    "113.59",
                    "113.59",
                    "113.5",
                    "113.5",
                    "113.93000000000002",
                    "114.16999999999999",
                    "114.06",
                    "114.07999999999998",
                    "114.31999999999998",
                    "114.18",
                    "113.99000000000001",
                    "114.06",
                    "114.06",
                    "113.88",
                    "113.86",
                    "113.86",
                    "114.05",
                    "114.29",
                    "114.11999999999999",
                    "114.11999999999999",
                    "114.21",
                    "114.09",
                    "114.11999999999999",
                    "114.16",
                    "114.05",
                    "114.44999999999999",
                    "115.5",
                    "115.35",
                    "115.35",
                    "115.11",
                    "115.11",
                    "115.2",
                    "115.36",
                    "115.32",
                    "115.27999999999999",
                    "115.22",
                    "115.22",
                    "115.27999999999999",
                    "115.48",
                    "116.32",
                    "116.01000000000002",
                    "115.86",
                    "115.86",
                    "116.06000000000002",
                    "116.14",
                    "116.27",
                    "116.19999999999999",
                    "116.33999999999999",
                    "116.56",
                    "116.4",
                    "116.45",
                    "116.45",
                    "116.45"
                ],
                "description": "true",
                "index": 0,
                "layout": "IPY_MODEL_0abd97cbb02443209b5716b407803a97",
                "style": "IPY_MODEL_f67d28ceef644eb88dcdb1722edb4a8b"
            }
        },
        "1ec71d2e97ba41dab4000c89f1aa9df6": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "ca5553d8ba864b86ae37d0f148b2e381": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "edf87d2ac14e429abd436314bb0d181d": {
            "model_name": "DropdownModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_options_labels": [
                    "115.85887908935547",
                    "115.96217346191406",
                    "116.21099853515625",
                    "116.51026916503906",
                    "116.44573211669922",
                    "116.77699279785156",
                    "116.65660095214844",
                    "116.65394592285156",
                    "116.52963256835938",
                    "116.43795013427734",
                    "116.16097259521484",
                    "116.02178192138672",
                    "116.0703125",
                    "116.36695861816406",
                    "116.69207000732422",
                    "116.50367736816406",
                    "117.20589447021484",
                    "117.04352569580078",
                    "117.14323425292969",
                    "117.11446380615234",
                    "116.98936462402344",
                    "117.00788116455078",
                    "116.7171859741211",
                    "115.85929870605469",
                    "116.379638671875",
                    "115.51661682128906",
                    "115.6009521484375",
                    "115.97655487060547",
                    "115.93025970458984",
                    "115.880859375",
                    "116.55480194091797",
                    "116.37938690185547",
                    "116.5513916015625",
                    "116.86123657226562",
                    "116.86395263671875",
                    "116.82482147216797",
                    "116.69039154052734",
                    "114.53022766113281",
                    "115.49700927734375",
                    "116.01007080078125",
                    "115.95280456542969",
                    "115.81319427490234",
                    "116.0107421875",
                    "116.45984649658203",
                    "114.94313049316406",
                    "114.85895538330078",
                    "114.59385681152344",
                    "114.76580047607422",
                    "114.7887191772461",
                    "113.8150863647461",
                    "113.7582778930664",
                    "114.15794372558594",
                    "114.37068939208984",
                    "114.57695770263672",
                    "114.3397216796875",
                    "114.51215362548828",
                    "114.6137466430664",
                    "114.71529388427734",
                    "112.92506408691406",
                    "112.41398620605469",
                    "112.46980285644531",
                    "113.26464080810547",
                    "113.66800689697266",
                    "113.95883178710938",
                    "113.79788970947266",
                    "113.39488983154297",
                    "112.7228012084961",
                    "112.15782165527344",
                    "112.9742202758789",
                    "113.51158142089844",
                    "113.49686431884766",
                    "114.4570083618164",
                    "112.06981658935547",
                    "111.99729919433594",
                    "111.56987762451172",
                    "111.21161651611328",
                    "111.02033996582031",
                    "111.49645233154297",
                    "111.23039245605469",
                    "111.60277557373047",
                    "111.64196014404297",
                    "112.50764465332031",
                    "112.55686950683594",
                    "112.91718292236328",
                    "112.9327163696289",
                    "112.66971588134766",
                    "111.54632568359375",
                    "112.18833923339844",
                    "112.27843475341797",
                    "112.27652740478516",
                    "112.2762451171875",
                    "112.2769775390625",
                    "112.87650299072266",
                    "112.9425048828125",
                    "113.55367279052734",
                    "113.75907135009766",
                    "113.85009765625",
                    "113.61683654785156",
                    "113.67030334472656",
                    "113.21281433105469",
                    "112.1783447265625",
                    "112.87167358398438",
                    "113.39126586914062",
                    "113.39349365234375",
                    "113.1799545288086",
                    "113.11089324951172",
                    "112.7244873046875",
                    "111.99266815185547",
                    "112.3542251586914",
                    "112.34068298339844",
                    "112.29927062988281",
                    "112.23140716552734",
                    "112.09429931640625",
                    "111.91594696044922",
                    "112.53155517578125",
                    "112.57424926757812",
                    "112.55375671386719",
                    "113.09176635742188",
                    "113.10319519042969",
                    "113.23992156982422",
                    "113.18119812011719",
                    "112.61956024169922",
                    "112.67369842529297",
                    "112.68890380859375",
                    "112.40240478515625",
                    "112.33646392822266",
                    "112.50235748291016",
                    "112.51812744140625",
                    "111.44834899902344",
                    "110.94120025634766",
                    "110.978759765625",
                    "110.8450698852539",
                    "110.71104431152344",
                    "110.62862396240234",
                    "110.93680572509766",
                    "111.54008483886719",
                    "111.33705139160156",
                    "111.29434967041016",
                    "111.33177185058594",
                    "111.34075164794922",
                    "111.33738708496094",
                    "111.41676330566406",
                    "111.42343139648438",
                    "111.42108917236328",
                    "111.41981506347656",
                    "111.41938018798828",
                    "111.41938018798828",
                    "111.41961669921875",
                    "111.41996765136719",
                    "111.39289093017578",
                    "111.15476989746094",
                    "110.87242126464844",
                    "111.02383422851562",
                    "111.05160522460938",
                    "110.67377471923828",
                    "110.36719512939453",
                    "109.34368133544922",
                    "109.55009460449219",
                    "109.14775085449219",
                    "109.05046844482422",
                    "109.15467071533203",
                    "109.12223815917969",
                    "109.10308837890625",
                    "109.48075866699219",
                    "109.79275512695312",
                    "109.45431518554688",
                    "109.29329681396484",
                    "109.26354217529297",
                    "109.06034851074219",
                    "109.04883575439453",
                    "108.40438842773438",
                    "108.25631713867188",
                    "108.47732543945312",
                    "108.5356674194336",
                    "108.54523468017578",
                    "108.16226196289062",
                    "108.01374816894531",
                    "107.96439361572266",
                    "108.59841918945312",
                    "108.66703796386719",
                    "108.23226928710938",
                    "108.28012084960938",
                    "108.57874298095703",
                    "108.1978759765625",
                    "109.29931640625",
                    "110.04570770263672",
                    "110.43517303466797",
                    "110.46007537841797",
                    "110.5561752319336",
                    "110.60175323486328",
                    "110.82598876953125",
                    "111.62006378173828",
                    "111.09036254882812",
                    "111.30819702148438",
                    "111.373291015625",
                    "111.60984802246094",
                    "111.62543487548828",
                    "111.4856185913086",
                    "111.78169250488281",
                    "111.81543731689453",
                    "112.0406265258789",
                    "112.05807495117188",
                    "112.12079620361328",
                    "112.10579681396484",
                    "112.53006744384766",
                    "112.812744140625",
                    "112.81009674072266",
                    "113.3535385131836",
                    "113.45309448242188",
                    "113.4289321899414",
                    "113.40821075439453",
                    "113.42759704589844",
                    "113.8273696899414",
                    "114.24425506591797",
                    "114.21770477294922",
                    "114.1943588256836",
                    "114.1684799194336",
                    "113.86038970947266",
                    "113.82034301757812",
                    "114.58655548095703",
                    "114.50733947753906",
                    "114.3350830078125",
                    "114.3384780883789",
                    "113.75743103027344",
                    "114.01094055175781",
                    "113.85874938964844",
                    "113.89453125",
                    "113.68414306640625",
                    "113.62745666503906",
                    "113.58773040771484",
                    "113.59453582763672",
                    "113.50528717041016",
                    "113.50639343261719",
                    "113.96165466308594",
                    "114.21331024169922",
                    "114.06380462646484",
                    "114.06715393066406",
                    "114.3234634399414",
                    "114.16009521484375",
                    "113.94795989990234",
                    "114.03315734863281",
                    "114.04373168945312",
                    "113.85340881347656",
                    "113.83856201171875",
                    "113.8500747680664",
                    "114.05702209472656",
                    "114.31290435791016",
                    "114.11112213134766",
                    "114.10076904296875",
                    "114.20171356201172",
                    "114.06999969482422",
                    "114.10161590576172",
                    "114.14958953857422",
                    "114.03076171875",
                    "114.46531677246094",
                    "115.64114379882812",
                    "115.3586654663086",
                    "115.29818725585938",
                    "115.01641082763672",
                    "115.0342025756836",
                    "115.15290069580078",
                    "115.33531188964844",
                    "115.27425384521484",
                    "115.2251968383789",
                    "115.16413116455078",
                    "115.1749267578125",
                    "115.25056457519531",
                    "115.47853088378906",
                    "116.4526138305664",
                    "115.95143127441406",
                    "115.75618743896484",
                    "115.78627014160156",
                    "116.0344009399414",
                    "116.1069564819336",
                    "116.24121856689453",
                    "116.13190460205078",
                    "116.30216979980469",
                    "116.55298614501953",
                    "116.31229400634766",
                    "116.3839340209961",
                    "116.38636779785156"
                ],
                "description": "pred",
                "index": 0,
                "layout": "IPY_MODEL_1ec71d2e97ba41dab4000c89f1aa9df6",
                "style": "IPY_MODEL_ca5553d8ba864b86ae37d0f148b2e381"
            }
        },
        "10d3a2b0f3f348ff900a2a73b39e2d36": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "59f86317c2cd44a8baaa4b0073d0f3b1": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "b86113e908554a5ab7bdc87122a363d6": {
            "model_name": "DropdownModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_options_labels": [
                    "-4",
                    "-3",
                    "-2",
                    "-1",
                    "0",
                    "1",
                    "2",
                    "3",
                    "4"
                ],
                "description": "shift_list",
                "index": 0,
                "layout": "IPY_MODEL_10d3a2b0f3f348ff900a2a73b39e2d36",
                "style": "IPY_MODEL_59f86317c2cd44a8baaa4b0073d0f3b1"
            }
        },
        "f3ac96904782455695ca59465564bc97": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "35fc1d7d3c8c48e180376fe523ed87a6": {
            "model_name": "OutputModel",
            "model_module": "@jupyter-widgets/output",
            "model_module_version": "1.0.0",
            "state": {
                "layout": "IPY_MODEL_f3ac96904782455695ca59465564bc97",
                "outputs": [
                    {
                        "output_type": "error",
                        "ename": "AttributeError",
                        "evalue": "'float' object has no attribute 'shift'",
                        "traceback": [
                            "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
                            "\u001b[1;31mAttributeError\u001b[0m                            Traceback (most recent call last)",
                            "\u001b[1;32m~\\Anaconda3\\envs\\learn-env-ext\\lib\\site-packages\\ipywidgets\\widgets\\interaction.py\u001b[0m in \u001b[0;36mupdate\u001b[1;34m(self, *args)\u001b[0m\n\u001b[0;32m    249\u001b[0m                     \u001b[0mvalue\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mwidget\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mget_interact_value\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    250\u001b[0m                     \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[1;33m[\u001b[0m\u001b[0mwidget\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0m_kwarg\u001b[0m\u001b[1;33m]\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mvalue\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m--> 251\u001b[1;33m                 \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mresult\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mf\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m**\u001b[0m\u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m    252\u001b[0m                 \u001b[0mshow_inline_matplotlib_plots\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    253\u001b[0m                 \u001b[1;32mif\u001b[0m \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mauto_display\u001b[0m \u001b[1;32mand\u001b[0m \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mresult\u001b[0m \u001b[1;32mis\u001b[0m \u001b[1;32mnot\u001b[0m \u001b[1;32mNone\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
                            "\u001b[1;32m<ipython-input-291-2751dfedbe2b>\u001b[0m in \u001b[0;36mplot_shift_list\u001b[1;34m(true, pred, shift_list)\u001b[0m\n\u001b[0;32m     15\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m     16\u001b[0m         \u001b[0mdf_shift\u001b[0m\u001b[1;33m=\u001b[0m\u001b[0mpd\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mDataFrame\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m---> 17\u001b[1;33m         \u001b[0mdf_shift\u001b[0m\u001b[1;33m[\u001b[0m\u001b[1;34m'pred'\u001b[0m\u001b[1;33m]\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mpred\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mshift\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mshift\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m     18\u001b[0m         \u001b[0mdf_shift\u001b[0m\u001b[1;33m[\u001b[0m\u001b[1;34m'true'\u001b[0m\u001b[1;33m]\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mtrue\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m     19\u001b[0m         \u001b[0mdf_shift\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mdropna\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0minplace\u001b[0m\u001b[1;33m=\u001b[0m\u001b[1;32mTrue\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
                            "\u001b[1;31mAttributeError\u001b[0m: 'float' object has no attribute 'shift'"
                        ]
                    }
                ]
            }
        },
        "605db0287f8c473cb5835be03c0585f1": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "ab71c717ed1a476aa8ad77df2f888bee": {
            "model_name": "VBoxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_dom_classes": [
                    "widget-interact"
                ],
                "children": [
                    "IPY_MODEL_d621ee940b76485898c8698746bf5ca2",
                    "IPY_MODEL_2bc87d1cfdcf4275a6925645461d6afb",
                    "IPY_MODEL_74fe9ff00f2146ada699a5fa7553c70c",
                    "IPY_MODEL_243b42fe1893419d8e532bc955a330b6"
                ],
                "layout": "IPY_MODEL_605db0287f8c473cb5835be03c0585f1"
            }
        },
        "5c3e28538a2f4c0386d1ad4c8ba7c476": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "74f1c7308bc245149ca8a0ea01c0c318": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "d621ee940b76485898c8698746bf5ca2": {
            "model_name": "DropdownModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_options_labels": [
                    "115.98",
                    "116.19999999999999",
                    "116.47999999999999",
                    "116.47999999999999",
                    "116.77",
                    "116.72",
                    "116.73",
                    "116.63",
                    "116.54",
                    "116.28999999999999",
                    "116.13",
                    "116.13",
                    "116.36",
                    "116.65",
                    "116.55",
                    "117.12000000000002",
                    "117.08000000000001",
                    "117.19",
                    "117.19",
                    "117.1",
                    "117.1",
                    "116.86",
                    "116.11000000000001",
                    "116.42",
                    "115.68",
                    "115.67",
                    "115.94",
                    "115.92000000000002",
                    "115.89",
                    "116.45",
                    "116.38",
                    "116.55",
                    "116.83",
                    "116.89000000000001",
                    "116.89000000000001",
                    "116.79000000000002",
                    "114.93",
                    "115.57",
                    "115.94",
                    "115.94",
                    "115.84",
                    "116.0",
                    "116.38999999999999",
                    "115.16",
                    "114.98",
                    "114.66",
                    "114.77000000000001",
                    "114.77000000000001",
                    "113.87",
                    "113.78",
                    "114.11",
                    "114.3",
                    "114.51",
                    "114.31999999999998",
                    "114.49",
                    "114.59",
                    "114.7",
                    "113.01999999999998",
                    "112.48",
                    "112.48",
                    "113.23",
                    "113.58",
                    "113.88",
                    "113.76",
                    "113.4",
                    "112.74000000000001",
                    "112.16",
                    "112.99",
                    "113.45",
                    "113.45",
                    "114.38",
                    "112.07",
                    "112.07",
                    "111.54",
                    "111.16",
                    "110.96",
                    "111.49",
                    "111.12999999999998",
                    "111.58000000000001",
                    "111.58000000000001",
                    "112.5",
                    "112.5",
                    "112.9",
                    "112.92000000000002",
                    "112.68000000000002",
                    "111.52",
                    "112.27",
                    "112.27",
                    "112.27",
                    "112.27",
                    "112.27",
                    "112.88000000000001",
                    "112.92000000000002",
                    "113.54",
                    "113.74",
                    "113.86",
                    "113.66000000000001",
                    "113.72",
                    "113.27",
                    "112.22",
                    "112.94",
                    "113.37",
                    "113.37",
                    "113.18",
                    "113.12",
                    "112.73000000000002",
                    "111.98",
                    "112.37999999999998",
                    "112.31",
                    "112.27",
                    "112.2",
                    "112.06",
                    "111.88",
                    "112.53",
                    "112.53",
                    "112.53",
                    "113.08",
                    "113.08",
                    "113.24",
                    "113.19",
                    "112.64000000000001",
                    "112.71",
                    "112.7",
                    "112.4",
                    "112.34",
                    "112.5",
                    "112.5",
                    "111.37",
                    "110.89000000000001",
                    "110.96",
                    "110.78",
                    "110.64",
                    "110.56000000000002",
                    "110.92",
                    "111.54",
                    "111.25999999999999",
                    "111.25999999999999",
                    "111.30999999999999",
                    "111.31999999999998",
                    "111.31999999999998",
                    "111.41",
                    "111.41",
                    "111.41",
                    "111.41",
                    "111.41",
                    "111.41",
                    "111.41",
                    "111.41",
                    "111.38",
                    "111.11999999999999",
                    "110.83",
                    "111.02999999999999",
                    "111.02999999999999",
                    "110.6",
                    "110.29999999999998",
                    "109.09999999999998",
                    "109.57",
                    "108.99",
                    "108.97",
                    "109.12",
                    "109.04999999999998",
                    "109.03999999999999",
                    "109.52",
                    "109.81",
                    "109.34",
                    "109.22999999999999",
                    "109.22999999999999",
                    "108.98",
                    "109.02",
                    "108.18",
                    "108.18",
                    "108.51",
                    "108.51",
                    "108.51",
                    "108.0",
                    "107.93000000000002",
                    "107.91",
                    "108.77000000000001",
                    "108.65",
                    "108.07",
                    "108.28",
                    "108.65",
                    "108.05",
                    "109.60000000000001",
                    "110.18",
                    "110.5",
                    "110.48",
                    "110.6",
                    "110.64",
                    "110.89000000000001",
                    "111.73",
                    "111.06",
                    "111.38",
                    "111.41",
                    "111.66",
                    "111.65",
                    "111.5",
                    "111.83",
                    "111.83",
                    "112.07",
                    "112.07",
                    "112.13999999999999",
                    "112.12",
                    "112.56",
                    "112.82",
                    "112.82",
                    "113.37",
                    "113.46",
                    "113.46",
                    "113.45",
                    "113.47",
                    "113.85000000000001",
                    "114.24",
                    "114.24",
                    "114.24",
                    "114.21999999999998",
                    "113.93000000000002",
                    "113.88",
                    "114.57",
                    "114.51",
                    "114.38",
                    "114.38",
                    "113.83",
                    "114.05",
                    "113.88",
                    "113.91",
                    "113.70000000000002",
                    "113.64",
                    "113.59",
                    "113.59",
                    "113.5",
                    "113.5",
                    "113.93000000000002",
                    "114.16999999999999",
                    "114.06",
                    "114.07999999999998",
                    "114.31999999999998",
                    "114.18",
                    "113.99000000000001",
                    "114.06",
                    "114.06",
                    "113.88",
                    "113.86",
                    "113.86",
                    "114.05",
                    "114.29",
                    "114.11999999999999",
                    "114.11999999999999",
                    "114.21",
                    "114.09",
                    "114.11999999999999",
                    "114.16",
                    "114.05",
                    "114.44999999999999",
                    "115.5",
                    "115.35",
                    "115.35",
                    "115.11",
                    "115.11",
                    "115.2",
                    "115.36",
                    "115.32",
                    "115.27999999999999",
                    "115.22",
                    "115.22",
                    "115.27999999999999",
                    "115.48",
                    "116.32",
                    "116.01000000000002",
                    "115.86",
                    "115.86",
                    "116.06000000000002",
                    "116.14",
                    "116.27",
                    "116.19999999999999",
                    "116.33999999999999",
                    "116.56",
                    "116.4",
                    "116.45",
                    "116.45",
                    "116.45"
                ],
                "description": "true",
                "index": 0,
                "layout": "IPY_MODEL_5c3e28538a2f4c0386d1ad4c8ba7c476",
                "style": "IPY_MODEL_74f1c7308bc245149ca8a0ea01c0c318"
            }
        },
        "0535c85dbe3b4c4c97435bf7fe4a00d8": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "eab66d4889ca4eff970ef85a758a4577": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "2bc87d1cfdcf4275a6925645461d6afb": {
            "model_name": "DropdownModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_options_labels": [
                    "115.85887908935547",
                    "115.96217346191406",
                    "116.21099853515625",
                    "116.51026916503906",
                    "116.44573211669922",
                    "116.77699279785156",
                    "116.65660095214844",
                    "116.65394592285156",
                    "116.52963256835938",
                    "116.43795013427734",
                    "116.16097259521484",
                    "116.02178192138672",
                    "116.0703125",
                    "116.36695861816406",
                    "116.69207000732422",
                    "116.50367736816406",
                    "117.20589447021484",
                    "117.04352569580078",
                    "117.14323425292969",
                    "117.11446380615234",
                    "116.98936462402344",
                    "117.00788116455078",
                    "116.7171859741211",
                    "115.85929870605469",
                    "116.379638671875",
                    "115.51661682128906",
                    "115.6009521484375",
                    "115.97655487060547",
                    "115.93025970458984",
                    "115.880859375",
                    "116.55480194091797",
                    "116.37938690185547",
                    "116.5513916015625",
                    "116.86123657226562",
                    "116.86395263671875",
                    "116.82482147216797",
                    "116.69039154052734",
                    "114.53022766113281",
                    "115.49700927734375",
                    "116.01007080078125",
                    "115.95280456542969",
                    "115.81319427490234",
                    "116.0107421875",
                    "116.45984649658203",
                    "114.94313049316406",
                    "114.85895538330078",
                    "114.59385681152344",
                    "114.76580047607422",
                    "114.7887191772461",
                    "113.8150863647461",
                    "113.7582778930664",
                    "114.15794372558594",
                    "114.37068939208984",
                    "114.57695770263672",
                    "114.3397216796875",
                    "114.51215362548828",
                    "114.6137466430664",
                    "114.71529388427734",
                    "112.92506408691406",
                    "112.41398620605469",
                    "112.46980285644531",
                    "113.26464080810547",
                    "113.66800689697266",
                    "113.95883178710938",
                    "113.79788970947266",
                    "113.39488983154297",
                    "112.7228012084961",
                    "112.15782165527344",
                    "112.9742202758789",
                    "113.51158142089844",
                    "113.49686431884766",
                    "114.4570083618164",
                    "112.06981658935547",
                    "111.99729919433594",
                    "111.56987762451172",
                    "111.21161651611328",
                    "111.02033996582031",
                    "111.49645233154297",
                    "111.23039245605469",
                    "111.60277557373047",
                    "111.64196014404297",
                    "112.50764465332031",
                    "112.55686950683594",
                    "112.91718292236328",
                    "112.9327163696289",
                    "112.66971588134766",
                    "111.54632568359375",
                    "112.18833923339844",
                    "112.27843475341797",
                    "112.27652740478516",
                    "112.2762451171875",
                    "112.2769775390625",
                    "112.87650299072266",
                    "112.9425048828125",
                    "113.55367279052734",
                    "113.75907135009766",
                    "113.85009765625",
                    "113.61683654785156",
                    "113.67030334472656",
                    "113.21281433105469",
                    "112.1783447265625",
                    "112.87167358398438",
                    "113.39126586914062",
                    "113.39349365234375",
                    "113.1799545288086",
                    "113.11089324951172",
                    "112.7244873046875",
                    "111.99266815185547",
                    "112.3542251586914",
                    "112.34068298339844",
                    "112.29927062988281",
                    "112.23140716552734",
                    "112.09429931640625",
                    "111.91594696044922",
                    "112.53155517578125",
                    "112.57424926757812",
                    "112.55375671386719",
                    "113.09176635742188",
                    "113.10319519042969",
                    "113.23992156982422",
                    "113.18119812011719",
                    "112.61956024169922",
                    "112.67369842529297",
                    "112.68890380859375",
                    "112.40240478515625",
                    "112.33646392822266",
                    "112.50235748291016",
                    "112.51812744140625",
                    "111.44834899902344",
                    "110.94120025634766",
                    "110.978759765625",
                    "110.8450698852539",
                    "110.71104431152344",
                    "110.62862396240234",
                    "110.93680572509766",
                    "111.54008483886719",
                    "111.33705139160156",
                    "111.29434967041016",
                    "111.33177185058594",
                    "111.34075164794922",
                    "111.33738708496094",
                    "111.41676330566406",
                    "111.42343139648438",
                    "111.42108917236328",
                    "111.41981506347656",
                    "111.41938018798828",
                    "111.41938018798828",
                    "111.41961669921875",
                    "111.41996765136719",
                    "111.39289093017578",
                    "111.15476989746094",
                    "110.87242126464844",
                    "111.02383422851562",
                    "111.05160522460938",
                    "110.67377471923828",
                    "110.36719512939453",
                    "109.34368133544922",
                    "109.55009460449219",
                    "109.14775085449219",
                    "109.05046844482422",
                    "109.15467071533203",
                    "109.12223815917969",
                    "109.10308837890625",
                    "109.48075866699219",
                    "109.79275512695312",
                    "109.45431518554688",
                    "109.29329681396484",
                    "109.26354217529297",
                    "109.06034851074219",
                    "109.04883575439453",
                    "108.40438842773438",
                    "108.25631713867188",
                    "108.47732543945312",
                    "108.5356674194336",
                    "108.54523468017578",
                    "108.16226196289062",
                    "108.01374816894531",
                    "107.96439361572266",
                    "108.59841918945312",
                    "108.66703796386719",
                    "108.23226928710938",
                    "108.28012084960938",
                    "108.57874298095703",
                    "108.1978759765625",
                    "109.29931640625",
                    "110.04570770263672",
                    "110.43517303466797",
                    "110.46007537841797",
                    "110.5561752319336",
                    "110.60175323486328",
                    "110.82598876953125",
                    "111.62006378173828",
                    "111.09036254882812",
                    "111.30819702148438",
                    "111.373291015625",
                    "111.60984802246094",
                    "111.62543487548828",
                    "111.4856185913086",
                    "111.78169250488281",
                    "111.81543731689453",
                    "112.0406265258789",
                    "112.05807495117188",
                    "112.12079620361328",
                    "112.10579681396484",
                    "112.53006744384766",
                    "112.812744140625",
                    "112.81009674072266",
                    "113.3535385131836",
                    "113.45309448242188",
                    "113.4289321899414",
                    "113.40821075439453",
                    "113.42759704589844",
                    "113.8273696899414",
                    "114.24425506591797",
                    "114.21770477294922",
                    "114.1943588256836",
                    "114.1684799194336",
                    "113.86038970947266",
                    "113.82034301757812",
                    "114.58655548095703",
                    "114.50733947753906",
                    "114.3350830078125",
                    "114.3384780883789",
                    "113.75743103027344",
                    "114.01094055175781",
                    "113.85874938964844",
                    "113.89453125",
                    "113.68414306640625",
                    "113.62745666503906",
                    "113.58773040771484",
                    "113.59453582763672",
                    "113.50528717041016",
                    "113.50639343261719",
                    "113.96165466308594",
                    "114.21331024169922",
                    "114.06380462646484",
                    "114.06715393066406",
                    "114.3234634399414",
                    "114.16009521484375",
                    "113.94795989990234",
                    "114.03315734863281",
                    "114.04373168945312",
                    "113.85340881347656",
                    "113.83856201171875",
                    "113.8500747680664",
                    "114.05702209472656",
                    "114.31290435791016",
                    "114.11112213134766",
                    "114.10076904296875",
                    "114.20171356201172",
                    "114.06999969482422",
                    "114.10161590576172",
                    "114.14958953857422",
                    "114.03076171875",
                    "114.46531677246094",
                    "115.64114379882812",
                    "115.3586654663086",
                    "115.29818725585938",
                    "115.01641082763672",
                    "115.0342025756836",
                    "115.15290069580078",
                    "115.33531188964844",
                    "115.27425384521484",
                    "115.2251968383789",
                    "115.16413116455078",
                    "115.1749267578125",
                    "115.25056457519531",
                    "115.47853088378906",
                    "116.4526138305664",
                    "115.95143127441406",
                    "115.75618743896484",
                    "115.78627014160156",
                    "116.0344009399414",
                    "116.1069564819336",
                    "116.24121856689453",
                    "116.13190460205078",
                    "116.30216979980469",
                    "116.55298614501953",
                    "116.31229400634766",
                    "116.3839340209961",
                    "116.38636779785156"
                ],
                "description": "pred",
                "index": 0,
                "layout": "IPY_MODEL_0535c85dbe3b4c4c97435bf7fe4a00d8",
                "style": "IPY_MODEL_eab66d4889ca4eff970ef85a758a4577"
            }
        },
        "2fffbb9ebf15474d90a733ebe1419f80": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "810e08ac8f854a01911e1fc4205bd2b0": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "74fe9ff00f2146ada699a5fa7553c70c": {
            "model_name": "DropdownModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_options_labels": [
                    "-4",
                    "-3",
                    "-2",
                    "-1",
                    "0",
                    "1",
                    "2",
                    "3",
                    "4"
                ],
                "description": "shift_list",
                "index": 0,
                "layout": "IPY_MODEL_2fffbb9ebf15474d90a733ebe1419f80",
                "style": "IPY_MODEL_810e08ac8f854a01911e1fc4205bd2b0"
            }
        },
        "1e0d7084298c457a8da69f16366dd071": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "243b42fe1893419d8e532bc955a330b6": {
            "model_name": "OutputModel",
            "model_module": "@jupyter-widgets/output",
            "model_module_version": "1.0.0",
            "state": {
                "layout": "IPY_MODEL_1e0d7084298c457a8da69f16366dd071",
                "outputs": [
                    {
                        "output_type": "error",
                        "ename": "TypeError",
                        "evalue": "concat() got an unexpected keyword argument 'columns'",
                        "traceback": [
                            "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
                            "\u001b[1;31mTypeError\u001b[0m                                 Traceback (most recent call last)",
                            "\u001b[1;32m~\\Anaconda3\\envs\\learn-env-ext\\lib\\site-packages\\ipywidgets\\widgets\\interaction.py\u001b[0m in \u001b[0;36mupdate\u001b[1;34m(self, *args)\u001b[0m\n\u001b[0;32m    249\u001b[0m                     \u001b[0mvalue\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mwidget\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mget_interact_value\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    250\u001b[0m                     \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[1;33m[\u001b[0m\u001b[0mwidget\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0m_kwarg\u001b[0m\u001b[1;33m]\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mvalue\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m--> 251\u001b[1;33m                 \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mresult\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mf\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m**\u001b[0m\u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m    252\u001b[0m                 \u001b[0mshow_inline_matplotlib_plots\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    253\u001b[0m                 \u001b[1;32mif\u001b[0m \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mauto_display\u001b[0m \u001b[1;32mand\u001b[0m \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mresult\u001b[0m \u001b[1;32mis\u001b[0m \u001b[1;32mnot\u001b[0m \u001b[1;32mNone\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
                            "\u001b[1;32m<ipython-input-292-0ea0f5c921d4>\u001b[0m in \u001b[0;36mplot_shift_list\u001b[1;34m(true, pred, shift_list)\u001b[0m\n\u001b[0;32m     12\u001b[0m                     shift_list=shift_list ):\n\u001b[0;32m     13\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m---> 14\u001b[1;33m     \u001b[0mdf_data\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mpd\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mconcat\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m[\u001b[0m\u001b[0mtrue\u001b[0m\u001b[1;33m,\u001b[0m\u001b[0mpred\u001b[0m\u001b[1;33m]\u001b[0m\u001b[1;33m,\u001b[0m\u001b[0maxis\u001b[0m\u001b[1;33m=\u001b[0m\u001b[1;36m1\u001b[0m\u001b[1;33m,\u001b[0m\u001b[0mcolumns\u001b[0m\u001b[1;33m=\u001b[0m\u001b[1;33m[\u001b[0m\u001b[1;34m'true'\u001b[0m\u001b[1;33m,\u001b[0m\u001b[1;34m'pred'\u001b[0m\u001b[1;33m]\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m     15\u001b[0m     \u001b[1;32mfor\u001b[0m \u001b[0mshift\u001b[0m \u001b[1;32min\u001b[0m \u001b[0mnp\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mnditer\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mshift_list\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m     16\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n",
                            "\u001b[1;31mTypeError\u001b[0m: concat() got an unexpected keyword argument 'columns'"
                        ]
                    }
                ]
            }
        },
        "a00f95379b7b4371a5b698557822f19e": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "c13a3bc3ec9f424abd004d97c6435ded": {
            "model_name": "VBoxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_dom_classes": [
                    "widget-interact"
                ],
                "children": [
                    "IPY_MODEL_1c56c140f41f4b44b59c194dd1e816c9",
                    "IPY_MODEL_9753108269c042de87654e99ce63d8a1",
                    "IPY_MODEL_1dd7c01e0fed4eac8cd2851cf2aadd73",
                    "IPY_MODEL_8205558573c54fa88d85e1ec4e345c6b"
                ],
                "layout": "IPY_MODEL_a00f95379b7b4371a5b698557822f19e"
            }
        },
        "44dcd861f8314447b0b5199a94efb9d8": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "4eff50b5dd5e4ad1a2c039fc8cd80ae9": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "1c56c140f41f4b44b59c194dd1e816c9": {
            "model_name": "DropdownModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_options_labels": [
                    "115.98",
                    "116.19999999999999",
                    "116.47999999999999",
                    "116.47999999999999",
                    "116.77",
                    "116.72",
                    "116.73",
                    "116.63",
                    "116.54",
                    "116.28999999999999",
                    "116.13",
                    "116.13",
                    "116.36",
                    "116.65",
                    "116.55",
                    "117.12000000000002",
                    "117.08000000000001",
                    "117.19",
                    "117.19",
                    "117.1",
                    "117.1",
                    "116.86",
                    "116.11000000000001",
                    "116.42",
                    "115.68",
                    "115.67",
                    "115.94",
                    "115.92000000000002",
                    "115.89",
                    "116.45",
                    "116.38",
                    "116.55",
                    "116.83",
                    "116.89000000000001",
                    "116.89000000000001",
                    "116.79000000000002",
                    "114.93",
                    "115.57",
                    "115.94",
                    "115.94",
                    "115.84",
                    "116.0",
                    "116.38999999999999",
                    "115.16",
                    "114.98",
                    "114.66",
                    "114.77000000000001",
                    "114.77000000000001",
                    "113.87",
                    "113.78",
                    "114.11",
                    "114.3",
                    "114.51",
                    "114.31999999999998",
                    "114.49",
                    "114.59",
                    "114.7",
                    "113.01999999999998",
                    "112.48",
                    "112.48",
                    "113.23",
                    "113.58",
                    "113.88",
                    "113.76",
                    "113.4",
                    "112.74000000000001",
                    "112.16",
                    "112.99",
                    "113.45",
                    "113.45",
                    "114.38",
                    "112.07",
                    "112.07",
                    "111.54",
                    "111.16",
                    "110.96",
                    "111.49",
                    "111.12999999999998",
                    "111.58000000000001",
                    "111.58000000000001",
                    "112.5",
                    "112.5",
                    "112.9",
                    "112.92000000000002",
                    "112.68000000000002",
                    "111.52",
                    "112.27",
                    "112.27",
                    "112.27",
                    "112.27",
                    "112.27",
                    "112.88000000000001",
                    "112.92000000000002",
                    "113.54",
                    "113.74",
                    "113.86",
                    "113.66000000000001",
                    "113.72",
                    "113.27",
                    "112.22",
                    "112.94",
                    "113.37",
                    "113.37",
                    "113.18",
                    "113.12",
                    "112.73000000000002",
                    "111.98",
                    "112.37999999999998",
                    "112.31",
                    "112.27",
                    "112.2",
                    "112.06",
                    "111.88",
                    "112.53",
                    "112.53",
                    "112.53",
                    "113.08",
                    "113.08",
                    "113.24",
                    "113.19",
                    "112.64000000000001",
                    "112.71",
                    "112.7",
                    "112.4",
                    "112.34",
                    "112.5",
                    "112.5",
                    "111.37",
                    "110.89000000000001",
                    "110.96",
                    "110.78",
                    "110.64",
                    "110.56000000000002",
                    "110.92",
                    "111.54",
                    "111.25999999999999",
                    "111.25999999999999",
                    "111.30999999999999",
                    "111.31999999999998",
                    "111.31999999999998",
                    "111.41",
                    "111.41",
                    "111.41",
                    "111.41",
                    "111.41",
                    "111.41",
                    "111.41",
                    "111.41",
                    "111.38",
                    "111.11999999999999",
                    "110.83",
                    "111.02999999999999",
                    "111.02999999999999",
                    "110.6",
                    "110.29999999999998",
                    "109.09999999999998",
                    "109.57",
                    "108.99",
                    "108.97",
                    "109.12",
                    "109.04999999999998",
                    "109.03999999999999",
                    "109.52",
                    "109.81",
                    "109.34",
                    "109.22999999999999",
                    "109.22999999999999",
                    "108.98",
                    "109.02",
                    "108.18",
                    "108.18",
                    "108.51",
                    "108.51",
                    "108.51",
                    "108.0",
                    "107.93000000000002",
                    "107.91",
                    "108.77000000000001",
                    "108.65",
                    "108.07",
                    "108.28",
                    "108.65",
                    "108.05",
                    "109.60000000000001",
                    "110.18",
                    "110.5",
                    "110.48",
                    "110.6",
                    "110.64",
                    "110.89000000000001",
                    "111.73",
                    "111.06",
                    "111.38",
                    "111.41",
                    "111.66",
                    "111.65",
                    "111.5",
                    "111.83",
                    "111.83",
                    "112.07",
                    "112.07",
                    "112.13999999999999",
                    "112.12",
                    "112.56",
                    "112.82",
                    "112.82",
                    "113.37",
                    "113.46",
                    "113.46",
                    "113.45",
                    "113.47",
                    "113.85000000000001",
                    "114.24",
                    "114.24",
                    "114.24",
                    "114.21999999999998",
                    "113.93000000000002",
                    "113.88",
                    "114.57",
                    "114.51",
                    "114.38",
                    "114.38",
                    "113.83",
                    "114.05",
                    "113.88",
                    "113.91",
                    "113.70000000000002",
                    "113.64",
                    "113.59",
                    "113.59",
                    "113.5",
                    "113.5",
                    "113.93000000000002",
                    "114.16999999999999",
                    "114.06",
                    "114.07999999999998",
                    "114.31999999999998",
                    "114.18",
                    "113.99000000000001",
                    "114.06",
                    "114.06",
                    "113.88",
                    "113.86",
                    "113.86",
                    "114.05",
                    "114.29",
                    "114.11999999999999",
                    "114.11999999999999",
                    "114.21",
                    "114.09",
                    "114.11999999999999",
                    "114.16",
                    "114.05",
                    "114.44999999999999",
                    "115.5",
                    "115.35",
                    "115.35",
                    "115.11",
                    "115.11",
                    "115.2",
                    "115.36",
                    "115.32",
                    "115.27999999999999",
                    "115.22",
                    "115.22",
                    "115.27999999999999",
                    "115.48",
                    "116.32",
                    "116.01000000000002",
                    "115.86",
                    "115.86",
                    "116.06000000000002",
                    "116.14",
                    "116.27",
                    "116.19999999999999",
                    "116.33999999999999",
                    "116.56",
                    "116.4",
                    "116.45",
                    "116.45",
                    "116.45"
                ],
                "description": "true",
                "index": 0,
                "layout": "IPY_MODEL_44dcd861f8314447b0b5199a94efb9d8",
                "style": "IPY_MODEL_4eff50b5dd5e4ad1a2c039fc8cd80ae9"
            }
        },
        "7b9b73bb7d0840f2abde594573acc74d": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "455dce48f2954bd0883c132879c399cf": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "9753108269c042de87654e99ce63d8a1": {
            "model_name": "DropdownModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_options_labels": [
                    "115.85887908935547",
                    "115.96217346191406",
                    "116.21099853515625",
                    "116.51026916503906",
                    "116.44573211669922",
                    "116.77699279785156",
                    "116.65660095214844",
                    "116.65394592285156",
                    "116.52963256835938",
                    "116.43795013427734",
                    "116.16097259521484",
                    "116.02178192138672",
                    "116.0703125",
                    "116.36695861816406",
                    "116.69207000732422",
                    "116.50367736816406",
                    "117.20589447021484",
                    "117.04352569580078",
                    "117.14323425292969",
                    "117.11446380615234",
                    "116.98936462402344",
                    "117.00788116455078",
                    "116.7171859741211",
                    "115.85929870605469",
                    "116.379638671875",
                    "115.51661682128906",
                    "115.6009521484375",
                    "115.97655487060547",
                    "115.93025970458984",
                    "115.880859375",
                    "116.55480194091797",
                    "116.37938690185547",
                    "116.5513916015625",
                    "116.86123657226562",
                    "116.86395263671875",
                    "116.82482147216797",
                    "116.69039154052734",
                    "114.53022766113281",
                    "115.49700927734375",
                    "116.01007080078125",
                    "115.95280456542969",
                    "115.81319427490234",
                    "116.0107421875",
                    "116.45984649658203",
                    "114.94313049316406",
                    "114.85895538330078",
                    "114.59385681152344",
                    "114.76580047607422",
                    "114.7887191772461",
                    "113.8150863647461",
                    "113.7582778930664",
                    "114.15794372558594",
                    "114.37068939208984",
                    "114.57695770263672",
                    "114.3397216796875",
                    "114.51215362548828",
                    "114.6137466430664",
                    "114.71529388427734",
                    "112.92506408691406",
                    "112.41398620605469",
                    "112.46980285644531",
                    "113.26464080810547",
                    "113.66800689697266",
                    "113.95883178710938",
                    "113.79788970947266",
                    "113.39488983154297",
                    "112.7228012084961",
                    "112.15782165527344",
                    "112.9742202758789",
                    "113.51158142089844",
                    "113.49686431884766",
                    "114.4570083618164",
                    "112.06981658935547",
                    "111.99729919433594",
                    "111.56987762451172",
                    "111.21161651611328",
                    "111.02033996582031",
                    "111.49645233154297",
                    "111.23039245605469",
                    "111.60277557373047",
                    "111.64196014404297",
                    "112.50764465332031",
                    "112.55686950683594",
                    "112.91718292236328",
                    "112.9327163696289",
                    "112.66971588134766",
                    "111.54632568359375",
                    "112.18833923339844",
                    "112.27843475341797",
                    "112.27652740478516",
                    "112.2762451171875",
                    "112.2769775390625",
                    "112.87650299072266",
                    "112.9425048828125",
                    "113.55367279052734",
                    "113.75907135009766",
                    "113.85009765625",
                    "113.61683654785156",
                    "113.67030334472656",
                    "113.21281433105469",
                    "112.1783447265625",
                    "112.87167358398438",
                    "113.39126586914062",
                    "113.39349365234375",
                    "113.1799545288086",
                    "113.11089324951172",
                    "112.7244873046875",
                    "111.99266815185547",
                    "112.3542251586914",
                    "112.34068298339844",
                    "112.29927062988281",
                    "112.23140716552734",
                    "112.09429931640625",
                    "111.91594696044922",
                    "112.53155517578125",
                    "112.57424926757812",
                    "112.55375671386719",
                    "113.09176635742188",
                    "113.10319519042969",
                    "113.23992156982422",
                    "113.18119812011719",
                    "112.61956024169922",
                    "112.67369842529297",
                    "112.68890380859375",
                    "112.40240478515625",
                    "112.33646392822266",
                    "112.50235748291016",
                    "112.51812744140625",
                    "111.44834899902344",
                    "110.94120025634766",
                    "110.978759765625",
                    "110.8450698852539",
                    "110.71104431152344",
                    "110.62862396240234",
                    "110.93680572509766",
                    "111.54008483886719",
                    "111.33705139160156",
                    "111.29434967041016",
                    "111.33177185058594",
                    "111.34075164794922",
                    "111.33738708496094",
                    "111.41676330566406",
                    "111.42343139648438",
                    "111.42108917236328",
                    "111.41981506347656",
                    "111.41938018798828",
                    "111.41938018798828",
                    "111.41961669921875",
                    "111.41996765136719",
                    "111.39289093017578",
                    "111.15476989746094",
                    "110.87242126464844",
                    "111.02383422851562",
                    "111.05160522460938",
                    "110.67377471923828",
                    "110.36719512939453",
                    "109.34368133544922",
                    "109.55009460449219",
                    "109.14775085449219",
                    "109.05046844482422",
                    "109.15467071533203",
                    "109.12223815917969",
                    "109.10308837890625",
                    "109.48075866699219",
                    "109.79275512695312",
                    "109.45431518554688",
                    "109.29329681396484",
                    "109.26354217529297",
                    "109.06034851074219",
                    "109.04883575439453",
                    "108.40438842773438",
                    "108.25631713867188",
                    "108.47732543945312",
                    "108.5356674194336",
                    "108.54523468017578",
                    "108.16226196289062",
                    "108.01374816894531",
                    "107.96439361572266",
                    "108.59841918945312",
                    "108.66703796386719",
                    "108.23226928710938",
                    "108.28012084960938",
                    "108.57874298095703",
                    "108.1978759765625",
                    "109.29931640625",
                    "110.04570770263672",
                    "110.43517303466797",
                    "110.46007537841797",
                    "110.5561752319336",
                    "110.60175323486328",
                    "110.82598876953125",
                    "111.62006378173828",
                    "111.09036254882812",
                    "111.30819702148438",
                    "111.373291015625",
                    "111.60984802246094",
                    "111.62543487548828",
                    "111.4856185913086",
                    "111.78169250488281",
                    "111.81543731689453",
                    "112.0406265258789",
                    "112.05807495117188",
                    "112.12079620361328",
                    "112.10579681396484",
                    "112.53006744384766",
                    "112.812744140625",
                    "112.81009674072266",
                    "113.3535385131836",
                    "113.45309448242188",
                    "113.4289321899414",
                    "113.40821075439453",
                    "113.42759704589844",
                    "113.8273696899414",
                    "114.24425506591797",
                    "114.21770477294922",
                    "114.1943588256836",
                    "114.1684799194336",
                    "113.86038970947266",
                    "113.82034301757812",
                    "114.58655548095703",
                    "114.50733947753906",
                    "114.3350830078125",
                    "114.3384780883789",
                    "113.75743103027344",
                    "114.01094055175781",
                    "113.85874938964844",
                    "113.89453125",
                    "113.68414306640625",
                    "113.62745666503906",
                    "113.58773040771484",
                    "113.59453582763672",
                    "113.50528717041016",
                    "113.50639343261719",
                    "113.96165466308594",
                    "114.21331024169922",
                    "114.06380462646484",
                    "114.06715393066406",
                    "114.3234634399414",
                    "114.16009521484375",
                    "113.94795989990234",
                    "114.03315734863281",
                    "114.04373168945312",
                    "113.85340881347656",
                    "113.83856201171875",
                    "113.8500747680664",
                    "114.05702209472656",
                    "114.31290435791016",
                    "114.11112213134766",
                    "114.10076904296875",
                    "114.20171356201172",
                    "114.06999969482422",
                    "114.10161590576172",
                    "114.14958953857422",
                    "114.03076171875",
                    "114.46531677246094",
                    "115.64114379882812",
                    "115.3586654663086",
                    "115.29818725585938",
                    "115.01641082763672",
                    "115.0342025756836",
                    "115.15290069580078",
                    "115.33531188964844",
                    "115.27425384521484",
                    "115.2251968383789",
                    "115.16413116455078",
                    "115.1749267578125",
                    "115.25056457519531",
                    "115.47853088378906",
                    "116.4526138305664",
                    "115.95143127441406",
                    "115.75618743896484",
                    "115.78627014160156",
                    "116.0344009399414",
                    "116.1069564819336",
                    "116.24121856689453",
                    "116.13190460205078",
                    "116.30216979980469",
                    "116.55298614501953",
                    "116.31229400634766",
                    "116.3839340209961",
                    "116.38636779785156"
                ],
                "description": "pred",
                "index": 0,
                "layout": "IPY_MODEL_7b9b73bb7d0840f2abde594573acc74d",
                "style": "IPY_MODEL_455dce48f2954bd0883c132879c399cf"
            }
        },
        "09b97de839ab4946b72d607558756774": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "d2908e2c6c64482b97fa1762dd0a4b93": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "1dd7c01e0fed4eac8cd2851cf2aadd73": {
            "model_name": "DropdownModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_options_labels": [
                    "-4",
                    "-3",
                    "-2",
                    "-1",
                    "0",
                    "1",
                    "2",
                    "3",
                    "4"
                ],
                "description": "shift_list",
                "index": 0,
                "layout": "IPY_MODEL_09b97de839ab4946b72d607558756774",
                "style": "IPY_MODEL_d2908e2c6c64482b97fa1762dd0a4b93"
            }
        },
        "4011f8ca9d9c4a3cb78f85d89ad186bd": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "8205558573c54fa88d85e1ec4e345c6b": {
            "model_name": "OutputModel",
            "model_module": "@jupyter-widgets/output",
            "model_module_version": "1.0.0",
            "state": {
                "layout": "IPY_MODEL_4011f8ca9d9c4a3cb78f85d89ad186bd",
                "outputs": [
                    {
                        "output_type": "error",
                        "ename": "TypeError",
                        "evalue": "cannot concatenate object of type \"<class 'float'>\"; only pd.Series, pd.DataFrame, and pd.Panel (deprecated) objs are valid",
                        "traceback": [
                            "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
                            "\u001b[1;31mTypeError\u001b[0m                                 Traceback (most recent call last)",
                            "\u001b[1;32m~\\Anaconda3\\envs\\learn-env-ext\\lib\\site-packages\\ipywidgets\\widgets\\interaction.py\u001b[0m in \u001b[0;36mupdate\u001b[1;34m(self, *args)\u001b[0m\n\u001b[0;32m    249\u001b[0m                     \u001b[0mvalue\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mwidget\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mget_interact_value\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    250\u001b[0m                     \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[1;33m[\u001b[0m\u001b[0mwidget\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0m_kwarg\u001b[0m\u001b[1;33m]\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mvalue\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m--> 251\u001b[1;33m                 \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mresult\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mf\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m**\u001b[0m\u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m    252\u001b[0m                 \u001b[0mshow_inline_matplotlib_plots\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    253\u001b[0m                 \u001b[1;32mif\u001b[0m \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mauto_display\u001b[0m \u001b[1;32mand\u001b[0m \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mresult\u001b[0m \u001b[1;32mis\u001b[0m \u001b[1;32mnot\u001b[0m \u001b[1;32mNone\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
                            "\u001b[1;32m<ipython-input-293-2790207e6864>\u001b[0m in \u001b[0;36mplot_shift_list\u001b[1;34m(true, pred, shift_list)\u001b[0m\n\u001b[0;32m     12\u001b[0m                     shift_list=shift_list ):\n\u001b[0;32m     13\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m---> 14\u001b[1;33m     \u001b[0mdf_data\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mpd\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mconcat\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m[\u001b[0m\u001b[0mtrue\u001b[0m\u001b[1;33m,\u001b[0m\u001b[0mpred\u001b[0m\u001b[1;33m]\u001b[0m\u001b[1;33m,\u001b[0m\u001b[0maxis\u001b[0m\u001b[1;33m=\u001b[0m\u001b[1;36m1\u001b[0m\u001b[1;33m,\u001b[0m\u001b[0mnames\u001b[0m\u001b[1;33m=\u001b[0m\u001b[1;33m[\u001b[0m\u001b[1;34m'true'\u001b[0m\u001b[1;33m,\u001b[0m\u001b[1;34m'pred'\u001b[0m\u001b[1;33m]\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m     15\u001b[0m     \u001b[1;32mfor\u001b[0m \u001b[0mshift\u001b[0m \u001b[1;32min\u001b[0m \u001b[0mnp\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mnditer\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mshift_list\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m     16\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n",
                            "\u001b[1;32m~\\Anaconda3\\envs\\learn-env-ext\\lib\\site-packages\\pandas\\core\\reshape\\concat.py\u001b[0m in \u001b[0;36mconcat\u001b[1;34m(objs, axis, join, join_axes, ignore_index, keys, levels, names, verify_integrity, sort, copy)\u001b[0m\n\u001b[0;32m    226\u001b[0m                        \u001b[0mkeys\u001b[0m\u001b[1;33m=\u001b[0m\u001b[0mkeys\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mlevels\u001b[0m\u001b[1;33m=\u001b[0m\u001b[0mlevels\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mnames\u001b[0m\u001b[1;33m=\u001b[0m\u001b[0mnames\u001b[0m\u001b[1;33m,\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    227\u001b[0m                        \u001b[0mverify_integrity\u001b[0m\u001b[1;33m=\u001b[0m\u001b[0mverify_integrity\u001b[0m\u001b[1;33m,\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m--> 228\u001b[1;33m                        copy=copy, sort=sort)\n\u001b[0m\u001b[0;32m    229\u001b[0m     \u001b[1;32mreturn\u001b[0m \u001b[0mop\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mget_result\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    230\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n",
                            "\u001b[1;32m~\\Anaconda3\\envs\\learn-env-ext\\lib\\site-packages\\pandas\\core\\reshape\\concat.py\u001b[0m in \u001b[0;36m__init__\u001b[1;34m(self, objs, axis, join, join_axes, keys, levels, names, ignore_index, verify_integrity, copy, sort)\u001b[0m\n\u001b[0;32m    287\u001b[0m                        \u001b[1;34m' only pd.Series, pd.DataFrame, and pd.Panel'\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    288\u001b[0m                        ' (deprecated) objs are valid'.format(type(obj)))\n\u001b[1;32m--> 289\u001b[1;33m                 \u001b[1;32mraise\u001b[0m \u001b[0mTypeError\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mmsg\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m    290\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    291\u001b[0m             \u001b[1;31m# consolidate\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
                            "\u001b[1;31mTypeError\u001b[0m: cannot concatenate object of type \"<class 'float'>\"; only pd.Series, pd.DataFrame, and pd.Panel (deprecated) objs are valid"
                        ]
                    }
                ]
            }
        },
        "ef8828dadb784912ba548b409d34f09e": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "0df0e0c2e0f540978b0d1adc1983080e": {
            "model_name": "VBoxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_dom_classes": [
                    "widget-interact"
                ],
                "children": [
                    "IPY_MODEL_68872a570ae643e3bc300b304b752c56",
                    "IPY_MODEL_b4f926645241423aa0754a7fc5917911",
                    "IPY_MODEL_0df36fb575bf42809a82411de19c14e4",
                    "IPY_MODEL_bc4884cd7ce146b8acda8843650d62ca"
                ],
                "layout": "IPY_MODEL_ef8828dadb784912ba548b409d34f09e"
            }
        },
        "3dee6141b8e84083b9172ff6fc2ade0c": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "dbd805527c0c40f5b817bb6395f3e45a": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "68872a570ae643e3bc300b304b752c56": {
            "model_name": "DropdownModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_options_labels": [
                    "115.98",
                    "116.19999999999999",
                    "116.47999999999999",
                    "116.47999999999999",
                    "116.77",
                    "116.72",
                    "116.73",
                    "116.63",
                    "116.54",
                    "116.28999999999999",
                    "116.13",
                    "116.13",
                    "116.36",
                    "116.65",
                    "116.55",
                    "117.12000000000002",
                    "117.08000000000001",
                    "117.19",
                    "117.19",
                    "117.1",
                    "117.1",
                    "116.86",
                    "116.11000000000001",
                    "116.42",
                    "115.68",
                    "115.67",
                    "115.94",
                    "115.92000000000002",
                    "115.89",
                    "116.45",
                    "116.38",
                    "116.55",
                    "116.83",
                    "116.89000000000001",
                    "116.89000000000001",
                    "116.79000000000002",
                    "114.93",
                    "115.57",
                    "115.94",
                    "115.94",
                    "115.84",
                    "116.0",
                    "116.38999999999999",
                    "115.16",
                    "114.98",
                    "114.66",
                    "114.77000000000001",
                    "114.77000000000001",
                    "113.87",
                    "113.78",
                    "114.11",
                    "114.3",
                    "114.51",
                    "114.31999999999998",
                    "114.49",
                    "114.59",
                    "114.7",
                    "113.01999999999998",
                    "112.48",
                    "112.48",
                    "113.23",
                    "113.58",
                    "113.88",
                    "113.76",
                    "113.4",
                    "112.74000000000001",
                    "112.16",
                    "112.99",
                    "113.45",
                    "113.45",
                    "114.38",
                    "112.07",
                    "112.07",
                    "111.54",
                    "111.16",
                    "110.96",
                    "111.49",
                    "111.12999999999998",
                    "111.58000000000001",
                    "111.58000000000001",
                    "112.5",
                    "112.5",
                    "112.9",
                    "112.92000000000002",
                    "112.68000000000002",
                    "111.52",
                    "112.27",
                    "112.27",
                    "112.27",
                    "112.27",
                    "112.27",
                    "112.88000000000001",
                    "112.92000000000002",
                    "113.54",
                    "113.74",
                    "113.86",
                    "113.66000000000001",
                    "113.72",
                    "113.27",
                    "112.22",
                    "112.94",
                    "113.37",
                    "113.37",
                    "113.18",
                    "113.12",
                    "112.73000000000002",
                    "111.98",
                    "112.37999999999998",
                    "112.31",
                    "112.27",
                    "112.2",
                    "112.06",
                    "111.88",
                    "112.53",
                    "112.53",
                    "112.53",
                    "113.08",
                    "113.08",
                    "113.24",
                    "113.19",
                    "112.64000000000001",
                    "112.71",
                    "112.7",
                    "112.4",
                    "112.34",
                    "112.5",
                    "112.5",
                    "111.37",
                    "110.89000000000001",
                    "110.96",
                    "110.78",
                    "110.64",
                    "110.56000000000002",
                    "110.92",
                    "111.54",
                    "111.25999999999999",
                    "111.25999999999999",
                    "111.30999999999999",
                    "111.31999999999998",
                    "111.31999999999998",
                    "111.41",
                    "111.41",
                    "111.41",
                    "111.41",
                    "111.41",
                    "111.41",
                    "111.41",
                    "111.41",
                    "111.38",
                    "111.11999999999999",
                    "110.83",
                    "111.02999999999999",
                    "111.02999999999999",
                    "110.6",
                    "110.29999999999998",
                    "109.09999999999998",
                    "109.57",
                    "108.99",
                    "108.97",
                    "109.12",
                    "109.04999999999998",
                    "109.03999999999999",
                    "109.52",
                    "109.81",
                    "109.34",
                    "109.22999999999999",
                    "109.22999999999999",
                    "108.98",
                    "109.02",
                    "108.18",
                    "108.18",
                    "108.51",
                    "108.51",
                    "108.51",
                    "108.0",
                    "107.93000000000002",
                    "107.91",
                    "108.77000000000001",
                    "108.65",
                    "108.07",
                    "108.28",
                    "108.65",
                    "108.05",
                    "109.60000000000001",
                    "110.18",
                    "110.5",
                    "110.48",
                    "110.6",
                    "110.64",
                    "110.89000000000001",
                    "111.73",
                    "111.06",
                    "111.38",
                    "111.41",
                    "111.66",
                    "111.65",
                    "111.5",
                    "111.83",
                    "111.83",
                    "112.07",
                    "112.07",
                    "112.13999999999999",
                    "112.12",
                    "112.56",
                    "112.82",
                    "112.82",
                    "113.37",
                    "113.46",
                    "113.46",
                    "113.45",
                    "113.47",
                    "113.85000000000001",
                    "114.24",
                    "114.24",
                    "114.24",
                    "114.21999999999998",
                    "113.93000000000002",
                    "113.88",
                    "114.57",
                    "114.51",
                    "114.38",
                    "114.38",
                    "113.83",
                    "114.05",
                    "113.88",
                    "113.91",
                    "113.70000000000002",
                    "113.64",
                    "113.59",
                    "113.59",
                    "113.5",
                    "113.5",
                    "113.93000000000002",
                    "114.16999999999999",
                    "114.06",
                    "114.07999999999998",
                    "114.31999999999998",
                    "114.18",
                    "113.99000000000001",
                    "114.06",
                    "114.06",
                    "113.88",
                    "113.86",
                    "113.86",
                    "114.05",
                    "114.29",
                    "114.11999999999999",
                    "114.11999999999999",
                    "114.21",
                    "114.09",
                    "114.11999999999999",
                    "114.16",
                    "114.05",
                    "114.44999999999999",
                    "115.5",
                    "115.35",
                    "115.35",
                    "115.11",
                    "115.11",
                    "115.2",
                    "115.36",
                    "115.32",
                    "115.27999999999999",
                    "115.22",
                    "115.22",
                    "115.27999999999999",
                    "115.48",
                    "116.32",
                    "116.01000000000002",
                    "115.86",
                    "115.86",
                    "116.06000000000002",
                    "116.14",
                    "116.27",
                    "116.19999999999999",
                    "116.33999999999999",
                    "116.56",
                    "116.4",
                    "116.45",
                    "116.45",
                    "116.45"
                ],
                "description": "true_data",
                "index": 0,
                "layout": "IPY_MODEL_3dee6141b8e84083b9172ff6fc2ade0c",
                "style": "IPY_MODEL_dbd805527c0c40f5b817bb6395f3e45a"
            }
        },
        "afd023ce3e44466585daccf10a4cf3b5": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "2fac52c8f9db4e15b0fe16cbc497a3db": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "b4f926645241423aa0754a7fc5917911": {
            "model_name": "DropdownModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_options_labels": [
                    "115.85887908935547",
                    "115.96217346191406",
                    "116.21099853515625",
                    "116.51026916503906",
                    "116.44573211669922",
                    "116.77699279785156",
                    "116.65660095214844",
                    "116.65394592285156",
                    "116.52963256835938",
                    "116.43795013427734",
                    "116.16097259521484",
                    "116.02178192138672",
                    "116.0703125",
                    "116.36695861816406",
                    "116.69207000732422",
                    "116.50367736816406",
                    "117.20589447021484",
                    "117.04352569580078",
                    "117.14323425292969",
                    "117.11446380615234",
                    "116.98936462402344",
                    "117.00788116455078",
                    "116.7171859741211",
                    "115.85929870605469",
                    "116.379638671875",
                    "115.51661682128906",
                    "115.6009521484375",
                    "115.97655487060547",
                    "115.93025970458984",
                    "115.880859375",
                    "116.55480194091797",
                    "116.37938690185547",
                    "116.5513916015625",
                    "116.86123657226562",
                    "116.86395263671875",
                    "116.82482147216797",
                    "116.69039154052734",
                    "114.53022766113281",
                    "115.49700927734375",
                    "116.01007080078125",
                    "115.95280456542969",
                    "115.81319427490234",
                    "116.0107421875",
                    "116.45984649658203",
                    "114.94313049316406",
                    "114.85895538330078",
                    "114.59385681152344",
                    "114.76580047607422",
                    "114.7887191772461",
                    "113.8150863647461",
                    "113.7582778930664",
                    "114.15794372558594",
                    "114.37068939208984",
                    "114.57695770263672",
                    "114.3397216796875",
                    "114.51215362548828",
                    "114.6137466430664",
                    "114.71529388427734",
                    "112.92506408691406",
                    "112.41398620605469",
                    "112.46980285644531",
                    "113.26464080810547",
                    "113.66800689697266",
                    "113.95883178710938",
                    "113.79788970947266",
                    "113.39488983154297",
                    "112.7228012084961",
                    "112.15782165527344",
                    "112.9742202758789",
                    "113.51158142089844",
                    "113.49686431884766",
                    "114.4570083618164",
                    "112.06981658935547",
                    "111.99729919433594",
                    "111.56987762451172",
                    "111.21161651611328",
                    "111.02033996582031",
                    "111.49645233154297",
                    "111.23039245605469",
                    "111.60277557373047",
                    "111.64196014404297",
                    "112.50764465332031",
                    "112.55686950683594",
                    "112.91718292236328",
                    "112.9327163696289",
                    "112.66971588134766",
                    "111.54632568359375",
                    "112.18833923339844",
                    "112.27843475341797",
                    "112.27652740478516",
                    "112.2762451171875",
                    "112.2769775390625",
                    "112.87650299072266",
                    "112.9425048828125",
                    "113.55367279052734",
                    "113.75907135009766",
                    "113.85009765625",
                    "113.61683654785156",
                    "113.67030334472656",
                    "113.21281433105469",
                    "112.1783447265625",
                    "112.87167358398438",
                    "113.39126586914062",
                    "113.39349365234375",
                    "113.1799545288086",
                    "113.11089324951172",
                    "112.7244873046875",
                    "111.99266815185547",
                    "112.3542251586914",
                    "112.34068298339844",
                    "112.29927062988281",
                    "112.23140716552734",
                    "112.09429931640625",
                    "111.91594696044922",
                    "112.53155517578125",
                    "112.57424926757812",
                    "112.55375671386719",
                    "113.09176635742188",
                    "113.10319519042969",
                    "113.23992156982422",
                    "113.18119812011719",
                    "112.61956024169922",
                    "112.67369842529297",
                    "112.68890380859375",
                    "112.40240478515625",
                    "112.33646392822266",
                    "112.50235748291016",
                    "112.51812744140625",
                    "111.44834899902344",
                    "110.94120025634766",
                    "110.978759765625",
                    "110.8450698852539",
                    "110.71104431152344",
                    "110.62862396240234",
                    "110.93680572509766",
                    "111.54008483886719",
                    "111.33705139160156",
                    "111.29434967041016",
                    "111.33177185058594",
                    "111.34075164794922",
                    "111.33738708496094",
                    "111.41676330566406",
                    "111.42343139648438",
                    "111.42108917236328",
                    "111.41981506347656",
                    "111.41938018798828",
                    "111.41938018798828",
                    "111.41961669921875",
                    "111.41996765136719",
                    "111.39289093017578",
                    "111.15476989746094",
                    "110.87242126464844",
                    "111.02383422851562",
                    "111.05160522460938",
                    "110.67377471923828",
                    "110.36719512939453",
                    "109.34368133544922",
                    "109.55009460449219",
                    "109.14775085449219",
                    "109.05046844482422",
                    "109.15467071533203",
                    "109.12223815917969",
                    "109.10308837890625",
                    "109.48075866699219",
                    "109.79275512695312",
                    "109.45431518554688",
                    "109.29329681396484",
                    "109.26354217529297",
                    "109.06034851074219",
                    "109.04883575439453",
                    "108.40438842773438",
                    "108.25631713867188",
                    "108.47732543945312",
                    "108.5356674194336",
                    "108.54523468017578",
                    "108.16226196289062",
                    "108.01374816894531",
                    "107.96439361572266",
                    "108.59841918945312",
                    "108.66703796386719",
                    "108.23226928710938",
                    "108.28012084960938",
                    "108.57874298095703",
                    "108.1978759765625",
                    "109.29931640625",
                    "110.04570770263672",
                    "110.43517303466797",
                    "110.46007537841797",
                    "110.5561752319336",
                    "110.60175323486328",
                    "110.82598876953125",
                    "111.62006378173828",
                    "111.09036254882812",
                    "111.30819702148438",
                    "111.373291015625",
                    "111.60984802246094",
                    "111.62543487548828",
                    "111.4856185913086",
                    "111.78169250488281",
                    "111.81543731689453",
                    "112.0406265258789",
                    "112.05807495117188",
                    "112.12079620361328",
                    "112.10579681396484",
                    "112.53006744384766",
                    "112.812744140625",
                    "112.81009674072266",
                    "113.3535385131836",
                    "113.45309448242188",
                    "113.4289321899414",
                    "113.40821075439453",
                    "113.42759704589844",
                    "113.8273696899414",
                    "114.24425506591797",
                    "114.21770477294922",
                    "114.1943588256836",
                    "114.1684799194336",
                    "113.86038970947266",
                    "113.82034301757812",
                    "114.58655548095703",
                    "114.50733947753906",
                    "114.3350830078125",
                    "114.3384780883789",
                    "113.75743103027344",
                    "114.01094055175781",
                    "113.85874938964844",
                    "113.89453125",
                    "113.68414306640625",
                    "113.62745666503906",
                    "113.58773040771484",
                    "113.59453582763672",
                    "113.50528717041016",
                    "113.50639343261719",
                    "113.96165466308594",
                    "114.21331024169922",
                    "114.06380462646484",
                    "114.06715393066406",
                    "114.3234634399414",
                    "114.16009521484375",
                    "113.94795989990234",
                    "114.03315734863281",
                    "114.04373168945312",
                    "113.85340881347656",
                    "113.83856201171875",
                    "113.8500747680664",
                    "114.05702209472656",
                    "114.31290435791016",
                    "114.11112213134766",
                    "114.10076904296875",
                    "114.20171356201172",
                    "114.06999969482422",
                    "114.10161590576172",
                    "114.14958953857422",
                    "114.03076171875",
                    "114.46531677246094",
                    "115.64114379882812",
                    "115.3586654663086",
                    "115.29818725585938",
                    "115.01641082763672",
                    "115.0342025756836",
                    "115.15290069580078",
                    "115.33531188964844",
                    "115.27425384521484",
                    "115.2251968383789",
                    "115.16413116455078",
                    "115.1749267578125",
                    "115.25056457519531",
                    "115.47853088378906",
                    "116.4526138305664",
                    "115.95143127441406",
                    "115.75618743896484",
                    "115.78627014160156",
                    "116.0344009399414",
                    "116.1069564819336",
                    "116.24121856689453",
                    "116.13190460205078",
                    "116.30216979980469",
                    "116.55298614501953",
                    "116.31229400634766",
                    "116.3839340209961",
                    "116.38636779785156"
                ],
                "description": "pred_data",
                "index": 0,
                "layout": "IPY_MODEL_afd023ce3e44466585daccf10a4cf3b5",
                "style": "IPY_MODEL_2fac52c8f9db4e15b0fe16cbc497a3db"
            }
        },
        "f268fb10a0bb4c0aa5c81eb62bf360a1": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "4c1fbf562c1f499999a46da3316dcad1": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "0df36fb575bf42809a82411de19c14e4": {
            "model_name": "DropdownModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_options_labels": [
                    "-4",
                    "-3",
                    "-2",
                    "-1",
                    "0",
                    "1",
                    "2",
                    "3",
                    "4"
                ],
                "description": "shift_list",
                "index": 0,
                "layout": "IPY_MODEL_f268fb10a0bb4c0aa5c81eb62bf360a1",
                "style": "IPY_MODEL_4c1fbf562c1f499999a46da3316dcad1"
            }
        },
        "1e9f77a9ff7041168cb4e001b3fff757": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "bc4884cd7ce146b8acda8843650d62ca": {
            "model_name": "OutputModel",
            "model_module": "@jupyter-widgets/output",
            "model_module_version": "1.0.0",
            "state": {
                "layout": "IPY_MODEL_1e9f77a9ff7041168cb4e001b3fff757",
                "outputs": [
                    {
                        "output_type": "error",
                        "ename": "TypeError",
                        "evalue": "cannot concatenate object of type \"<class 'float'>\"; only pd.Series, pd.DataFrame, and pd.Panel (deprecated) objs are valid",
                        "traceback": [
                            "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
                            "\u001b[1;31mTypeError\u001b[0m                                 Traceback (most recent call last)",
                            "\u001b[1;32m~\\Anaconda3\\envs\\learn-env-ext\\lib\\site-packages\\ipywidgets\\widgets\\interaction.py\u001b[0m in \u001b[0;36mupdate\u001b[1;34m(self, *args)\u001b[0m\n\u001b[0;32m    249\u001b[0m                     \u001b[0mvalue\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mwidget\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mget_interact_value\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    250\u001b[0m                     \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[1;33m[\u001b[0m\u001b[0mwidget\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0m_kwarg\u001b[0m\u001b[1;33m]\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mvalue\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m--> 251\u001b[1;33m                 \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mresult\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mf\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m**\u001b[0m\u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m    252\u001b[0m                 \u001b[0mshow_inline_matplotlib_plots\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    253\u001b[0m                 \u001b[1;32mif\u001b[0m \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mauto_display\u001b[0m \u001b[1;32mand\u001b[0m \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mresult\u001b[0m \u001b[1;32mis\u001b[0m \u001b[1;32mnot\u001b[0m \u001b[1;32mNone\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
                            "\u001b[1;32m<ipython-input-294-38617442429d>\u001b[0m in \u001b[0;36mplot_shift_list\u001b[1;34m(true_data, pred_data, shift_list)\u001b[0m\n\u001b[0;32m     12\u001b[0m                     shift_list=shift_list ):\n\u001b[0;32m     13\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m---> 14\u001b[1;33m     \u001b[0mdf_data\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mpd\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mconcat\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m[\u001b[0m\u001b[0mtrue_data\u001b[0m\u001b[1;33m,\u001b[0m\u001b[0mpred_data\u001b[0m\u001b[1;33m]\u001b[0m\u001b[1;33m,\u001b[0m\u001b[0maxis\u001b[0m\u001b[1;33m=\u001b[0m\u001b[1;36m1\u001b[0m\u001b[1;33m,\u001b[0m\u001b[0mnames\u001b[0m\u001b[1;33m=\u001b[0m\u001b[1;33m[\u001b[0m\u001b[1;34m'true'\u001b[0m\u001b[1;33m,\u001b[0m\u001b[1;34m'pred'\u001b[0m\u001b[1;33m]\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m     15\u001b[0m     \u001b[1;32mfor\u001b[0m \u001b[0mshift\u001b[0m \u001b[1;32min\u001b[0m \u001b[0mnp\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mnditer\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mshift_list\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m     16\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n",
                            "\u001b[1;32m~\\Anaconda3\\envs\\learn-env-ext\\lib\\site-packages\\pandas\\core\\reshape\\concat.py\u001b[0m in \u001b[0;36mconcat\u001b[1;34m(objs, axis, join, join_axes, ignore_index, keys, levels, names, verify_integrity, sort, copy)\u001b[0m\n\u001b[0;32m    226\u001b[0m                        \u001b[0mkeys\u001b[0m\u001b[1;33m=\u001b[0m\u001b[0mkeys\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mlevels\u001b[0m\u001b[1;33m=\u001b[0m\u001b[0mlevels\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mnames\u001b[0m\u001b[1;33m=\u001b[0m\u001b[0mnames\u001b[0m\u001b[1;33m,\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    227\u001b[0m                        \u001b[0mverify_integrity\u001b[0m\u001b[1;33m=\u001b[0m\u001b[0mverify_integrity\u001b[0m\u001b[1;33m,\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m--> 228\u001b[1;33m                        copy=copy, sort=sort)\n\u001b[0m\u001b[0;32m    229\u001b[0m     \u001b[1;32mreturn\u001b[0m \u001b[0mop\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mget_result\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    230\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n",
                            "\u001b[1;32m~\\Anaconda3\\envs\\learn-env-ext\\lib\\site-packages\\pandas\\core\\reshape\\concat.py\u001b[0m in \u001b[0;36m__init__\u001b[1;34m(self, objs, axis, join, join_axes, keys, levels, names, ignore_index, verify_integrity, copy, sort)\u001b[0m\n\u001b[0;32m    287\u001b[0m                        \u001b[1;34m' only pd.Series, pd.DataFrame, and pd.Panel'\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    288\u001b[0m                        ' (deprecated) objs are valid'.format(type(obj)))\n\u001b[1;32m--> 289\u001b[1;33m                 \u001b[1;32mraise\u001b[0m \u001b[0mTypeError\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mmsg\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m    290\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    291\u001b[0m             \u001b[1;31m# consolidate\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
                            "\u001b[1;31mTypeError\u001b[0m: cannot concatenate object of type \"<class 'float'>\"; only pd.Series, pd.DataFrame, and pd.Panel (deprecated) objs are valid"
                        ]
                    }
                ]
            }
        },
        "98c0e66e13b34896a6e422141193bc1b": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "2ae154c93fa24698a11acafcef705c62": {
            "model_name": "VBoxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_dom_classes": [
                    "widget-interact"
                ],
                "children": [
                    "IPY_MODEL_a92700e109ca457e872fa0d0d3f39662",
                    "IPY_MODEL_c351860bd8d0434e94df85946e663687",
                    "IPY_MODEL_074573f0b2ca4ed4be4977d9b27f1efa",
                    "IPY_MODEL_76fe2019d8ff4377b4ad2878ecb59385"
                ],
                "layout": "IPY_MODEL_98c0e66e13b34896a6e422141193bc1b"
            }
        },
        "db43f1152a37430491f69ea6ebb81c91": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "d967f709155f41ee93871e52b7305445": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "a92700e109ca457e872fa0d0d3f39662": {
            "model_name": "DropdownModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_options_labels": [
                    "115.98",
                    "116.19999999999999",
                    "116.47999999999999",
                    "116.47999999999999",
                    "116.77",
                    "116.72",
                    "116.73",
                    "116.63",
                    "116.54",
                    "116.28999999999999",
                    "116.13",
                    "116.13",
                    "116.36",
                    "116.65",
                    "116.55",
                    "117.12000000000002",
                    "117.08000000000001",
                    "117.19",
                    "117.19",
                    "117.1",
                    "117.1",
                    "116.86",
                    "116.11000000000001",
                    "116.42",
                    "115.68",
                    "115.67",
                    "115.94",
                    "115.92000000000002",
                    "115.89",
                    "116.45",
                    "116.38",
                    "116.55",
                    "116.83",
                    "116.89000000000001",
                    "116.89000000000001",
                    "116.79000000000002",
                    "114.93",
                    "115.57",
                    "115.94",
                    "115.94",
                    "115.84",
                    "116.0",
                    "116.38999999999999",
                    "115.16",
                    "114.98",
                    "114.66",
                    "114.77000000000001",
                    "114.77000000000001",
                    "113.87",
                    "113.78",
                    "114.11",
                    "114.3",
                    "114.51",
                    "114.31999999999998",
                    "114.49",
                    "114.59",
                    "114.7",
                    "113.01999999999998",
                    "112.48",
                    "112.48",
                    "113.23",
                    "113.58",
                    "113.88",
                    "113.76",
                    "113.4",
                    "112.74000000000001",
                    "112.16",
                    "112.99",
                    "113.45",
                    "113.45",
                    "114.38",
                    "112.07",
                    "112.07",
                    "111.54",
                    "111.16",
                    "110.96",
                    "111.49",
                    "111.12999999999998",
                    "111.58000000000001",
                    "111.58000000000001",
                    "112.5",
                    "112.5",
                    "112.9",
                    "112.92000000000002",
                    "112.68000000000002",
                    "111.52",
                    "112.27",
                    "112.27",
                    "112.27",
                    "112.27",
                    "112.27",
                    "112.88000000000001",
                    "112.92000000000002",
                    "113.54",
                    "113.74",
                    "113.86",
                    "113.66000000000001",
                    "113.72",
                    "113.27",
                    "112.22",
                    "112.94",
                    "113.37",
                    "113.37",
                    "113.18",
                    "113.12",
                    "112.73000000000002",
                    "111.98",
                    "112.37999999999998",
                    "112.31",
                    "112.27",
                    "112.2",
                    "112.06",
                    "111.88",
                    "112.53",
                    "112.53",
                    "112.53",
                    "113.08",
                    "113.08",
                    "113.24",
                    "113.19",
                    "112.64000000000001",
                    "112.71",
                    "112.7",
                    "112.4",
                    "112.34",
                    "112.5",
                    "112.5",
                    "111.37",
                    "110.89000000000001",
                    "110.96",
                    "110.78",
                    "110.64",
                    "110.56000000000002",
                    "110.92",
                    "111.54",
                    "111.25999999999999",
                    "111.25999999999999",
                    "111.30999999999999",
                    "111.31999999999998",
                    "111.31999999999998",
                    "111.41",
                    "111.41",
                    "111.41",
                    "111.41",
                    "111.41",
                    "111.41",
                    "111.41",
                    "111.41",
                    "111.38",
                    "111.11999999999999",
                    "110.83",
                    "111.02999999999999",
                    "111.02999999999999",
                    "110.6",
                    "110.29999999999998",
                    "109.09999999999998",
                    "109.57",
                    "108.99",
                    "108.97",
                    "109.12",
                    "109.04999999999998",
                    "109.03999999999999",
                    "109.52",
                    "109.81",
                    "109.34",
                    "109.22999999999999",
                    "109.22999999999999",
                    "108.98",
                    "109.02",
                    "108.18",
                    "108.18",
                    "108.51",
                    "108.51",
                    "108.51",
                    "108.0",
                    "107.93000000000002",
                    "107.91",
                    "108.77000000000001",
                    "108.65",
                    "108.07",
                    "108.28",
                    "108.65",
                    "108.05",
                    "109.60000000000001",
                    "110.18",
                    "110.5",
                    "110.48",
                    "110.6",
                    "110.64",
                    "110.89000000000001",
                    "111.73",
                    "111.06",
                    "111.38",
                    "111.41",
                    "111.66",
                    "111.65",
                    "111.5",
                    "111.83",
                    "111.83",
                    "112.07",
                    "112.07",
                    "112.13999999999999",
                    "112.12",
                    "112.56",
                    "112.82",
                    "112.82",
                    "113.37",
                    "113.46",
                    "113.46",
                    "113.45",
                    "113.47",
                    "113.85000000000001",
                    "114.24",
                    "114.24",
                    "114.24",
                    "114.21999999999998",
                    "113.93000000000002",
                    "113.88",
                    "114.57",
                    "114.51",
                    "114.38",
                    "114.38",
                    "113.83",
                    "114.05",
                    "113.88",
                    "113.91",
                    "113.70000000000002",
                    "113.64",
                    "113.59",
                    "113.59",
                    "113.5",
                    "113.5",
                    "113.93000000000002",
                    "114.16999999999999",
                    "114.06",
                    "114.07999999999998",
                    "114.31999999999998",
                    "114.18",
                    "113.99000000000001",
                    "114.06",
                    "114.06",
                    "113.88",
                    "113.86",
                    "113.86",
                    "114.05",
                    "114.29",
                    "114.11999999999999",
                    "114.11999999999999",
                    "114.21",
                    "114.09",
                    "114.11999999999999",
                    "114.16",
                    "114.05",
                    "114.44999999999999",
                    "115.5",
                    "115.35",
                    "115.35",
                    "115.11",
                    "115.11",
                    "115.2",
                    "115.36",
                    "115.32",
                    "115.27999999999999",
                    "115.22",
                    "115.22",
                    "115.27999999999999",
                    "115.48",
                    "116.32",
                    "116.01000000000002",
                    "115.86",
                    "115.86",
                    "116.06000000000002",
                    "116.14",
                    "116.27",
                    "116.19999999999999",
                    "116.33999999999999",
                    "116.56",
                    "116.4",
                    "116.45",
                    "116.45",
                    "116.45"
                ],
                "description": "true_data",
                "index": 0,
                "layout": "IPY_MODEL_db43f1152a37430491f69ea6ebb81c91",
                "style": "IPY_MODEL_d967f709155f41ee93871e52b7305445"
            }
        },
        "2d27a409ff774a52ada17b59a64730d1": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "54af3eb1af414437b6c2dd24e4848cf3": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "c351860bd8d0434e94df85946e663687": {
            "model_name": "DropdownModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_options_labels": [
                    "115.85887908935547",
                    "115.96217346191406",
                    "116.21099853515625",
                    "116.51026916503906",
                    "116.44573211669922",
                    "116.77699279785156",
                    "116.65660095214844",
                    "116.65394592285156",
                    "116.52963256835938",
                    "116.43795013427734",
                    "116.16097259521484",
                    "116.02178192138672",
                    "116.0703125",
                    "116.36695861816406",
                    "116.69207000732422",
                    "116.50367736816406",
                    "117.20589447021484",
                    "117.04352569580078",
                    "117.14323425292969",
                    "117.11446380615234",
                    "116.98936462402344",
                    "117.00788116455078",
                    "116.7171859741211",
                    "115.85929870605469",
                    "116.379638671875",
                    "115.51661682128906",
                    "115.6009521484375",
                    "115.97655487060547",
                    "115.93025970458984",
                    "115.880859375",
                    "116.55480194091797",
                    "116.37938690185547",
                    "116.5513916015625",
                    "116.86123657226562",
                    "116.86395263671875",
                    "116.82482147216797",
                    "116.69039154052734",
                    "114.53022766113281",
                    "115.49700927734375",
                    "116.01007080078125",
                    "115.95280456542969",
                    "115.81319427490234",
                    "116.0107421875",
                    "116.45984649658203",
                    "114.94313049316406",
                    "114.85895538330078",
                    "114.59385681152344",
                    "114.76580047607422",
                    "114.7887191772461",
                    "113.8150863647461",
                    "113.7582778930664",
                    "114.15794372558594",
                    "114.37068939208984",
                    "114.57695770263672",
                    "114.3397216796875",
                    "114.51215362548828",
                    "114.6137466430664",
                    "114.71529388427734",
                    "112.92506408691406",
                    "112.41398620605469",
                    "112.46980285644531",
                    "113.26464080810547",
                    "113.66800689697266",
                    "113.95883178710938",
                    "113.79788970947266",
                    "113.39488983154297",
                    "112.7228012084961",
                    "112.15782165527344",
                    "112.9742202758789",
                    "113.51158142089844",
                    "113.49686431884766",
                    "114.4570083618164",
                    "112.06981658935547",
                    "111.99729919433594",
                    "111.56987762451172",
                    "111.21161651611328",
                    "111.02033996582031",
                    "111.49645233154297",
                    "111.23039245605469",
                    "111.60277557373047",
                    "111.64196014404297",
                    "112.50764465332031",
                    "112.55686950683594",
                    "112.91718292236328",
                    "112.9327163696289",
                    "112.66971588134766",
                    "111.54632568359375",
                    "112.18833923339844",
                    "112.27843475341797",
                    "112.27652740478516",
                    "112.2762451171875",
                    "112.2769775390625",
                    "112.87650299072266",
                    "112.9425048828125",
                    "113.55367279052734",
                    "113.75907135009766",
                    "113.85009765625",
                    "113.61683654785156",
                    "113.67030334472656",
                    "113.21281433105469",
                    "112.1783447265625",
                    "112.87167358398438",
                    "113.39126586914062",
                    "113.39349365234375",
                    "113.1799545288086",
                    "113.11089324951172",
                    "112.7244873046875",
                    "111.99266815185547",
                    "112.3542251586914",
                    "112.34068298339844",
                    "112.29927062988281",
                    "112.23140716552734",
                    "112.09429931640625",
                    "111.91594696044922",
                    "112.53155517578125",
                    "112.57424926757812",
                    "112.55375671386719",
                    "113.09176635742188",
                    "113.10319519042969",
                    "113.23992156982422",
                    "113.18119812011719",
                    "112.61956024169922",
                    "112.67369842529297",
                    "112.68890380859375",
                    "112.40240478515625",
                    "112.33646392822266",
                    "112.50235748291016",
                    "112.51812744140625",
                    "111.44834899902344",
                    "110.94120025634766",
                    "110.978759765625",
                    "110.8450698852539",
                    "110.71104431152344",
                    "110.62862396240234",
                    "110.93680572509766",
                    "111.54008483886719",
                    "111.33705139160156",
                    "111.29434967041016",
                    "111.33177185058594",
                    "111.34075164794922",
                    "111.33738708496094",
                    "111.41676330566406",
                    "111.42343139648438",
                    "111.42108917236328",
                    "111.41981506347656",
                    "111.41938018798828",
                    "111.41938018798828",
                    "111.41961669921875",
                    "111.41996765136719",
                    "111.39289093017578",
                    "111.15476989746094",
                    "110.87242126464844",
                    "111.02383422851562",
                    "111.05160522460938",
                    "110.67377471923828",
                    "110.36719512939453",
                    "109.34368133544922",
                    "109.55009460449219",
                    "109.14775085449219",
                    "109.05046844482422",
                    "109.15467071533203",
                    "109.12223815917969",
                    "109.10308837890625",
                    "109.48075866699219",
                    "109.79275512695312",
                    "109.45431518554688",
                    "109.29329681396484",
                    "109.26354217529297",
                    "109.06034851074219",
                    "109.04883575439453",
                    "108.40438842773438",
                    "108.25631713867188",
                    "108.47732543945312",
                    "108.5356674194336",
                    "108.54523468017578",
                    "108.16226196289062",
                    "108.01374816894531",
                    "107.96439361572266",
                    "108.59841918945312",
                    "108.66703796386719",
                    "108.23226928710938",
                    "108.28012084960938",
                    "108.57874298095703",
                    "108.1978759765625",
                    "109.29931640625",
                    "110.04570770263672",
                    "110.43517303466797",
                    "110.46007537841797",
                    "110.5561752319336",
                    "110.60175323486328",
                    "110.82598876953125",
                    "111.62006378173828",
                    "111.09036254882812",
                    "111.30819702148438",
                    "111.373291015625",
                    "111.60984802246094",
                    "111.62543487548828",
                    "111.4856185913086",
                    "111.78169250488281",
                    "111.81543731689453",
                    "112.0406265258789",
                    "112.05807495117188",
                    "112.12079620361328",
                    "112.10579681396484",
                    "112.53006744384766",
                    "112.812744140625",
                    "112.81009674072266",
                    "113.3535385131836",
                    "113.45309448242188",
                    "113.4289321899414",
                    "113.40821075439453",
                    "113.42759704589844",
                    "113.8273696899414",
                    "114.24425506591797",
                    "114.21770477294922",
                    "114.1943588256836",
                    "114.1684799194336",
                    "113.86038970947266",
                    "113.82034301757812",
                    "114.58655548095703",
                    "114.50733947753906",
                    "114.3350830078125",
                    "114.3384780883789",
                    "113.75743103027344",
                    "114.01094055175781",
                    "113.85874938964844",
                    "113.89453125",
                    "113.68414306640625",
                    "113.62745666503906",
                    "113.58773040771484",
                    "113.59453582763672",
                    "113.50528717041016",
                    "113.50639343261719",
                    "113.96165466308594",
                    "114.21331024169922",
                    "114.06380462646484",
                    "114.06715393066406",
                    "114.3234634399414",
                    "114.16009521484375",
                    "113.94795989990234",
                    "114.03315734863281",
                    "114.04373168945312",
                    "113.85340881347656",
                    "113.83856201171875",
                    "113.8500747680664",
                    "114.05702209472656",
                    "114.31290435791016",
                    "114.11112213134766",
                    "114.10076904296875",
                    "114.20171356201172",
                    "114.06999969482422",
                    "114.10161590576172",
                    "114.14958953857422",
                    "114.03076171875",
                    "114.46531677246094",
                    "115.64114379882812",
                    "115.3586654663086",
                    "115.29818725585938",
                    "115.01641082763672",
                    "115.0342025756836",
                    "115.15290069580078",
                    "115.33531188964844",
                    "115.27425384521484",
                    "115.2251968383789",
                    "115.16413116455078",
                    "115.1749267578125",
                    "115.25056457519531",
                    "115.47853088378906",
                    "116.4526138305664",
                    "115.95143127441406",
                    "115.75618743896484",
                    "115.78627014160156",
                    "116.0344009399414",
                    "116.1069564819336",
                    "116.24121856689453",
                    "116.13190460205078",
                    "116.30216979980469",
                    "116.55298614501953",
                    "116.31229400634766",
                    "116.3839340209961",
                    "116.38636779785156"
                ],
                "description": "pred_data",
                "index": 0,
                "layout": "IPY_MODEL_2d27a409ff774a52ada17b59a64730d1",
                "style": "IPY_MODEL_54af3eb1af414437b6c2dd24e4848cf3"
            }
        },
        "6ffd1b9e75194de4aba304b1802d433c": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "654d8039defa4006859c31434cf34196": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "074573f0b2ca4ed4be4977d9b27f1efa": {
            "model_name": "DropdownModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_options_labels": [
                    "-4",
                    "-3",
                    "-2",
                    "-1",
                    "0",
                    "1",
                    "2",
                    "3",
                    "4"
                ],
                "description": "shift_list",
                "index": 0,
                "layout": "IPY_MODEL_6ffd1b9e75194de4aba304b1802d433c",
                "style": "IPY_MODEL_654d8039defa4006859c31434cf34196"
            }
        },
        "da0ba002ce6240709d072cebbd577331": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "76fe2019d8ff4377b4ad2878ecb59385": {
            "model_name": "OutputModel",
            "model_module": "@jupyter-widgets/output",
            "model_module_version": "1.0.0",
            "state": {
                "layout": "IPY_MODEL_da0ba002ce6240709d072cebbd577331",
                "outputs": [
                    {
                        "output_type": "stream",
                        "text": "115.85887908935547\n",
                        "name": "stdout"
                    },
                    {
                        "output_type": "error",
                        "ename": "TypeError",
                        "evalue": "cannot concatenate object of type \"<class 'float'>\"; only pd.Series, pd.DataFrame, and pd.Panel (deprecated) objs are valid",
                        "traceback": [
                            "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
                            "\u001b[1;31mTypeError\u001b[0m                                 Traceback (most recent call last)",
                            "\u001b[1;32m~\\Anaconda3\\envs\\learn-env-ext\\lib\\site-packages\\ipywidgets\\widgets\\interaction.py\u001b[0m in \u001b[0;36mupdate\u001b[1;34m(self, *args)\u001b[0m\n\u001b[0;32m    249\u001b[0m                     \u001b[0mvalue\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mwidget\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mget_interact_value\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    250\u001b[0m                     \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[1;33m[\u001b[0m\u001b[0mwidget\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0m_kwarg\u001b[0m\u001b[1;33m]\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mvalue\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m--> 251\u001b[1;33m                 \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mresult\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mf\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m**\u001b[0m\u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m    252\u001b[0m                 \u001b[0mshow_inline_matplotlib_plots\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    253\u001b[0m                 \u001b[1;32mif\u001b[0m \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mauto_display\u001b[0m \u001b[1;32mand\u001b[0m \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mresult\u001b[0m \u001b[1;32mis\u001b[0m \u001b[1;32mnot\u001b[0m \u001b[1;32mNone\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
                            "\u001b[1;32m<ipython-input-295-03f58ce7bcd8>\u001b[0m in \u001b[0;36mplot_shift_list\u001b[1;34m(true_data, pred_data, shift_list)\u001b[0m\n\u001b[0;32m     12\u001b[0m                     shift_list=shift_list ):\n\u001b[0;32m     13\u001b[0m     \u001b[0mprint\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mpred_data\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m---> 14\u001b[1;33m     \u001b[0mdf_data\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mpd\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mconcat\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m[\u001b[0m\u001b[0mtrue_data\u001b[0m\u001b[1;33m,\u001b[0m\u001b[0mpred_data\u001b[0m\u001b[1;33m]\u001b[0m\u001b[1;33m,\u001b[0m\u001b[0maxis\u001b[0m\u001b[1;33m=\u001b[0m\u001b[1;36m1\u001b[0m\u001b[1;33m,\u001b[0m\u001b[0mnames\u001b[0m\u001b[1;33m=\u001b[0m\u001b[1;33m[\u001b[0m\u001b[1;34m'true'\u001b[0m\u001b[1;33m,\u001b[0m\u001b[1;34m'pred'\u001b[0m\u001b[1;33m]\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m     15\u001b[0m     \u001b[1;32mfor\u001b[0m \u001b[0mshift\u001b[0m \u001b[1;32min\u001b[0m \u001b[0mnp\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mnditer\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mshift_list\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m     16\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n",
                            "\u001b[1;32m~\\Anaconda3\\envs\\learn-env-ext\\lib\\site-packages\\pandas\\core\\reshape\\concat.py\u001b[0m in \u001b[0;36mconcat\u001b[1;34m(objs, axis, join, join_axes, ignore_index, keys, levels, names, verify_integrity, sort, copy)\u001b[0m\n\u001b[0;32m    226\u001b[0m                        \u001b[0mkeys\u001b[0m\u001b[1;33m=\u001b[0m\u001b[0mkeys\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mlevels\u001b[0m\u001b[1;33m=\u001b[0m\u001b[0mlevels\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mnames\u001b[0m\u001b[1;33m=\u001b[0m\u001b[0mnames\u001b[0m\u001b[1;33m,\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    227\u001b[0m                        \u001b[0mverify_integrity\u001b[0m\u001b[1;33m=\u001b[0m\u001b[0mverify_integrity\u001b[0m\u001b[1;33m,\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m--> 228\u001b[1;33m                        copy=copy, sort=sort)\n\u001b[0m\u001b[0;32m    229\u001b[0m     \u001b[1;32mreturn\u001b[0m \u001b[0mop\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mget_result\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    230\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n",
                            "\u001b[1;32m~\\Anaconda3\\envs\\learn-env-ext\\lib\\site-packages\\pandas\\core\\reshape\\concat.py\u001b[0m in \u001b[0;36m__init__\u001b[1;34m(self, objs, axis, join, join_axes, keys, levels, names, ignore_index, verify_integrity, copy, sort)\u001b[0m\n\u001b[0;32m    287\u001b[0m                        \u001b[1;34m' only pd.Series, pd.DataFrame, and pd.Panel'\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    288\u001b[0m                        ' (deprecated) objs are valid'.format(type(obj)))\n\u001b[1;32m--> 289\u001b[1;33m                 \u001b[1;32mraise\u001b[0m \u001b[0mTypeError\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mmsg\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m    290\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    291\u001b[0m             \u001b[1;31m# consolidate\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
                            "\u001b[1;31mTypeError\u001b[0m: cannot concatenate object of type \"<class 'float'>\"; only pd.Series, pd.DataFrame, and pd.Panel (deprecated) objs are valid"
                        ]
                    }
                ]
            }
        },
        "15e51a0dc1694bfcbba4e3b22a28930e": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "2a878982309c406790bdf290c7b592eb": {
            "model_name": "VBoxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_dom_classes": [
                    "widget-interact"
                ],
                "children": [
                    "IPY_MODEL_48dd86be8c06402a8a3e7a73906973cb",
                    "IPY_MODEL_0bcb88f1a7e14682a3c8ca79d9f4c78e",
                    "IPY_MODEL_a5dd0676588a4c85b6ca965ec7069734",
                    "IPY_MODEL_b6f98120056e4f0caaf94423e85cf576"
                ],
                "layout": "IPY_MODEL_15e51a0dc1694bfcbba4e3b22a28930e"
            }
        },
        "d5d864ee622446cabba6813fcb3f009f": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "1fab008291434483b2cd3c68f95e6992": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "48dd86be8c06402a8a3e7a73906973cb": {
            "model_name": "DropdownModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_options_labels": [
                    "115.98",
                    "116.19999999999999",
                    "116.47999999999999",
                    "116.47999999999999",
                    "116.77",
                    "116.72",
                    "116.73",
                    "116.63",
                    "116.54",
                    "116.28999999999999",
                    "116.13",
                    "116.13",
                    "116.36",
                    "116.65",
                    "116.55",
                    "117.12000000000002",
                    "117.08000000000001",
                    "117.19",
                    "117.19",
                    "117.1",
                    "117.1",
                    "116.86",
                    "116.11000000000001",
                    "116.42",
                    "115.68",
                    "115.67",
                    "115.94",
                    "115.92000000000002",
                    "115.89",
                    "116.45",
                    "116.38",
                    "116.55",
                    "116.83",
                    "116.89000000000001",
                    "116.89000000000001",
                    "116.79000000000002",
                    "114.93",
                    "115.57",
                    "115.94",
                    "115.94",
                    "115.84",
                    "116.0",
                    "116.38999999999999",
                    "115.16",
                    "114.98",
                    "114.66",
                    "114.77000000000001",
                    "114.77000000000001",
                    "113.87",
                    "113.78",
                    "114.11",
                    "114.3",
                    "114.51",
                    "114.31999999999998",
                    "114.49",
                    "114.59",
                    "114.7",
                    "113.01999999999998",
                    "112.48",
                    "112.48",
                    "113.23",
                    "113.58",
                    "113.88",
                    "113.76",
                    "113.4",
                    "112.74000000000001",
                    "112.16",
                    "112.99",
                    "113.45",
                    "113.45",
                    "114.38",
                    "112.07",
                    "112.07",
                    "111.54",
                    "111.16",
                    "110.96",
                    "111.49",
                    "111.12999999999998",
                    "111.58000000000001",
                    "111.58000000000001",
                    "112.5",
                    "112.5",
                    "112.9",
                    "112.92000000000002",
                    "112.68000000000002",
                    "111.52",
                    "112.27",
                    "112.27",
                    "112.27",
                    "112.27",
                    "112.27",
                    "112.88000000000001",
                    "112.92000000000002",
                    "113.54",
                    "113.74",
                    "113.86",
                    "113.66000000000001",
                    "113.72",
                    "113.27",
                    "112.22",
                    "112.94",
                    "113.37",
                    "113.37",
                    "113.18",
                    "113.12",
                    "112.73000000000002",
                    "111.98",
                    "112.37999999999998",
                    "112.31",
                    "112.27",
                    "112.2",
                    "112.06",
                    "111.88",
                    "112.53",
                    "112.53",
                    "112.53",
                    "113.08",
                    "113.08",
                    "113.24",
                    "113.19",
                    "112.64000000000001",
                    "112.71",
                    "112.7",
                    "112.4",
                    "112.34",
                    "112.5",
                    "112.5",
                    "111.37",
                    "110.89000000000001",
                    "110.96",
                    "110.78",
                    "110.64",
                    "110.56000000000002",
                    "110.92",
                    "111.54",
                    "111.25999999999999",
                    "111.25999999999999",
                    "111.30999999999999",
                    "111.31999999999998",
                    "111.31999999999998",
                    "111.41",
                    "111.41",
                    "111.41",
                    "111.41",
                    "111.41",
                    "111.41",
                    "111.41",
                    "111.41",
                    "111.38",
                    "111.11999999999999",
                    "110.83",
                    "111.02999999999999",
                    "111.02999999999999",
                    "110.6",
                    "110.29999999999998",
                    "109.09999999999998",
                    "109.57",
                    "108.99",
                    "108.97",
                    "109.12",
                    "109.04999999999998",
                    "109.03999999999999",
                    "109.52",
                    "109.81",
                    "109.34",
                    "109.22999999999999",
                    "109.22999999999999",
                    "108.98",
                    "109.02",
                    "108.18",
                    "108.18",
                    "108.51",
                    "108.51",
                    "108.51",
                    "108.0",
                    "107.93000000000002",
                    "107.91",
                    "108.77000000000001",
                    "108.65",
                    "108.07",
                    "108.28",
                    "108.65",
                    "108.05",
                    "109.60000000000001",
                    "110.18",
                    "110.5",
                    "110.48",
                    "110.6",
                    "110.64",
                    "110.89000000000001",
                    "111.73",
                    "111.06",
                    "111.38",
                    "111.41",
                    "111.66",
                    "111.65",
                    "111.5",
                    "111.83",
                    "111.83",
                    "112.07",
                    "112.07",
                    "112.13999999999999",
                    "112.12",
                    "112.56",
                    "112.82",
                    "112.82",
                    "113.37",
                    "113.46",
                    "113.46",
                    "113.45",
                    "113.47",
                    "113.85000000000001",
                    "114.24",
                    "114.24",
                    "114.24",
                    "114.21999999999998",
                    "113.93000000000002",
                    "113.88",
                    "114.57",
                    "114.51",
                    "114.38",
                    "114.38",
                    "113.83",
                    "114.05",
                    "113.88",
                    "113.91",
                    "113.70000000000002",
                    "113.64",
                    "113.59",
                    "113.59",
                    "113.5",
                    "113.5",
                    "113.93000000000002",
                    "114.16999999999999",
                    "114.06",
                    "114.07999999999998",
                    "114.31999999999998",
                    "114.18",
                    "113.99000000000001",
                    "114.06",
                    "114.06",
                    "113.88",
                    "113.86",
                    "113.86",
                    "114.05",
                    "114.29",
                    "114.11999999999999",
                    "114.11999999999999",
                    "114.21",
                    "114.09",
                    "114.11999999999999",
                    "114.16",
                    "114.05",
                    "114.44999999999999",
                    "115.5",
                    "115.35",
                    "115.35",
                    "115.11",
                    "115.11",
                    "115.2",
                    "115.36",
                    "115.32",
                    "115.27999999999999",
                    "115.22",
                    "115.22",
                    "115.27999999999999",
                    "115.48",
                    "116.32",
                    "116.01000000000002",
                    "115.86",
                    "115.86",
                    "116.06000000000002",
                    "116.14",
                    "116.27",
                    "116.19999999999999",
                    "116.33999999999999",
                    "116.56",
                    "116.4",
                    "116.45",
                    "116.45",
                    "116.45"
                ],
                "description": "true_data",
                "index": 0,
                "layout": "IPY_MODEL_d5d864ee622446cabba6813fcb3f009f",
                "style": "IPY_MODEL_1fab008291434483b2cd3c68f95e6992"
            }
        },
        "0ee2ab8f4a974b3794fe89790189ddc5": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "856ea43e134b46f1add83aa3535ee3bf": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "0bcb88f1a7e14682a3c8ca79d9f4c78e": {
            "model_name": "DropdownModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_options_labels": [
                    "115.85887908935547",
                    "115.96217346191406",
                    "116.21099853515625",
                    "116.51026916503906",
                    "116.44573211669922",
                    "116.77699279785156",
                    "116.65660095214844",
                    "116.65394592285156",
                    "116.52963256835938",
                    "116.43795013427734",
                    "116.16097259521484",
                    "116.02178192138672",
                    "116.0703125",
                    "116.36695861816406",
                    "116.69207000732422",
                    "116.50367736816406",
                    "117.20589447021484",
                    "117.04352569580078",
                    "117.14323425292969",
                    "117.11446380615234",
                    "116.98936462402344",
                    "117.00788116455078",
                    "116.7171859741211",
                    "115.85929870605469",
                    "116.379638671875",
                    "115.51661682128906",
                    "115.6009521484375",
                    "115.97655487060547",
                    "115.93025970458984",
                    "115.880859375",
                    "116.55480194091797",
                    "116.37938690185547",
                    "116.5513916015625",
                    "116.86123657226562",
                    "116.86395263671875",
                    "116.82482147216797",
                    "116.69039154052734",
                    "114.53022766113281",
                    "115.49700927734375",
                    "116.01007080078125",
                    "115.95280456542969",
                    "115.81319427490234",
                    "116.0107421875",
                    "116.45984649658203",
                    "114.94313049316406",
                    "114.85895538330078",
                    "114.59385681152344",
                    "114.76580047607422",
                    "114.7887191772461",
                    "113.8150863647461",
                    "113.7582778930664",
                    "114.15794372558594",
                    "114.37068939208984",
                    "114.57695770263672",
                    "114.3397216796875",
                    "114.51215362548828",
                    "114.6137466430664",
                    "114.71529388427734",
                    "112.92506408691406",
                    "112.41398620605469",
                    "112.46980285644531",
                    "113.26464080810547",
                    "113.66800689697266",
                    "113.95883178710938",
                    "113.79788970947266",
                    "113.39488983154297",
                    "112.7228012084961",
                    "112.15782165527344",
                    "112.9742202758789",
                    "113.51158142089844",
                    "113.49686431884766",
                    "114.4570083618164",
                    "112.06981658935547",
                    "111.99729919433594",
                    "111.56987762451172",
                    "111.21161651611328",
                    "111.02033996582031",
                    "111.49645233154297",
                    "111.23039245605469",
                    "111.60277557373047",
                    "111.64196014404297",
                    "112.50764465332031",
                    "112.55686950683594",
                    "112.91718292236328",
                    "112.9327163696289",
                    "112.66971588134766",
                    "111.54632568359375",
                    "112.18833923339844",
                    "112.27843475341797",
                    "112.27652740478516",
                    "112.2762451171875",
                    "112.2769775390625",
                    "112.87650299072266",
                    "112.9425048828125",
                    "113.55367279052734",
                    "113.75907135009766",
                    "113.85009765625",
                    "113.61683654785156",
                    "113.67030334472656",
                    "113.21281433105469",
                    "112.1783447265625",
                    "112.87167358398438",
                    "113.39126586914062",
                    "113.39349365234375",
                    "113.1799545288086",
                    "113.11089324951172",
                    "112.7244873046875",
                    "111.99266815185547",
                    "112.3542251586914",
                    "112.34068298339844",
                    "112.29927062988281",
                    "112.23140716552734",
                    "112.09429931640625",
                    "111.91594696044922",
                    "112.53155517578125",
                    "112.57424926757812",
                    "112.55375671386719",
                    "113.09176635742188",
                    "113.10319519042969",
                    "113.23992156982422",
                    "113.18119812011719",
                    "112.61956024169922",
                    "112.67369842529297",
                    "112.68890380859375",
                    "112.40240478515625",
                    "112.33646392822266",
                    "112.50235748291016",
                    "112.51812744140625",
                    "111.44834899902344",
                    "110.94120025634766",
                    "110.978759765625",
                    "110.8450698852539",
                    "110.71104431152344",
                    "110.62862396240234",
                    "110.93680572509766",
                    "111.54008483886719",
                    "111.33705139160156",
                    "111.29434967041016",
                    "111.33177185058594",
                    "111.34075164794922",
                    "111.33738708496094",
                    "111.41676330566406",
                    "111.42343139648438",
                    "111.42108917236328",
                    "111.41981506347656",
                    "111.41938018798828",
                    "111.41938018798828",
                    "111.41961669921875",
                    "111.41996765136719",
                    "111.39289093017578",
                    "111.15476989746094",
                    "110.87242126464844",
                    "111.02383422851562",
                    "111.05160522460938",
                    "110.67377471923828",
                    "110.36719512939453",
                    "109.34368133544922",
                    "109.55009460449219",
                    "109.14775085449219",
                    "109.05046844482422",
                    "109.15467071533203",
                    "109.12223815917969",
                    "109.10308837890625",
                    "109.48075866699219",
                    "109.79275512695312",
                    "109.45431518554688",
                    "109.29329681396484",
                    "109.26354217529297",
                    "109.06034851074219",
                    "109.04883575439453",
                    "108.40438842773438",
                    "108.25631713867188",
                    "108.47732543945312",
                    "108.5356674194336",
                    "108.54523468017578",
                    "108.16226196289062",
                    "108.01374816894531",
                    "107.96439361572266",
                    "108.59841918945312",
                    "108.66703796386719",
                    "108.23226928710938",
                    "108.28012084960938",
                    "108.57874298095703",
                    "108.1978759765625",
                    "109.29931640625",
                    "110.04570770263672",
                    "110.43517303466797",
                    "110.46007537841797",
                    "110.5561752319336",
                    "110.60175323486328",
                    "110.82598876953125",
                    "111.62006378173828",
                    "111.09036254882812",
                    "111.30819702148438",
                    "111.373291015625",
                    "111.60984802246094",
                    "111.62543487548828",
                    "111.4856185913086",
                    "111.78169250488281",
                    "111.81543731689453",
                    "112.0406265258789",
                    "112.05807495117188",
                    "112.12079620361328",
                    "112.10579681396484",
                    "112.53006744384766",
                    "112.812744140625",
                    "112.81009674072266",
                    "113.3535385131836",
                    "113.45309448242188",
                    "113.4289321899414",
                    "113.40821075439453",
                    "113.42759704589844",
                    "113.8273696899414",
                    "114.24425506591797",
                    "114.21770477294922",
                    "114.1943588256836",
                    "114.1684799194336",
                    "113.86038970947266",
                    "113.82034301757812",
                    "114.58655548095703",
                    "114.50733947753906",
                    "114.3350830078125",
                    "114.3384780883789",
                    "113.75743103027344",
                    "114.01094055175781",
                    "113.85874938964844",
                    "113.89453125",
                    "113.68414306640625",
                    "113.62745666503906",
                    "113.58773040771484",
                    "113.59453582763672",
                    "113.50528717041016",
                    "113.50639343261719",
                    "113.96165466308594",
                    "114.21331024169922",
                    "114.06380462646484",
                    "114.06715393066406",
                    "114.3234634399414",
                    "114.16009521484375",
                    "113.94795989990234",
                    "114.03315734863281",
                    "114.04373168945312",
                    "113.85340881347656",
                    "113.83856201171875",
                    "113.8500747680664",
                    "114.05702209472656",
                    "114.31290435791016",
                    "114.11112213134766",
                    "114.10076904296875",
                    "114.20171356201172",
                    "114.06999969482422",
                    "114.10161590576172",
                    "114.14958953857422",
                    "114.03076171875",
                    "114.46531677246094",
                    "115.64114379882812",
                    "115.3586654663086",
                    "115.29818725585938",
                    "115.01641082763672",
                    "115.0342025756836",
                    "115.15290069580078",
                    "115.33531188964844",
                    "115.27425384521484",
                    "115.2251968383789",
                    "115.16413116455078",
                    "115.1749267578125",
                    "115.25056457519531",
                    "115.47853088378906",
                    "116.4526138305664",
                    "115.95143127441406",
                    "115.75618743896484",
                    "115.78627014160156",
                    "116.0344009399414",
                    "116.1069564819336",
                    "116.24121856689453",
                    "116.13190460205078",
                    "116.30216979980469",
                    "116.55298614501953",
                    "116.31229400634766",
                    "116.3839340209961",
                    "116.38636779785156"
                ],
                "description": "pred_data",
                "index": 0,
                "layout": "IPY_MODEL_0ee2ab8f4a974b3794fe89790189ddc5",
                "style": "IPY_MODEL_856ea43e134b46f1add83aa3535ee3bf"
            }
        },
        "cebbf5e6edb14b0d90df322c7210eb9d": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "d78b9cb945814d85bd4ddcf7dfc03d35": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "a5dd0676588a4c85b6ca965ec7069734": {
            "model_name": "DropdownModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_options_labels": [
                    "-4",
                    "-3",
                    "-2",
                    "-1",
                    "0",
                    "1",
                    "2",
                    "3",
                    "4"
                ],
                "description": "shift_list",
                "index": 0,
                "layout": "IPY_MODEL_cebbf5e6edb14b0d90df322c7210eb9d",
                "style": "IPY_MODEL_d78b9cb945814d85bd4ddcf7dfc03d35"
            }
        },
        "94c46dce4be442428a92756e0dc6f68d": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "b6f98120056e4f0caaf94423e85cf576": {
            "model_name": "OutputModel",
            "model_module": "@jupyter-widgets/output",
            "model_module_version": "1.0.0",
            "state": {
                "layout": "IPY_MODEL_94c46dce4be442428a92756e0dc6f68d",
                "outputs": [
                    {
                        "output_type": "stream",
                        "text": "115.85887908935547\n",
                        "name": "stdout"
                    }
                ]
            }
        },
        "772ba162eade4245805497d505d85cab": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "948b19da73e44eec83059012c58c7354": {
            "model_name": "VBoxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_dom_classes": [
                    "widget-interact"
                ],
                "children": [
                    "IPY_MODEL_4bd4219886cc4dc88ea870d8af2bb899",
                    "IPY_MODEL_2e8133e8cef84d4babdcbef619e4e232",
                    "IPY_MODEL_c5c0188b3cda4d5b9eee7b6575960bf6",
                    "IPY_MODEL_48fa440b7026438790be5220f228b833"
                ],
                "layout": "IPY_MODEL_772ba162eade4245805497d505d85cab"
            }
        },
        "7bc3d678a0094411a7492b873b6312b7": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "9cf4062b2f3f46a49e69aa62c91010ae": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "4bd4219886cc4dc88ea870d8af2bb899": {
            "model_name": "DropdownModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_options_labels": [
                    "115.98",
                    "116.19999999999999",
                    "116.47999999999999",
                    "116.47999999999999",
                    "116.77",
                    "116.72",
                    "116.73",
                    "116.63",
                    "116.54",
                    "116.28999999999999",
                    "116.13",
                    "116.13",
                    "116.36",
                    "116.65",
                    "116.55",
                    "117.12000000000002",
                    "117.08000000000001",
                    "117.19",
                    "117.19",
                    "117.1",
                    "117.1",
                    "116.86",
                    "116.11000000000001",
                    "116.42",
                    "115.68",
                    "115.67",
                    "115.94",
                    "115.92000000000002",
                    "115.89",
                    "116.45",
                    "116.38",
                    "116.55",
                    "116.83",
                    "116.89000000000001",
                    "116.89000000000001",
                    "116.79000000000002",
                    "114.93",
                    "115.57",
                    "115.94",
                    "115.94",
                    "115.84",
                    "116.0",
                    "116.38999999999999",
                    "115.16",
                    "114.98",
                    "114.66",
                    "114.77000000000001",
                    "114.77000000000001",
                    "113.87",
                    "113.78",
                    "114.11",
                    "114.3",
                    "114.51",
                    "114.31999999999998",
                    "114.49",
                    "114.59",
                    "114.7",
                    "113.01999999999998",
                    "112.48",
                    "112.48",
                    "113.23",
                    "113.58",
                    "113.88",
                    "113.76",
                    "113.4",
                    "112.74000000000001",
                    "112.16",
                    "112.99",
                    "113.45",
                    "113.45",
                    "114.38",
                    "112.07",
                    "112.07",
                    "111.54",
                    "111.16",
                    "110.96",
                    "111.49",
                    "111.12999999999998",
                    "111.58000000000001",
                    "111.58000000000001",
                    "112.5",
                    "112.5",
                    "112.9",
                    "112.92000000000002",
                    "112.68000000000002",
                    "111.52",
                    "112.27",
                    "112.27",
                    "112.27",
                    "112.27",
                    "112.27",
                    "112.88000000000001",
                    "112.92000000000002",
                    "113.54",
                    "113.74",
                    "113.86",
                    "113.66000000000001",
                    "113.72",
                    "113.27",
                    "112.22",
                    "112.94",
                    "113.37",
                    "113.37",
                    "113.18",
                    "113.12",
                    "112.73000000000002",
                    "111.98",
                    "112.37999999999998",
                    "112.31",
                    "112.27",
                    "112.2",
                    "112.06",
                    "111.88",
                    "112.53",
                    "112.53",
                    "112.53",
                    "113.08",
                    "113.08",
                    "113.24",
                    "113.19",
                    "112.64000000000001",
                    "112.71",
                    "112.7",
                    "112.4",
                    "112.34",
                    "112.5",
                    "112.5",
                    "111.37",
                    "110.89000000000001",
                    "110.96",
                    "110.78",
                    "110.64",
                    "110.56000000000002",
                    "110.92",
                    "111.54",
                    "111.25999999999999",
                    "111.25999999999999",
                    "111.30999999999999",
                    "111.31999999999998",
                    "111.31999999999998",
                    "111.41",
                    "111.41",
                    "111.41",
                    "111.41",
                    "111.41",
                    "111.41",
                    "111.41",
                    "111.41",
                    "111.38",
                    "111.11999999999999",
                    "110.83",
                    "111.02999999999999",
                    "111.02999999999999",
                    "110.6",
                    "110.29999999999998",
                    "109.09999999999998",
                    "109.57",
                    "108.99",
                    "108.97",
                    "109.12",
                    "109.04999999999998",
                    "109.03999999999999",
                    "109.52",
                    "109.81",
                    "109.34",
                    "109.22999999999999",
                    "109.22999999999999",
                    "108.98",
                    "109.02",
                    "108.18",
                    "108.18",
                    "108.51",
                    "108.51",
                    "108.51",
                    "108.0",
                    "107.93000000000002",
                    "107.91",
                    "108.77000000000001",
                    "108.65",
                    "108.07",
                    "108.28",
                    "108.65",
                    "108.05",
                    "109.60000000000001",
                    "110.18",
                    "110.5",
                    "110.48",
                    "110.6",
                    "110.64",
                    "110.89000000000001",
                    "111.73",
                    "111.06",
                    "111.38",
                    "111.41",
                    "111.66",
                    "111.65",
                    "111.5",
                    "111.83",
                    "111.83",
                    "112.07",
                    "112.07",
                    "112.13999999999999",
                    "112.12",
                    "112.56",
                    "112.82",
                    "112.82",
                    "113.37",
                    "113.46",
                    "113.46",
                    "113.45",
                    "113.47",
                    "113.85000000000001",
                    "114.24",
                    "114.24",
                    "114.24",
                    "114.21999999999998",
                    "113.93000000000002",
                    "113.88",
                    "114.57",
                    "114.51",
                    "114.38",
                    "114.38",
                    "113.83",
                    "114.05",
                    "113.88",
                    "113.91",
                    "113.70000000000002",
                    "113.64",
                    "113.59",
                    "113.59",
                    "113.5",
                    "113.5",
                    "113.93000000000002",
                    "114.16999999999999",
                    "114.06",
                    "114.07999999999998",
                    "114.31999999999998",
                    "114.18",
                    "113.99000000000001",
                    "114.06",
                    "114.06",
                    "113.88",
                    "113.86",
                    "113.86",
                    "114.05",
                    "114.29",
                    "114.11999999999999",
                    "114.11999999999999",
                    "114.21",
                    "114.09",
                    "114.11999999999999",
                    "114.16",
                    "114.05",
                    "114.44999999999999",
                    "115.5",
                    "115.35",
                    "115.35",
                    "115.11",
                    "115.11",
                    "115.2",
                    "115.36",
                    "115.32",
                    "115.27999999999999",
                    "115.22",
                    "115.22",
                    "115.27999999999999",
                    "115.48",
                    "116.32",
                    "116.01000000000002",
                    "115.86",
                    "115.86",
                    "116.06000000000002",
                    "116.14",
                    "116.27",
                    "116.19999999999999",
                    "116.33999999999999",
                    "116.56",
                    "116.4",
                    "116.45",
                    "116.45",
                    "116.45"
                ],
                "description": "true_data",
                "index": 0,
                "layout": "IPY_MODEL_7bc3d678a0094411a7492b873b6312b7",
                "style": "IPY_MODEL_9cf4062b2f3f46a49e69aa62c91010ae"
            }
        },
        "411a27f52c3c4bb49410d924ce1985b5": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "1be8d098c0264751ab4d44ea530bfd7f": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "2e8133e8cef84d4babdcbef619e4e232": {
            "model_name": "DropdownModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_options_labels": [
                    "115.85887908935547",
                    "115.96217346191406",
                    "116.21099853515625",
                    "116.51026916503906",
                    "116.44573211669922",
                    "116.77699279785156",
                    "116.65660095214844",
                    "116.65394592285156",
                    "116.52963256835938",
                    "116.43795013427734",
                    "116.16097259521484",
                    "116.02178192138672",
                    "116.0703125",
                    "116.36695861816406",
                    "116.69207000732422",
                    "116.50367736816406",
                    "117.20589447021484",
                    "117.04352569580078",
                    "117.14323425292969",
                    "117.11446380615234",
                    "116.98936462402344",
                    "117.00788116455078",
                    "116.7171859741211",
                    "115.85929870605469",
                    "116.379638671875",
                    "115.51661682128906",
                    "115.6009521484375",
                    "115.97655487060547",
                    "115.93025970458984",
                    "115.880859375",
                    "116.55480194091797",
                    "116.37938690185547",
                    "116.5513916015625",
                    "116.86123657226562",
                    "116.86395263671875",
                    "116.82482147216797",
                    "116.69039154052734",
                    "114.53022766113281",
                    "115.49700927734375",
                    "116.01007080078125",
                    "115.95280456542969",
                    "115.81319427490234",
                    "116.0107421875",
                    "116.45984649658203",
                    "114.94313049316406",
                    "114.85895538330078",
                    "114.59385681152344",
                    "114.76580047607422",
                    "114.7887191772461",
                    "113.8150863647461",
                    "113.7582778930664",
                    "114.15794372558594",
                    "114.37068939208984",
                    "114.57695770263672",
                    "114.3397216796875",
                    "114.51215362548828",
                    "114.6137466430664",
                    "114.71529388427734",
                    "112.92506408691406",
                    "112.41398620605469",
                    "112.46980285644531",
                    "113.26464080810547",
                    "113.66800689697266",
                    "113.95883178710938",
                    "113.79788970947266",
                    "113.39488983154297",
                    "112.7228012084961",
                    "112.15782165527344",
                    "112.9742202758789",
                    "113.51158142089844",
                    "113.49686431884766",
                    "114.4570083618164",
                    "112.06981658935547",
                    "111.99729919433594",
                    "111.56987762451172",
                    "111.21161651611328",
                    "111.02033996582031",
                    "111.49645233154297",
                    "111.23039245605469",
                    "111.60277557373047",
                    "111.64196014404297",
                    "112.50764465332031",
                    "112.55686950683594",
                    "112.91718292236328",
                    "112.9327163696289",
                    "112.66971588134766",
                    "111.54632568359375",
                    "112.18833923339844",
                    "112.27843475341797",
                    "112.27652740478516",
                    "112.2762451171875",
                    "112.2769775390625",
                    "112.87650299072266",
                    "112.9425048828125",
                    "113.55367279052734",
                    "113.75907135009766",
                    "113.85009765625",
                    "113.61683654785156",
                    "113.67030334472656",
                    "113.21281433105469",
                    "112.1783447265625",
                    "112.87167358398438",
                    "113.39126586914062",
                    "113.39349365234375",
                    "113.1799545288086",
                    "113.11089324951172",
                    "112.7244873046875",
                    "111.99266815185547",
                    "112.3542251586914",
                    "112.34068298339844",
                    "112.29927062988281",
                    "112.23140716552734",
                    "112.09429931640625",
                    "111.91594696044922",
                    "112.53155517578125",
                    "112.57424926757812",
                    "112.55375671386719",
                    "113.09176635742188",
                    "113.10319519042969",
                    "113.23992156982422",
                    "113.18119812011719",
                    "112.61956024169922",
                    "112.67369842529297",
                    "112.68890380859375",
                    "112.40240478515625",
                    "112.33646392822266",
                    "112.50235748291016",
                    "112.51812744140625",
                    "111.44834899902344",
                    "110.94120025634766",
                    "110.978759765625",
                    "110.8450698852539",
                    "110.71104431152344",
                    "110.62862396240234",
                    "110.93680572509766",
                    "111.54008483886719",
                    "111.33705139160156",
                    "111.29434967041016",
                    "111.33177185058594",
                    "111.34075164794922",
                    "111.33738708496094",
                    "111.41676330566406",
                    "111.42343139648438",
                    "111.42108917236328",
                    "111.41981506347656",
                    "111.41938018798828",
                    "111.41938018798828",
                    "111.41961669921875",
                    "111.41996765136719",
                    "111.39289093017578",
                    "111.15476989746094",
                    "110.87242126464844",
                    "111.02383422851562",
                    "111.05160522460938",
                    "110.67377471923828",
                    "110.36719512939453",
                    "109.34368133544922",
                    "109.55009460449219",
                    "109.14775085449219",
                    "109.05046844482422",
                    "109.15467071533203",
                    "109.12223815917969",
                    "109.10308837890625",
                    "109.48075866699219",
                    "109.79275512695312",
                    "109.45431518554688",
                    "109.29329681396484",
                    "109.26354217529297",
                    "109.06034851074219",
                    "109.04883575439453",
                    "108.40438842773438",
                    "108.25631713867188",
                    "108.47732543945312",
                    "108.5356674194336",
                    "108.54523468017578",
                    "108.16226196289062",
                    "108.01374816894531",
                    "107.96439361572266",
                    "108.59841918945312",
                    "108.66703796386719",
                    "108.23226928710938",
                    "108.28012084960938",
                    "108.57874298095703",
                    "108.1978759765625",
                    "109.29931640625",
                    "110.04570770263672",
                    "110.43517303466797",
                    "110.46007537841797",
                    "110.5561752319336",
                    "110.60175323486328",
                    "110.82598876953125",
                    "111.62006378173828",
                    "111.09036254882812",
                    "111.30819702148438",
                    "111.373291015625",
                    "111.60984802246094",
                    "111.62543487548828",
                    "111.4856185913086",
                    "111.78169250488281",
                    "111.81543731689453",
                    "112.0406265258789",
                    "112.05807495117188",
                    "112.12079620361328",
                    "112.10579681396484",
                    "112.53006744384766",
                    "112.812744140625",
                    "112.81009674072266",
                    "113.3535385131836",
                    "113.45309448242188",
                    "113.4289321899414",
                    "113.40821075439453",
                    "113.42759704589844",
                    "113.8273696899414",
                    "114.24425506591797",
                    "114.21770477294922",
                    "114.1943588256836",
                    "114.1684799194336",
                    "113.86038970947266",
                    "113.82034301757812",
                    "114.58655548095703",
                    "114.50733947753906",
                    "114.3350830078125",
                    "114.3384780883789",
                    "113.75743103027344",
                    "114.01094055175781",
                    "113.85874938964844",
                    "113.89453125",
                    "113.68414306640625",
                    "113.62745666503906",
                    "113.58773040771484",
                    "113.59453582763672",
                    "113.50528717041016",
                    "113.50639343261719",
                    "113.96165466308594",
                    "114.21331024169922",
                    "114.06380462646484",
                    "114.06715393066406",
                    "114.3234634399414",
                    "114.16009521484375",
                    "113.94795989990234",
                    "114.03315734863281",
                    "114.04373168945312",
                    "113.85340881347656",
                    "113.83856201171875",
                    "113.8500747680664",
                    "114.05702209472656",
                    "114.31290435791016",
                    "114.11112213134766",
                    "114.10076904296875",
                    "114.20171356201172",
                    "114.06999969482422",
                    "114.10161590576172",
                    "114.14958953857422",
                    "114.03076171875",
                    "114.46531677246094",
                    "115.64114379882812",
                    "115.3586654663086",
                    "115.29818725585938",
                    "115.01641082763672",
                    "115.0342025756836",
                    "115.15290069580078",
                    "115.33531188964844",
                    "115.27425384521484",
                    "115.2251968383789",
                    "115.16413116455078",
                    "115.1749267578125",
                    "115.25056457519531",
                    "115.47853088378906",
                    "116.4526138305664",
                    "115.95143127441406",
                    "115.75618743896484",
                    "115.78627014160156",
                    "116.0344009399414",
                    "116.1069564819336",
                    "116.24121856689453",
                    "116.13190460205078",
                    "116.30216979980469",
                    "116.55298614501953",
                    "116.31229400634766",
                    "116.3839340209961",
                    "116.38636779785156"
                ],
                "description": "pred_data",
                "index": 0,
                "layout": "IPY_MODEL_411a27f52c3c4bb49410d924ce1985b5",
                "style": "IPY_MODEL_1be8d098c0264751ab4d44ea530bfd7f"
            }
        },
        "fc573b436c7b4d94a64b81132c6bd965": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "fadc1eea1a534c4996c755b978a6c0be": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "c5c0188b3cda4d5b9eee7b6575960bf6": {
            "model_name": "DropdownModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_options_labels": [
                    "-4",
                    "-3",
                    "-2",
                    "-1",
                    "0",
                    "1",
                    "2",
                    "3",
                    "4"
                ],
                "description": "shift_list",
                "index": 0,
                "layout": "IPY_MODEL_fc573b436c7b4d94a64b81132c6bd965",
                "style": "IPY_MODEL_fadc1eea1a534c4996c755b978a6c0be"
            }
        },
        "d83d5fbb00634edaaa2986ab5c14a60d": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "48fa440b7026438790be5220f228b833": {
            "model_name": "OutputModel",
            "model_module": "@jupyter-widgets/output",
            "model_module_version": "1.0.0",
            "state": {
                "layout": "IPY_MODEL_d83d5fbb00634edaaa2986ab5c14a60d",
                "outputs": [
                    {
                        "output_type": "stream",
                        "text": "115.85887908935547\n",
                        "name": "stdout"
                    }
                ]
            }
        },
        "3c1bc003ac8b490da4d6aac41b8e6062": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "d76f6c223d4443aba83113b388d2a71c": {
            "model_name": "VBoxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_dom_classes": [
                    "widget-interact"
                ],
                "children": [
                    "IPY_MODEL_7fa00ee5cf374baf9fd6b48bddf5f2ee",
                    "IPY_MODEL_28c43fd8f3f5441a95fb440af3755835",
                    "IPY_MODEL_efc08d05eb4f4d059205a19a900455a7",
                    "IPY_MODEL_7fa9cd652378460bb319927b95b41f45"
                ],
                "layout": "IPY_MODEL_3c1bc003ac8b490da4d6aac41b8e6062"
            }
        },
        "12c2aee98d9b431bb8f8ce8faaab69f6": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "9d55d0658f5243ac95bbbebbb7a90343": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "7fa00ee5cf374baf9fd6b48bddf5f2ee": {
            "model_name": "DropdownModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_options_labels": [
                    "115.98",
                    "116.19999999999999",
                    "116.47999999999999",
                    "116.47999999999999",
                    "116.77",
                    "116.72",
                    "116.73",
                    "116.63",
                    "116.54",
                    "116.28999999999999",
                    "116.13",
                    "116.13",
                    "116.36",
                    "116.65",
                    "116.55",
                    "117.12000000000002",
                    "117.08000000000001",
                    "117.19",
                    "117.19",
                    "117.1",
                    "117.1",
                    "116.86",
                    "116.11000000000001",
                    "116.42",
                    "115.68",
                    "115.67",
                    "115.94",
                    "115.92000000000002",
                    "115.89",
                    "116.45",
                    "116.38",
                    "116.55",
                    "116.83",
                    "116.89000000000001",
                    "116.89000000000001",
                    "116.79000000000002",
                    "114.93",
                    "115.57",
                    "115.94",
                    "115.94",
                    "115.84",
                    "116.0",
                    "116.38999999999999",
                    "115.16",
                    "114.98",
                    "114.66",
                    "114.77000000000001",
                    "114.77000000000001",
                    "113.87",
                    "113.78",
                    "114.11",
                    "114.3",
                    "114.51",
                    "114.31999999999998",
                    "114.49",
                    "114.59",
                    "114.7",
                    "113.01999999999998",
                    "112.48",
                    "112.48",
                    "113.23",
                    "113.58",
                    "113.88",
                    "113.76",
                    "113.4",
                    "112.74000000000001",
                    "112.16",
                    "112.99",
                    "113.45",
                    "113.45",
                    "114.38",
                    "112.07",
                    "112.07",
                    "111.54",
                    "111.16",
                    "110.96",
                    "111.49",
                    "111.12999999999998",
                    "111.58000000000001",
                    "111.58000000000001",
                    "112.5",
                    "112.5",
                    "112.9",
                    "112.92000000000002",
                    "112.68000000000002",
                    "111.52",
                    "112.27",
                    "112.27",
                    "112.27",
                    "112.27",
                    "112.27",
                    "112.88000000000001",
                    "112.92000000000002",
                    "113.54",
                    "113.74",
                    "113.86",
                    "113.66000000000001",
                    "113.72",
                    "113.27",
                    "112.22",
                    "112.94",
                    "113.37",
                    "113.37",
                    "113.18",
                    "113.12",
                    "112.73000000000002",
                    "111.98",
                    "112.37999999999998",
                    "112.31",
                    "112.27",
                    "112.2",
                    "112.06",
                    "111.88",
                    "112.53",
                    "112.53",
                    "112.53",
                    "113.08",
                    "113.08",
                    "113.24",
                    "113.19",
                    "112.64000000000001",
                    "112.71",
                    "112.7",
                    "112.4",
                    "112.34",
                    "112.5",
                    "112.5",
                    "111.37",
                    "110.89000000000001",
                    "110.96",
                    "110.78",
                    "110.64",
                    "110.56000000000002",
                    "110.92",
                    "111.54",
                    "111.25999999999999",
                    "111.25999999999999",
                    "111.30999999999999",
                    "111.31999999999998",
                    "111.31999999999998",
                    "111.41",
                    "111.41",
                    "111.41",
                    "111.41",
                    "111.41",
                    "111.41",
                    "111.41",
                    "111.41",
                    "111.38",
                    "111.11999999999999",
                    "110.83",
                    "111.02999999999999",
                    "111.02999999999999",
                    "110.6",
                    "110.29999999999998",
                    "109.09999999999998",
                    "109.57",
                    "108.99",
                    "108.97",
                    "109.12",
                    "109.04999999999998",
                    "109.03999999999999",
                    "109.52",
                    "109.81",
                    "109.34",
                    "109.22999999999999",
                    "109.22999999999999",
                    "108.98",
                    "109.02",
                    "108.18",
                    "108.18",
                    "108.51",
                    "108.51",
                    "108.51",
                    "108.0",
                    "107.93000000000002",
                    "107.91",
                    "108.77000000000001",
                    "108.65",
                    "108.07",
                    "108.28",
                    "108.65",
                    "108.05",
                    "109.60000000000001",
                    "110.18",
                    "110.5",
                    "110.48",
                    "110.6",
                    "110.64",
                    "110.89000000000001",
                    "111.73",
                    "111.06",
                    "111.38",
                    "111.41",
                    "111.66",
                    "111.65",
                    "111.5",
                    "111.83",
                    "111.83",
                    "112.07",
                    "112.07",
                    "112.13999999999999",
                    "112.12",
                    "112.56",
                    "112.82",
                    "112.82",
                    "113.37",
                    "113.46",
                    "113.46",
                    "113.45",
                    "113.47",
                    "113.85000000000001",
                    "114.24",
                    "114.24",
                    "114.24",
                    "114.21999999999998",
                    "113.93000000000002",
                    "113.88",
                    "114.57",
                    "114.51",
                    "114.38",
                    "114.38",
                    "113.83",
                    "114.05",
                    "113.88",
                    "113.91",
                    "113.70000000000002",
                    "113.64",
                    "113.59",
                    "113.59",
                    "113.5",
                    "113.5",
                    "113.93000000000002",
                    "114.16999999999999",
                    "114.06",
                    "114.07999999999998",
                    "114.31999999999998",
                    "114.18",
                    "113.99000000000001",
                    "114.06",
                    "114.06",
                    "113.88",
                    "113.86",
                    "113.86",
                    "114.05",
                    "114.29",
                    "114.11999999999999",
                    "114.11999999999999",
                    "114.21",
                    "114.09",
                    "114.11999999999999",
                    "114.16",
                    "114.05",
                    "114.44999999999999",
                    "115.5",
                    "115.35",
                    "115.35",
                    "115.11",
                    "115.11",
                    "115.2",
                    "115.36",
                    "115.32",
                    "115.27999999999999",
                    "115.22",
                    "115.22",
                    "115.27999999999999",
                    "115.48",
                    "116.32",
                    "116.01000000000002",
                    "115.86",
                    "115.86",
                    "116.06000000000002",
                    "116.14",
                    "116.27",
                    "116.19999999999999",
                    "116.33999999999999",
                    "116.56",
                    "116.4",
                    "116.45",
                    "116.45",
                    "116.45"
                ],
                "description": "true_data",
                "index": 0,
                "layout": "IPY_MODEL_12c2aee98d9b431bb8f8ce8faaab69f6",
                "style": "IPY_MODEL_9d55d0658f5243ac95bbbebbb7a90343"
            }
        },
        "bd96a714a17d47eeaf71814a2fd91a6c": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "7aaf3674924048eda4bd42c73671778a": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "28c43fd8f3f5441a95fb440af3755835": {
            "model_name": "DropdownModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_options_labels": [
                    "115.85887908935547",
                    "115.96217346191406",
                    "116.21099853515625",
                    "116.51026916503906",
                    "116.44573211669922",
                    "116.77699279785156",
                    "116.65660095214844",
                    "116.65394592285156",
                    "116.52963256835938",
                    "116.43795013427734",
                    "116.16097259521484",
                    "116.02178192138672",
                    "116.0703125",
                    "116.36695861816406",
                    "116.69207000732422",
                    "116.50367736816406",
                    "117.20589447021484",
                    "117.04352569580078",
                    "117.14323425292969",
                    "117.11446380615234",
                    "116.98936462402344",
                    "117.00788116455078",
                    "116.7171859741211",
                    "115.85929870605469",
                    "116.379638671875",
                    "115.51661682128906",
                    "115.6009521484375",
                    "115.97655487060547",
                    "115.93025970458984",
                    "115.880859375",
                    "116.55480194091797",
                    "116.37938690185547",
                    "116.5513916015625",
                    "116.86123657226562",
                    "116.86395263671875",
                    "116.82482147216797",
                    "116.69039154052734",
                    "114.53022766113281",
                    "115.49700927734375",
                    "116.01007080078125",
                    "115.95280456542969",
                    "115.81319427490234",
                    "116.0107421875",
                    "116.45984649658203",
                    "114.94313049316406",
                    "114.85895538330078",
                    "114.59385681152344",
                    "114.76580047607422",
                    "114.7887191772461",
                    "113.8150863647461",
                    "113.7582778930664",
                    "114.15794372558594",
                    "114.37068939208984",
                    "114.57695770263672",
                    "114.3397216796875",
                    "114.51215362548828",
                    "114.6137466430664",
                    "114.71529388427734",
                    "112.92506408691406",
                    "112.41398620605469",
                    "112.46980285644531",
                    "113.26464080810547",
                    "113.66800689697266",
                    "113.95883178710938",
                    "113.79788970947266",
                    "113.39488983154297",
                    "112.7228012084961",
                    "112.15782165527344",
                    "112.9742202758789",
                    "113.51158142089844",
                    "113.49686431884766",
                    "114.4570083618164",
                    "112.06981658935547",
                    "111.99729919433594",
                    "111.56987762451172",
                    "111.21161651611328",
                    "111.02033996582031",
                    "111.49645233154297",
                    "111.23039245605469",
                    "111.60277557373047",
                    "111.64196014404297",
                    "112.50764465332031",
                    "112.55686950683594",
                    "112.91718292236328",
                    "112.9327163696289",
                    "112.66971588134766",
                    "111.54632568359375",
                    "112.18833923339844",
                    "112.27843475341797",
                    "112.27652740478516",
                    "112.2762451171875",
                    "112.2769775390625",
                    "112.87650299072266",
                    "112.9425048828125",
                    "113.55367279052734",
                    "113.75907135009766",
                    "113.85009765625",
                    "113.61683654785156",
                    "113.67030334472656",
                    "113.21281433105469",
                    "112.1783447265625",
                    "112.87167358398438",
                    "113.39126586914062",
                    "113.39349365234375",
                    "113.1799545288086",
                    "113.11089324951172",
                    "112.7244873046875",
                    "111.99266815185547",
                    "112.3542251586914",
                    "112.34068298339844",
                    "112.29927062988281",
                    "112.23140716552734",
                    "112.09429931640625",
                    "111.91594696044922",
                    "112.53155517578125",
                    "112.57424926757812",
                    "112.55375671386719",
                    "113.09176635742188",
                    "113.10319519042969",
                    "113.23992156982422",
                    "113.18119812011719",
                    "112.61956024169922",
                    "112.67369842529297",
                    "112.68890380859375",
                    "112.40240478515625",
                    "112.33646392822266",
                    "112.50235748291016",
                    "112.51812744140625",
                    "111.44834899902344",
                    "110.94120025634766",
                    "110.978759765625",
                    "110.8450698852539",
                    "110.71104431152344",
                    "110.62862396240234",
                    "110.93680572509766",
                    "111.54008483886719",
                    "111.33705139160156",
                    "111.29434967041016",
                    "111.33177185058594",
                    "111.34075164794922",
                    "111.33738708496094",
                    "111.41676330566406",
                    "111.42343139648438",
                    "111.42108917236328",
                    "111.41981506347656",
                    "111.41938018798828",
                    "111.41938018798828",
                    "111.41961669921875",
                    "111.41996765136719",
                    "111.39289093017578",
                    "111.15476989746094",
                    "110.87242126464844",
                    "111.02383422851562",
                    "111.05160522460938",
                    "110.67377471923828",
                    "110.36719512939453",
                    "109.34368133544922",
                    "109.55009460449219",
                    "109.14775085449219",
                    "109.05046844482422",
                    "109.15467071533203",
                    "109.12223815917969",
                    "109.10308837890625",
                    "109.48075866699219",
                    "109.79275512695312",
                    "109.45431518554688",
                    "109.29329681396484",
                    "109.26354217529297",
                    "109.06034851074219",
                    "109.04883575439453",
                    "108.40438842773438",
                    "108.25631713867188",
                    "108.47732543945312",
                    "108.5356674194336",
                    "108.54523468017578",
                    "108.16226196289062",
                    "108.01374816894531",
                    "107.96439361572266",
                    "108.59841918945312",
                    "108.66703796386719",
                    "108.23226928710938",
                    "108.28012084960938",
                    "108.57874298095703",
                    "108.1978759765625",
                    "109.29931640625",
                    "110.04570770263672",
                    "110.43517303466797",
                    "110.46007537841797",
                    "110.5561752319336",
                    "110.60175323486328",
                    "110.82598876953125",
                    "111.62006378173828",
                    "111.09036254882812",
                    "111.30819702148438",
                    "111.373291015625",
                    "111.60984802246094",
                    "111.62543487548828",
                    "111.4856185913086",
                    "111.78169250488281",
                    "111.81543731689453",
                    "112.0406265258789",
                    "112.05807495117188",
                    "112.12079620361328",
                    "112.10579681396484",
                    "112.53006744384766",
                    "112.812744140625",
                    "112.81009674072266",
                    "113.3535385131836",
                    "113.45309448242188",
                    "113.4289321899414",
                    "113.40821075439453",
                    "113.42759704589844",
                    "113.8273696899414",
                    "114.24425506591797",
                    "114.21770477294922",
                    "114.1943588256836",
                    "114.1684799194336",
                    "113.86038970947266",
                    "113.82034301757812",
                    "114.58655548095703",
                    "114.50733947753906",
                    "114.3350830078125",
                    "114.3384780883789",
                    "113.75743103027344",
                    "114.01094055175781",
                    "113.85874938964844",
                    "113.89453125",
                    "113.68414306640625",
                    "113.62745666503906",
                    "113.58773040771484",
                    "113.59453582763672",
                    "113.50528717041016",
                    "113.50639343261719",
                    "113.96165466308594",
                    "114.21331024169922",
                    "114.06380462646484",
                    "114.06715393066406",
                    "114.3234634399414",
                    "114.16009521484375",
                    "113.94795989990234",
                    "114.03315734863281",
                    "114.04373168945312",
                    "113.85340881347656",
                    "113.83856201171875",
                    "113.8500747680664",
                    "114.05702209472656",
                    "114.31290435791016",
                    "114.11112213134766",
                    "114.10076904296875",
                    "114.20171356201172",
                    "114.06999969482422",
                    "114.10161590576172",
                    "114.14958953857422",
                    "114.03076171875",
                    "114.46531677246094",
                    "115.64114379882812",
                    "115.3586654663086",
                    "115.29818725585938",
                    "115.01641082763672",
                    "115.0342025756836",
                    "115.15290069580078",
                    "115.33531188964844",
                    "115.27425384521484",
                    "115.2251968383789",
                    "115.16413116455078",
                    "115.1749267578125",
                    "115.25056457519531",
                    "115.47853088378906",
                    "116.4526138305664",
                    "115.95143127441406",
                    "115.75618743896484",
                    "115.78627014160156",
                    "116.0344009399414",
                    "116.1069564819336",
                    "116.24121856689453",
                    "116.13190460205078",
                    "116.30216979980469",
                    "116.55298614501953",
                    "116.31229400634766",
                    "116.3839340209961",
                    "116.38636779785156"
                ],
                "description": "pred_data",
                "index": 0,
                "layout": "IPY_MODEL_bd96a714a17d47eeaf71814a2fd91a6c",
                "style": "IPY_MODEL_7aaf3674924048eda4bd42c73671778a"
            }
        },
        "b4eb1cc4c8394dbd9880d88ed78f5c6a": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "f49f782c0189483bb087744ef941c746": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "efc08d05eb4f4d059205a19a900455a7": {
            "model_name": "DropdownModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_options_labels": [
                    "-4",
                    "-3",
                    "-2",
                    "-1",
                    "0",
                    "1",
                    "2",
                    "3",
                    "4"
                ],
                "description": "shift_list",
                "index": 0,
                "layout": "IPY_MODEL_b4eb1cc4c8394dbd9880d88ed78f5c6a",
                "style": "IPY_MODEL_f49f782c0189483bb087744ef941c746"
            }
        },
        "80f939fb6b434fef96b00dcd17431ccd": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "7fa9cd652378460bb319927b95b41f45": {
            "model_name": "OutputModel",
            "model_module": "@jupyter-widgets/output",
            "model_module_version": "1.0.0",
            "state": {
                "layout": "IPY_MODEL_80f939fb6b434fef96b00dcd17431ccd",
                "outputs": [
                    {
                        "output_type": "stream",
                        "text": "115.85887908935547\n",
                        "name": "stdout"
                    }
                ]
            }
        },
        "8e2150f5510f4a65abcb52873300b4dc": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "efd8cc7878e5450f8d62d5db2e2495fb": {
            "model_name": "VBoxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_dom_classes": [
                    "widget-interact"
                ],
                "children": [
                    "IPY_MODEL_cc57b2dd2810435da8b66a17ade7670f",
                    "IPY_MODEL_8dd94c5872df48c5b877bece774ff48e",
                    "IPY_MODEL_ff29c864c84146e7933ed0b2a93a8948",
                    "IPY_MODEL_911231da859f4edaa1757c4aa2baa500"
                ],
                "layout": "IPY_MODEL_8e2150f5510f4a65abcb52873300b4dc"
            }
        },
        "0f784c31c71143cb86770b5d431990c3": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "ced25d1427e9402fbcfa1d35e87c2b77": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "cc57b2dd2810435da8b66a17ade7670f": {
            "model_name": "DropdownModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_options_labels": [
                    "115.98",
                    "116.19999999999999",
                    "116.47999999999999",
                    "116.47999999999999",
                    "116.77",
                    "116.72",
                    "116.73",
                    "116.63",
                    "116.54",
                    "116.28999999999999",
                    "116.13",
                    "116.13",
                    "116.36",
                    "116.65",
                    "116.55",
                    "117.12000000000002",
                    "117.08000000000001",
                    "117.19",
                    "117.19",
                    "117.1",
                    "117.1",
                    "116.86",
                    "116.11000000000001",
                    "116.42",
                    "115.68",
                    "115.67",
                    "115.94",
                    "115.92000000000002",
                    "115.89",
                    "116.45",
                    "116.38",
                    "116.55",
                    "116.83",
                    "116.89000000000001",
                    "116.89000000000001",
                    "116.79000000000002",
                    "114.93",
                    "115.57",
                    "115.94",
                    "115.94",
                    "115.84",
                    "116.0",
                    "116.38999999999999",
                    "115.16",
                    "114.98",
                    "114.66",
                    "114.77000000000001",
                    "114.77000000000001",
                    "113.87",
                    "113.78",
                    "114.11",
                    "114.3",
                    "114.51",
                    "114.31999999999998",
                    "114.49",
                    "114.59",
                    "114.7",
                    "113.01999999999998",
                    "112.48",
                    "112.48",
                    "113.23",
                    "113.58",
                    "113.88",
                    "113.76",
                    "113.4",
                    "112.74000000000001",
                    "112.16",
                    "112.99",
                    "113.45",
                    "113.45",
                    "114.38",
                    "112.07",
                    "112.07",
                    "111.54",
                    "111.16",
                    "110.96",
                    "111.49",
                    "111.12999999999998",
                    "111.58000000000001",
                    "111.58000000000001",
                    "112.5",
                    "112.5",
                    "112.9",
                    "112.92000000000002",
                    "112.68000000000002",
                    "111.52",
                    "112.27",
                    "112.27",
                    "112.27",
                    "112.27",
                    "112.27",
                    "112.88000000000001",
                    "112.92000000000002",
                    "113.54",
                    "113.74",
                    "113.86",
                    "113.66000000000001",
                    "113.72",
                    "113.27",
                    "112.22",
                    "112.94",
                    "113.37",
                    "113.37",
                    "113.18",
                    "113.12",
                    "112.73000000000002",
                    "111.98",
                    "112.37999999999998",
                    "112.31",
                    "112.27",
                    "112.2",
                    "112.06",
                    "111.88",
                    "112.53",
                    "112.53",
                    "112.53",
                    "113.08",
                    "113.08",
                    "113.24",
                    "113.19",
                    "112.64000000000001",
                    "112.71",
                    "112.7",
                    "112.4",
                    "112.34",
                    "112.5",
                    "112.5",
                    "111.37",
                    "110.89000000000001",
                    "110.96",
                    "110.78",
                    "110.64",
                    "110.56000000000002",
                    "110.92",
                    "111.54",
                    "111.25999999999999",
                    "111.25999999999999",
                    "111.30999999999999",
                    "111.31999999999998",
                    "111.31999999999998",
                    "111.41",
                    "111.41",
                    "111.41",
                    "111.41",
                    "111.41",
                    "111.41",
                    "111.41",
                    "111.41",
                    "111.38",
                    "111.11999999999999",
                    "110.83",
                    "111.02999999999999",
                    "111.02999999999999",
                    "110.6",
                    "110.29999999999998",
                    "109.09999999999998",
                    "109.57",
                    "108.99",
                    "108.97",
                    "109.12",
                    "109.04999999999998",
                    "109.03999999999999",
                    "109.52",
                    "109.81",
                    "109.34",
                    "109.22999999999999",
                    "109.22999999999999",
                    "108.98",
                    "109.02",
                    "108.18",
                    "108.18",
                    "108.51",
                    "108.51",
                    "108.51",
                    "108.0",
                    "107.93000000000002",
                    "107.91",
                    "108.77000000000001",
                    "108.65",
                    "108.07",
                    "108.28",
                    "108.65",
                    "108.05",
                    "109.60000000000001",
                    "110.18",
                    "110.5",
                    "110.48",
                    "110.6",
                    "110.64",
                    "110.89000000000001",
                    "111.73",
                    "111.06",
                    "111.38",
                    "111.41",
                    "111.66",
                    "111.65",
                    "111.5",
                    "111.83",
                    "111.83",
                    "112.07",
                    "112.07",
                    "112.13999999999999",
                    "112.12",
                    "112.56",
                    "112.82",
                    "112.82",
                    "113.37",
                    "113.46",
                    "113.46",
                    "113.45",
                    "113.47",
                    "113.85000000000001",
                    "114.24",
                    "114.24",
                    "114.24",
                    "114.21999999999998",
                    "113.93000000000002",
                    "113.88",
                    "114.57",
                    "114.51",
                    "114.38",
                    "114.38",
                    "113.83",
                    "114.05",
                    "113.88",
                    "113.91",
                    "113.70000000000002",
                    "113.64",
                    "113.59",
                    "113.59",
                    "113.5",
                    "113.5",
                    "113.93000000000002",
                    "114.16999999999999",
                    "114.06",
                    "114.07999999999998",
                    "114.31999999999998",
                    "114.18",
                    "113.99000000000001",
                    "114.06",
                    "114.06",
                    "113.88",
                    "113.86",
                    "113.86",
                    "114.05",
                    "114.29",
                    "114.11999999999999",
                    "114.11999999999999",
                    "114.21",
                    "114.09",
                    "114.11999999999999",
                    "114.16",
                    "114.05",
                    "114.44999999999999",
                    "115.5",
                    "115.35",
                    "115.35",
                    "115.11",
                    "115.11",
                    "115.2",
                    "115.36",
                    "115.32",
                    "115.27999999999999",
                    "115.22",
                    "115.22",
                    "115.27999999999999",
                    "115.48",
                    "116.32",
                    "116.01000000000002",
                    "115.86",
                    "115.86",
                    "116.06000000000002",
                    "116.14",
                    "116.27",
                    "116.19999999999999",
                    "116.33999999999999",
                    "116.56",
                    "116.4",
                    "116.45",
                    "116.45",
                    "116.45"
                ],
                "description": "true_data",
                "index": 0,
                "layout": "IPY_MODEL_0f784c31c71143cb86770b5d431990c3",
                "style": "IPY_MODEL_ced25d1427e9402fbcfa1d35e87c2b77"
            }
        },
        "851500381c4043d7bf080158a79914a7": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "24ce8b416788433fb3a8cb1238217367": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "8dd94c5872df48c5b877bece774ff48e": {
            "model_name": "DropdownModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_options_labels": [
                    "115.85887908935547",
                    "115.96217346191406",
                    "116.21099853515625",
                    "116.51026916503906",
                    "116.44573211669922",
                    "116.77699279785156",
                    "116.65660095214844",
                    "116.65394592285156",
                    "116.52963256835938",
                    "116.43795013427734",
                    "116.16097259521484",
                    "116.02178192138672",
                    "116.0703125",
                    "116.36695861816406",
                    "116.69207000732422",
                    "116.50367736816406",
                    "117.20589447021484",
                    "117.04352569580078",
                    "117.14323425292969",
                    "117.11446380615234",
                    "116.98936462402344",
                    "117.00788116455078",
                    "116.7171859741211",
                    "115.85929870605469",
                    "116.379638671875",
                    "115.51661682128906",
                    "115.6009521484375",
                    "115.97655487060547",
                    "115.93025970458984",
                    "115.880859375",
                    "116.55480194091797",
                    "116.37938690185547",
                    "116.5513916015625",
                    "116.86123657226562",
                    "116.86395263671875",
                    "116.82482147216797",
                    "116.69039154052734",
                    "114.53022766113281",
                    "115.49700927734375",
                    "116.01007080078125",
                    "115.95280456542969",
                    "115.81319427490234",
                    "116.0107421875",
                    "116.45984649658203",
                    "114.94313049316406",
                    "114.85895538330078",
                    "114.59385681152344",
                    "114.76580047607422",
                    "114.7887191772461",
                    "113.8150863647461",
                    "113.7582778930664",
                    "114.15794372558594",
                    "114.37068939208984",
                    "114.57695770263672",
                    "114.3397216796875",
                    "114.51215362548828",
                    "114.6137466430664",
                    "114.71529388427734",
                    "112.92506408691406",
                    "112.41398620605469",
                    "112.46980285644531",
                    "113.26464080810547",
                    "113.66800689697266",
                    "113.95883178710938",
                    "113.79788970947266",
                    "113.39488983154297",
                    "112.7228012084961",
                    "112.15782165527344",
                    "112.9742202758789",
                    "113.51158142089844",
                    "113.49686431884766",
                    "114.4570083618164",
                    "112.06981658935547",
                    "111.99729919433594",
                    "111.56987762451172",
                    "111.21161651611328",
                    "111.02033996582031",
                    "111.49645233154297",
                    "111.23039245605469",
                    "111.60277557373047",
                    "111.64196014404297",
                    "112.50764465332031",
                    "112.55686950683594",
                    "112.91718292236328",
                    "112.9327163696289",
                    "112.66971588134766",
                    "111.54632568359375",
                    "112.18833923339844",
                    "112.27843475341797",
                    "112.27652740478516",
                    "112.2762451171875",
                    "112.2769775390625",
                    "112.87650299072266",
                    "112.9425048828125",
                    "113.55367279052734",
                    "113.75907135009766",
                    "113.85009765625",
                    "113.61683654785156",
                    "113.67030334472656",
                    "113.21281433105469",
                    "112.1783447265625",
                    "112.87167358398438",
                    "113.39126586914062",
                    "113.39349365234375",
                    "113.1799545288086",
                    "113.11089324951172",
                    "112.7244873046875",
                    "111.99266815185547",
                    "112.3542251586914",
                    "112.34068298339844",
                    "112.29927062988281",
                    "112.23140716552734",
                    "112.09429931640625",
                    "111.91594696044922",
                    "112.53155517578125",
                    "112.57424926757812",
                    "112.55375671386719",
                    "113.09176635742188",
                    "113.10319519042969",
                    "113.23992156982422",
                    "113.18119812011719",
                    "112.61956024169922",
                    "112.67369842529297",
                    "112.68890380859375",
                    "112.40240478515625",
                    "112.33646392822266",
                    "112.50235748291016",
                    "112.51812744140625",
                    "111.44834899902344",
                    "110.94120025634766",
                    "110.978759765625",
                    "110.8450698852539",
                    "110.71104431152344",
                    "110.62862396240234",
                    "110.93680572509766",
                    "111.54008483886719",
                    "111.33705139160156",
                    "111.29434967041016",
                    "111.33177185058594",
                    "111.34075164794922",
                    "111.33738708496094",
                    "111.41676330566406",
                    "111.42343139648438",
                    "111.42108917236328",
                    "111.41981506347656",
                    "111.41938018798828",
                    "111.41938018798828",
                    "111.41961669921875",
                    "111.41996765136719",
                    "111.39289093017578",
                    "111.15476989746094",
                    "110.87242126464844",
                    "111.02383422851562",
                    "111.05160522460938",
                    "110.67377471923828",
                    "110.36719512939453",
                    "109.34368133544922",
                    "109.55009460449219",
                    "109.14775085449219",
                    "109.05046844482422",
                    "109.15467071533203",
                    "109.12223815917969",
                    "109.10308837890625",
                    "109.48075866699219",
                    "109.79275512695312",
                    "109.45431518554688",
                    "109.29329681396484",
                    "109.26354217529297",
                    "109.06034851074219",
                    "109.04883575439453",
                    "108.40438842773438",
                    "108.25631713867188",
                    "108.47732543945312",
                    "108.5356674194336",
                    "108.54523468017578",
                    "108.16226196289062",
                    "108.01374816894531",
                    "107.96439361572266",
                    "108.59841918945312",
                    "108.66703796386719",
                    "108.23226928710938",
                    "108.28012084960938",
                    "108.57874298095703",
                    "108.1978759765625",
                    "109.29931640625",
                    "110.04570770263672",
                    "110.43517303466797",
                    "110.46007537841797",
                    "110.5561752319336",
                    "110.60175323486328",
                    "110.82598876953125",
                    "111.62006378173828",
                    "111.09036254882812",
                    "111.30819702148438",
                    "111.373291015625",
                    "111.60984802246094",
                    "111.62543487548828",
                    "111.4856185913086",
                    "111.78169250488281",
                    "111.81543731689453",
                    "112.0406265258789",
                    "112.05807495117188",
                    "112.12079620361328",
                    "112.10579681396484",
                    "112.53006744384766",
                    "112.812744140625",
                    "112.81009674072266",
                    "113.3535385131836",
                    "113.45309448242188",
                    "113.4289321899414",
                    "113.40821075439453",
                    "113.42759704589844",
                    "113.8273696899414",
                    "114.24425506591797",
                    "114.21770477294922",
                    "114.1943588256836",
                    "114.1684799194336",
                    "113.86038970947266",
                    "113.82034301757812",
                    "114.58655548095703",
                    "114.50733947753906",
                    "114.3350830078125",
                    "114.3384780883789",
                    "113.75743103027344",
                    "114.01094055175781",
                    "113.85874938964844",
                    "113.89453125",
                    "113.68414306640625",
                    "113.62745666503906",
                    "113.58773040771484",
                    "113.59453582763672",
                    "113.50528717041016",
                    "113.50639343261719",
                    "113.96165466308594",
                    "114.21331024169922",
                    "114.06380462646484",
                    "114.06715393066406",
                    "114.3234634399414",
                    "114.16009521484375",
                    "113.94795989990234",
                    "114.03315734863281",
                    "114.04373168945312",
                    "113.85340881347656",
                    "113.83856201171875",
                    "113.8500747680664",
                    "114.05702209472656",
                    "114.31290435791016",
                    "114.11112213134766",
                    "114.10076904296875",
                    "114.20171356201172",
                    "114.06999969482422",
                    "114.10161590576172",
                    "114.14958953857422",
                    "114.03076171875",
                    "114.46531677246094",
                    "115.64114379882812",
                    "115.3586654663086",
                    "115.29818725585938",
                    "115.01641082763672",
                    "115.0342025756836",
                    "115.15290069580078",
                    "115.33531188964844",
                    "115.27425384521484",
                    "115.2251968383789",
                    "115.16413116455078",
                    "115.1749267578125",
                    "115.25056457519531",
                    "115.47853088378906",
                    "116.4526138305664",
                    "115.95143127441406",
                    "115.75618743896484",
                    "115.78627014160156",
                    "116.0344009399414",
                    "116.1069564819336",
                    "116.24121856689453",
                    "116.13190460205078",
                    "116.30216979980469",
                    "116.55298614501953",
                    "116.31229400634766",
                    "116.3839340209961",
                    "116.38636779785156"
                ],
                "description": "pred_data",
                "index": 0,
                "layout": "IPY_MODEL_851500381c4043d7bf080158a79914a7",
                "style": "IPY_MODEL_24ce8b416788433fb3a8cb1238217367"
            }
        },
        "2aed4fe5b1704ec88c7251620b97dec0": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "81c01e2f905a49e68163647149e586bb": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "ff29c864c84146e7933ed0b2a93a8948": {
            "model_name": "DropdownModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_options_labels": [
                    "-4",
                    "-3",
                    "-2",
                    "-1",
                    "0",
                    "1",
                    "2",
                    "3",
                    "4"
                ],
                "description": "shift_list",
                "index": 0,
                "layout": "IPY_MODEL_2aed4fe5b1704ec88c7251620b97dec0",
                "style": "IPY_MODEL_81c01e2f905a49e68163647149e586bb"
            }
        },
        "d3adf1b854f6480ba175e9bd121ce2e5": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "911231da859f4edaa1757c4aa2baa500": {
            "model_name": "OutputModel",
            "model_module": "@jupyter-widgets/output",
            "model_module_version": "1.0.0",
            "state": {
                "layout": "IPY_MODEL_d3adf1b854f6480ba175e9bd121ce2e5",
                "outputs": [
                    {
                        "output_type": "error",
                        "ename": "TypeError",
                        "evalue": "'numpy.int32' object is not iterable",
                        "traceback": [
                            "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
                            "\u001b[1;31mTypeError\u001b[0m                                 Traceback (most recent call last)",
                            "\u001b[1;32m~\\Anaconda3\\envs\\learn-env-ext\\lib\\site-packages\\ipywidgets\\widgets\\interaction.py\u001b[0m in \u001b[0;36mupdate\u001b[1;34m(self, *args)\u001b[0m\n\u001b[0;32m    249\u001b[0m                     \u001b[0mvalue\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mwidget\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mget_interact_value\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    250\u001b[0m                     \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[1;33m[\u001b[0m\u001b[0mwidget\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0m_kwarg\u001b[0m\u001b[1;33m]\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mvalue\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m--> 251\u001b[1;33m                 \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mresult\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mf\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m**\u001b[0m\u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m    252\u001b[0m                 \u001b[0mshow_inline_matplotlib_plots\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    253\u001b[0m                 \u001b[1;32mif\u001b[0m \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mauto_display\u001b[0m \u001b[1;32mand\u001b[0m \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mresult\u001b[0m \u001b[1;32mis\u001b[0m \u001b[1;32mnot\u001b[0m \u001b[1;32mNone\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
                            "\u001b[1;32m<ipython-input-302-c8fdb4fbda01>\u001b[0m in \u001b[0;36mplot_shift_list\u001b[1;34m(true_data, pred_data, shift_list)\u001b[0m\n\u001b[0;32m     15\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m     16\u001b[0m \u001b[1;31m#     return\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m---> 17\u001b[1;33m     \u001b[1;32mfor\u001b[0m \u001b[0mshift\u001b[0m \u001b[1;32min\u001b[0m \u001b[0mshift_list\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m     18\u001b[0m         \u001b[0mdf_data\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mpd\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mconcat\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m[\u001b[0m\u001b[0mtrue_data\u001b[0m\u001b[1;33m,\u001b[0m\u001b[0mpred_data\u001b[0m\u001b[1;33m]\u001b[0m\u001b[1;33m,\u001b[0m\u001b[0maxis\u001b[0m\u001b[1;33m=\u001b[0m\u001b[1;36m1\u001b[0m\u001b[1;33m,\u001b[0m\u001b[0mnames\u001b[0m\u001b[1;33m=\u001b[0m\u001b[1;33m[\u001b[0m\u001b[1;34m'true'\u001b[0m\u001b[1;33m,\u001b[0m\u001b[1;34m'pred'\u001b[0m\u001b[1;33m]\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m     19\u001b[0m         \u001b[0mdf_data\u001b[0m\u001b[1;33m[\u001b[0m\u001b[1;34m'pred'\u001b[0m\u001b[1;33m]\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mshift\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mshift\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
                            "\u001b[1;31mTypeError\u001b[0m: 'numpy.int32' object is not iterable"
                        ]
                    }
                ]
            }
        },
        "070bb548a7f045049cb5dfebc2e3748e": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "9a05aa79d854484ead6a3854261ab200": {
            "model_name": "VBoxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_dom_classes": [
                    "widget-interact"
                ],
                "layout": "IPY_MODEL_070bb548a7f045049cb5dfebc2e3748e"
            }
        },
        "b0962bbebcad41f7af01cd62a504bf10": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "71342b9557174b009839c1a25d68a0cc": {
            "model_name": "VBoxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_dom_classes": [
                    "widget-interact"
                ],
                "children": [
                    "IPY_MODEL_7c1bf6dbce834eb38d63b31fbceca02e",
                    "IPY_MODEL_2c7aa6bb62e444d7a517ff726530234a"
                ],
                "layout": "IPY_MODEL_b0962bbebcad41f7af01cd62a504bf10"
            }
        },
        "b9d6198f3d7c49749ed5f680110e9c73": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "0e09d4c805354d02a681272aaae843c0": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "7c1bf6dbce834eb38d63b31fbceca02e": {
            "model_name": "DropdownModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_options_labels": [
                    "-4",
                    "-3",
                    "-2",
                    "-1",
                    "0",
                    "1",
                    "2",
                    "3",
                    "4"
                ],
                "description": "x",
                "index": 0,
                "layout": "IPY_MODEL_b9d6198f3d7c49749ed5f680110e9c73",
                "style": "IPY_MODEL_0e09d4c805354d02a681272aaae843c0"
            }
        },
        "1626cf1336d4426fb073b96e1b78d041": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "2c7aa6bb62e444d7a517ff726530234a": {
            "model_name": "OutputModel",
            "model_module": "@jupyter-widgets/output",
            "model_module_version": "1.0.0",
            "state": {
                "layout": "IPY_MODEL_1626cf1336d4426fb073b96e1b78d041",
                "outputs": [
                    {
                        "output_type": "display_data",
                        "data": {
                            "text/plain": "-4"
                        },
                        "metadata": {}
                    }
                ]
            }
        },
        "88eef20fc47e4b7f9c3d1b5c968e97d5": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "2b1e15bf0d134d94ac78dc2d40152b77": {
            "model_name": "VBoxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_dom_classes": [
                    "widget-interact"
                ],
                "children": [
                    "IPY_MODEL_85f590059d73491a9dd5b111c939ce1d",
                    "IPY_MODEL_ad090e9af0e44e2b80e6bca5f7b5db1d"
                ],
                "layout": "IPY_MODEL_88eef20fc47e4b7f9c3d1b5c968e97d5"
            }
        },
        "f69549a416b94d7c8b426dc0425345a3": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "cd5b88f86f9c45b8a2d73c5862b429a6": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "85f590059d73491a9dd5b111c939ce1d": {
            "model_name": "DropdownModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_options_labels": [
                    "-4",
                    "-3",
                    "-2",
                    "-1",
                    "0",
                    "1",
                    "2",
                    "3",
                    "4"
                ],
                "description": "x",
                "index": 0,
                "layout": "IPY_MODEL_f69549a416b94d7c8b426dc0425345a3",
                "style": "IPY_MODEL_cd5b88f86f9c45b8a2d73c5862b429a6"
            }
        },
        "107d976d4b8843299e743b641103064d": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "ad090e9af0e44e2b80e6bca5f7b5db1d": {
            "model_name": "OutputModel",
            "model_module": "@jupyter-widgets/output",
            "model_module_version": "1.0.0",
            "state": {
                "layout": "IPY_MODEL_107d976d4b8843299e743b641103064d",
                "outputs": [
                    {
                        "output_type": "display_data",
                        "data": {
                            "text/plain": "-4"
                        },
                        "metadata": {}
                    }
                ]
            }
        },
        "9b5d721831144de092390dc0f97efc15": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "08a0f943392c4b6e8a5cc8862562628c": {
            "model_name": "VBoxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_dom_classes": [
                    "widget-interact"
                ],
                "children": [
                    "IPY_MODEL_760cad81846c45a590a336e4607d57f0",
                    "IPY_MODEL_c42ade6a70774b8abbeb6fe8ae8fd1fe"
                ],
                "layout": "IPY_MODEL_9b5d721831144de092390dc0f97efc15"
            }
        },
        "f3910ed2c48643469bc3d3c2f213899e": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "3450729c83d7425e9248fb508e9d04b9": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "760cad81846c45a590a336e4607d57f0": {
            "model_name": "DropdownModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_options_labels": [
                    "-4",
                    "-3",
                    "-2",
                    "-1",
                    "0",
                    "1",
                    "2",
                    "3",
                    "4"
                ],
                "description": "x",
                "index": 0,
                "layout": "IPY_MODEL_f3910ed2c48643469bc3d3c2f213899e",
                "style": "IPY_MODEL_3450729c83d7425e9248fb508e9d04b9"
            }
        },
        "9eb85c3adff34d19a8f26ac55446bc40": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "c42ade6a70774b8abbeb6fe8ae8fd1fe": {
            "model_name": "OutputModel",
            "model_module": "@jupyter-widgets/output",
            "model_module_version": "1.0.0",
            "state": {
                "layout": "IPY_MODEL_9eb85c3adff34d19a8f26ac55446bc40",
                "outputs": [
                    {
                        "output_type": "display_data",
                        "data": {
                            "text/plain": "-4"
                        },
                        "metadata": {}
                    }
                ]
            }
        },
        "bccc1114d8c5408897568220ab8595d8": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "2de14e88d1054493851b4f4cdc52f6b9": {
            "model_name": "VBoxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_dom_classes": [
                    "widget-interact"
                ],
                "children": [
                    "IPY_MODEL_dfb7ba5439f446b887185df30577d67b",
                    "IPY_MODEL_d24341be61dd4bc296a28204c7022dd9"
                ],
                "layout": "IPY_MODEL_bccc1114d8c5408897568220ab8595d8"
            }
        },
        "6a4632c889a0487fb60fedbb37c9a2ce": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "0c09eb8d97304d54b2ab99d99727721b": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "dfb7ba5439f446b887185df30577d67b": {
            "model_name": "DropdownModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_options_labels": [
                    "-4",
                    "-3",
                    "-2",
                    "-1",
                    "0",
                    "1",
                    "2",
                    "3",
                    "4"
                ],
                "description": "x",
                "index": 0,
                "layout": "IPY_MODEL_6a4632c889a0487fb60fedbb37c9a2ce",
                "style": "IPY_MODEL_0c09eb8d97304d54b2ab99d99727721b"
            }
        },
        "95441af6de9140938228e1690be6d2ee": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "d24341be61dd4bc296a28204c7022dd9": {
            "model_name": "OutputModel",
            "model_module": "@jupyter-widgets/output",
            "model_module_version": "1.0.0",
            "state": {
                "layout": "IPY_MODEL_95441af6de9140938228e1690be6d2ee",
                "outputs": [
                    {
                        "output_type": "display_data",
                        "data": {
                            "text/plain": "-4"
                        },
                        "metadata": {}
                    }
                ]
            }
        },
        "a0052ba0e45b47dd86e5cbfdbc322d5b": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "a95472e3b54f48c2b137284c666add68": {
            "model_name": "VBoxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_dom_classes": [
                    "widget-interact"
                ],
                "children": [
                    "IPY_MODEL_ebcb8c684f684629ae32ebbbba50e8df",
                    "IPY_MODEL_cd2ee757ec9d4628acbc24282b3e2488"
                ],
                "layout": "IPY_MODEL_a0052ba0e45b47dd86e5cbfdbc322d5b"
            }
        },
        "642cfd9cbdb04ecebb61b105df37a389": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "a4d6d79305f640d1a927801a7d05ce3c": {
            "model_name": "SliderStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "ebcb8c684f684629ae32ebbbba50e8df": {
            "model_name": "IntSliderModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "shift_list",
                "layout": "IPY_MODEL_642cfd9cbdb04ecebb61b105df37a389",
                "max": 12,
                "min": -4,
                "style": "IPY_MODEL_a4d6d79305f640d1a927801a7d05ce3c",
                "value": 6
            }
        },
        "84273a03828c4741bf49950b34b3cc18": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "cd2ee757ec9d4628acbc24282b3e2488": {
            "model_name": "OutputModel",
            "model_module": "@jupyter-widgets/output",
            "model_module_version": "1.0.0",
            "state": {
                "layout": "IPY_MODEL_84273a03828c4741bf49950b34b3cc18",
                "outputs": [
                    {
                        "output_type": "error",
                        "ename": "TypeError",
                        "evalue": "'int' object is not iterable",
                        "traceback": [
                            "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
                            "\u001b[1;31mTypeError\u001b[0m                                 Traceback (most recent call last)",
                            "\u001b[1;32m~\\Anaconda3\\envs\\learn-env-ext\\lib\\site-packages\\ipywidgets\\widgets\\interaction.py\u001b[0m in \u001b[0;36mupdate\u001b[1;34m(self, *args)\u001b[0m\n\u001b[0;32m    249\u001b[0m                     \u001b[0mvalue\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mwidget\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mget_interact_value\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    250\u001b[0m                     \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[1;33m[\u001b[0m\u001b[0mwidget\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0m_kwarg\u001b[0m\u001b[1;33m]\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mvalue\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m--> 251\u001b[1;33m                 \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mresult\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mf\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m**\u001b[0m\u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m    252\u001b[0m                 \u001b[0mshow_inline_matplotlib_plots\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    253\u001b[0m                 \u001b[1;32mif\u001b[0m \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mauto_display\u001b[0m \u001b[1;32mand\u001b[0m \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mresult\u001b[0m \u001b[1;32mis\u001b[0m \u001b[1;32mnot\u001b[0m \u001b[1;32mNone\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
                            "\u001b[1;32m<ipython-input-311-158bf1940a60>\u001b[0m in \u001b[0;36mplot_shift_list\u001b[1;34m(shift_list)\u001b[0m\n\u001b[0;32m     14\u001b[0m \u001b[1;31m#     print(pred_data)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m     15\u001b[0m \u001b[1;31m#     return\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m---> 16\u001b[1;33m     \u001b[1;32mfor\u001b[0m \u001b[0mshift\u001b[0m \u001b[1;32min\u001b[0m \u001b[0mshift_list\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m     17\u001b[0m         \u001b[0mdf_data\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mpd\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mconcat\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m[\u001b[0m\u001b[0mtrue_data\u001b[0m\u001b[1;33m,\u001b[0m\u001b[0mpred_data\u001b[0m\u001b[1;33m]\u001b[0m\u001b[1;33m,\u001b[0m\u001b[0maxis\u001b[0m\u001b[1;33m=\u001b[0m\u001b[1;36m1\u001b[0m\u001b[1;33m,\u001b[0m\u001b[0mnames\u001b[0m\u001b[1;33m=\u001b[0m\u001b[1;33m[\u001b[0m\u001b[1;34m'true'\u001b[0m\u001b[1;33m,\u001b[0m\u001b[1;34m'pred'\u001b[0m\u001b[1;33m]\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m     18\u001b[0m         \u001b[0mdf_data\u001b[0m\u001b[1;33m[\u001b[0m\u001b[1;34m'pred'\u001b[0m\u001b[1;33m]\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mshift\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mshift\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
                            "\u001b[1;31mTypeError\u001b[0m: 'int' object is not iterable"
                        ]
                    }
                ]
            }
        },
        "6e6dfb5eb49d418f9489f9c9f520f278": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "10cbd25efc394f81a885b6485a0fea9b": {
            "model_name": "VBoxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_dom_classes": [
                    "widget-interact"
                ],
                "children": [
                    "IPY_MODEL_cd6884a43bfa4f388dd1f8a703bfb5c4",
                    "IPY_MODEL_f015b014ca194a9888a1214ac104895b"
                ],
                "layout": "IPY_MODEL_6e6dfb5eb49d418f9489f9c9f520f278"
            }
        },
        "d357ca57107d48ee9d8c7adb3fbcf866": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "e79afa7fd195464a98f295b433658466": {
            "model_name": "SliderStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "cd6884a43bfa4f388dd1f8a703bfb5c4": {
            "model_name": "IntSliderModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "shift_list",
                "layout": "IPY_MODEL_d357ca57107d48ee9d8c7adb3fbcf866",
                "max": 12,
                "min": -4,
                "style": "IPY_MODEL_e79afa7fd195464a98f295b433658466",
                "value": 4
            }
        },
        "d6bbdf17978d43d09f6c80f5a92cdb3d": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "f015b014ca194a9888a1214ac104895b": {
            "model_name": "OutputModel",
            "model_module": "@jupyter-widgets/output",
            "model_module_version": "1.0.0",
            "state": {
                "layout": "IPY_MODEL_d6bbdf17978d43d09f6c80f5a92cdb3d",
                "outputs": [
                    {
                        "output_type": "error",
                        "ename": "TypeError",
                        "evalue": "'int' object is not iterable",
                        "traceback": [
                            "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
                            "\u001b[1;31mTypeError\u001b[0m                                 Traceback (most recent call last)",
                            "\u001b[1;32m~\\Anaconda3\\envs\\learn-env-ext\\lib\\site-packages\\ipywidgets\\widgets\\interaction.py\u001b[0m in \u001b[0;36mupdate\u001b[1;34m(self, *args)\u001b[0m\n\u001b[0;32m    249\u001b[0m                     \u001b[0mvalue\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mwidget\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mget_interact_value\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    250\u001b[0m                     \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[1;33m[\u001b[0m\u001b[0mwidget\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0m_kwarg\u001b[0m\u001b[1;33m]\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mvalue\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m--> 251\u001b[1;33m                 \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mresult\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mf\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m**\u001b[0m\u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m    252\u001b[0m                 \u001b[0mshow_inline_matplotlib_plots\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    253\u001b[0m                 \u001b[1;32mif\u001b[0m \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mauto_display\u001b[0m \u001b[1;32mand\u001b[0m \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mresult\u001b[0m \u001b[1;32mis\u001b[0m \u001b[1;32mnot\u001b[0m \u001b[1;32mNone\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
                            "\u001b[1;32m<ipython-input-312-dc88801aa76b>\u001b[0m in \u001b[0;36mplot_shift_list\u001b[1;34m(shift_list)\u001b[0m\n\u001b[0;32m     16\u001b[0m \u001b[1;31m#     print(pred_data)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m     17\u001b[0m \u001b[1;31m#     return\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m---> 18\u001b[1;33m     \u001b[1;32mfor\u001b[0m \u001b[0mshift\u001b[0m \u001b[1;32min\u001b[0m \u001b[0mshift_list\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m     19\u001b[0m         \u001b[0mdf_data\u001b[0m\u001b[1;33m[\u001b[0m\u001b[1;34m'true'\u001b[0m\u001b[1;33m]\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mplot\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m     20\u001b[0m         \u001b[0mdf_data\u001b[0m\u001b[1;33m[\u001b[0m\u001b[1;34m'pred'\u001b[0m\u001b[1;33m]\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mshift\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mshift\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mplot\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;31m#shift(shift)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
                            "\u001b[1;31mTypeError\u001b[0m: 'int' object is not iterable"
                        ]
                    }
                ]
            }
        },
        "b3530e55d9d74a6194262d7f499dd11d": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "7f335d743c3d481c983d68c570b7e44c": {
            "model_name": "VBoxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_dom_classes": [
                    "widget-interact"
                ],
                "children": [
                    "IPY_MODEL_9ab7246a079443aca9c0dbf543b4dc4d",
                    "IPY_MODEL_33c2b61e4b304b17984c1fa1eced2185"
                ],
                "layout": "IPY_MODEL_b3530e55d9d74a6194262d7f499dd11d"
            }
        },
        "749f48fd74fc4c52a6dc6425c877d5c8": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "f09bb81b6e264262a08f10ae61dfdc37": {
            "model_name": "SliderStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "9ab7246a079443aca9c0dbf543b4dc4d": {
            "model_name": "IntSliderModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "shift_list",
                "layout": "IPY_MODEL_749f48fd74fc4c52a6dc6425c877d5c8",
                "max": 12,
                "min": -4,
                "style": "IPY_MODEL_f09bb81b6e264262a08f10ae61dfdc37",
                "value": 4
            }
        },
        "2ad8849b515f4eb5a66da0339a43ce63": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "33c2b61e4b304b17984c1fa1eced2185": {
            "model_name": "OutputModel",
            "model_module": "@jupyter-widgets/output",
            "model_module_version": "1.0.0",
            "state": {
                "layout": "IPY_MODEL_2ad8849b515f4eb5a66da0339a43ce63",
                "outputs": [
                    {
                        "output_type": "error",
                        "ename": "TypeError",
                        "evalue": "'int' object is not iterable",
                        "traceback": [
                            "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
                            "\u001b[1;31mTypeError\u001b[0m                                 Traceback (most recent call last)",
                            "\u001b[1;32m~\\Anaconda3\\envs\\learn-env-ext\\lib\\site-packages\\ipywidgets\\widgets\\interaction.py\u001b[0m in \u001b[0;36mupdate\u001b[1;34m(self, *args)\u001b[0m\n\u001b[0;32m    249\u001b[0m                     \u001b[0mvalue\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mwidget\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mget_interact_value\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    250\u001b[0m                     \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[1;33m[\u001b[0m\u001b[0mwidget\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0m_kwarg\u001b[0m\u001b[1;33m]\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mvalue\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m--> 251\u001b[1;33m                 \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mresult\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mf\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m**\u001b[0m\u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m    252\u001b[0m                 \u001b[0mshow_inline_matplotlib_plots\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    253\u001b[0m                 \u001b[1;32mif\u001b[0m \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mauto_display\u001b[0m \u001b[1;32mand\u001b[0m \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mresult\u001b[0m \u001b[1;32mis\u001b[0m \u001b[1;32mnot\u001b[0m \u001b[1;32mNone\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
                            "\u001b[1;32m<ipython-input-313-f1c75faf0368>\u001b[0m in \u001b[0;36mplot_shift_list\u001b[1;34m(shift_list)\u001b[0m\n\u001b[0;32m     16\u001b[0m \u001b[1;31m#     print(pred_data)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m     17\u001b[0m \u001b[1;31m#     return\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m---> 18\u001b[1;33m     \u001b[1;32mfor\u001b[0m \u001b[0mshift\u001b[0m \u001b[1;32min\u001b[0m \u001b[0mshift_list\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m     19\u001b[0m         \u001b[0mdf_data\u001b[0m\u001b[1;33m[\u001b[0m\u001b[1;34m'true'\u001b[0m\u001b[1;33m]\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mplot\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m     20\u001b[0m         \u001b[0mdf_data\u001b[0m\u001b[1;33m[\u001b[0m\u001b[1;34m'pred'\u001b[0m\u001b[1;33m]\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mshift\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mshift\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mplot\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;31m#shift(shift)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
                            "\u001b[1;31mTypeError\u001b[0m: 'int' object is not iterable"
                        ]
                    }
                ]
            }
        },
        "5c101b3e9ff44a41b4068ac9ce2908c7": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "0e70082b4ffb4c6cb197bc993a104e62": {
            "model_name": "VBoxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_dom_classes": [
                    "widget-interact"
                ],
                "children": [
                    "IPY_MODEL_c8ffb76901ff456886a8b4b788845fdd",
                    "IPY_MODEL_3a382cd7a3204c3f926462cddbe8e86d"
                ],
                "layout": "IPY_MODEL_5c101b3e9ff44a41b4068ac9ce2908c7"
            }
        },
        "fa14528f6d404d91ac16650e6e80b39b": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "103315ce47e14410b120392e4755c39e": {
            "model_name": "SliderStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "c8ffb76901ff456886a8b4b788845fdd": {
            "model_name": "IntSliderModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "shift_list",
                "layout": "IPY_MODEL_fa14528f6d404d91ac16650e6e80b39b",
                "max": 12,
                "min": -4,
                "style": "IPY_MODEL_103315ce47e14410b120392e4755c39e",
                "value": 4
            }
        },
        "a2dbae41c463455ba1868630b84a4b4b": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "3a382cd7a3204c3f926462cddbe8e86d": {
            "model_name": "OutputModel",
            "model_module": "@jupyter-widgets/output",
            "model_module_version": "1.0.0",
            "state": {
                "layout": "IPY_MODEL_a2dbae41c463455ba1868630b84a4b4b",
                "outputs": [
                    {
                        "output_type": "error",
                        "ename": "KeyError",
                        "evalue": "'true'",
                        "traceback": [
                            "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
                            "\u001b[1;31mKeyError\u001b[0m                                  Traceback (most recent call last)",
                            "\u001b[1;32m~\\Anaconda3\\envs\\learn-env-ext\\lib\\site-packages\\pandas\\core\\indexes\\base.py\u001b[0m in \u001b[0;36mget_loc\u001b[1;34m(self, key, method, tolerance)\u001b[0m\n\u001b[0;32m   2655\u001b[0m             \u001b[1;32mtry\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m-> 2656\u001b[1;33m                 \u001b[1;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0m_engine\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mget_loc\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m   2657\u001b[0m             \u001b[1;32mexcept\u001b[0m \u001b[0mKeyError\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
                            "\u001b[1;32mpandas\\_libs\\index.pyx\u001b[0m in \u001b[0;36mpandas._libs.index.IndexEngine.get_loc\u001b[1;34m()\u001b[0m\n",
                            "\u001b[1;32mpandas\\_libs\\index.pyx\u001b[0m in \u001b[0;36mpandas._libs.index.IndexEngine.get_loc\u001b[1;34m()\u001b[0m\n",
                            "\u001b[1;32mpandas\\_libs\\hashtable_class_helper.pxi\u001b[0m in \u001b[0;36mpandas._libs.hashtable.PyObjectHashTable.get_item\u001b[1;34m()\u001b[0m\n",
                            "\u001b[1;32mpandas\\_libs\\hashtable_class_helper.pxi\u001b[0m in \u001b[0;36mpandas._libs.hashtable.PyObjectHashTable.get_item\u001b[1;34m()\u001b[0m\n",
                            "\u001b[1;31mKeyError\u001b[0m: 'true'",
                            "\nDuring handling of the above exception, another exception occurred:\n",
                            "\u001b[1;31mKeyError\u001b[0m                                  Traceback (most recent call last)",
                            "\u001b[1;32m~\\Anaconda3\\envs\\learn-env-ext\\lib\\site-packages\\ipywidgets\\widgets\\interaction.py\u001b[0m in \u001b[0;36mupdate\u001b[1;34m(self, *args)\u001b[0m\n\u001b[0;32m    249\u001b[0m                     \u001b[0mvalue\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mwidget\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mget_interact_value\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    250\u001b[0m                     \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[1;33m[\u001b[0m\u001b[0mwidget\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0m_kwarg\u001b[0m\u001b[1;33m]\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mvalue\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m--> 251\u001b[1;33m                 \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mresult\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mf\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m**\u001b[0m\u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m    252\u001b[0m                 \u001b[0mshow_inline_matplotlib_plots\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    253\u001b[0m                 \u001b[1;32mif\u001b[0m \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mauto_display\u001b[0m \u001b[1;32mand\u001b[0m \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mresult\u001b[0m \u001b[1;32mis\u001b[0m \u001b[1;32mnot\u001b[0m \u001b[1;32mNone\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
                            "\u001b[1;32m<ipython-input-314-2b839f3a7345>\u001b[0m in \u001b[0;36mplot_shift_list\u001b[1;34m(shift_list)\u001b[0m\n\u001b[0;32m     17\u001b[0m \u001b[1;31m#     return\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m     18\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m---> 19\u001b[1;33m     \u001b[0mdf_data\u001b[0m\u001b[1;33m[\u001b[0m\u001b[1;34m'true'\u001b[0m\u001b[1;33m]\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mplot\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m     20\u001b[0m     \u001b[0mdf_data\u001b[0m\u001b[1;33m[\u001b[0m\u001b[1;34m'pred'\u001b[0m\u001b[1;33m]\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mshift\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mshift\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mplot\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;31m#shift(shift)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m     21\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n",
                            "\u001b[1;32m~\\Anaconda3\\envs\\learn-env-ext\\lib\\site-packages\\pandas\\core\\frame.py\u001b[0m in \u001b[0;36m__getitem__\u001b[1;34m(self, key)\u001b[0m\n\u001b[0;32m   2925\u001b[0m             \u001b[1;32mif\u001b[0m \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mcolumns\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mnlevels\u001b[0m \u001b[1;33m>\u001b[0m \u001b[1;36m1\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m   2926\u001b[0m                 \u001b[1;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0m_getitem_multilevel\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m-> 2927\u001b[1;33m             \u001b[0mindexer\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mcolumns\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mget_loc\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m   2928\u001b[0m             \u001b[1;32mif\u001b[0m \u001b[0mis_integer\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mindexer\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m   2929\u001b[0m                 \u001b[0mindexer\u001b[0m \u001b[1;33m=\u001b[0m \u001b[1;33m[\u001b[0m\u001b[0mindexer\u001b[0m\u001b[1;33m]\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
                            "\u001b[1;32m~\\Anaconda3\\envs\\learn-env-ext\\lib\\site-packages\\pandas\\core\\indexes\\base.py\u001b[0m in \u001b[0;36mget_loc\u001b[1;34m(self, key, method, tolerance)\u001b[0m\n\u001b[0;32m   2656\u001b[0m                 \u001b[1;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0m_engine\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mget_loc\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m   2657\u001b[0m             \u001b[1;32mexcept\u001b[0m \u001b[0mKeyError\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m-> 2658\u001b[1;33m                 \u001b[1;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0m_engine\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mget_loc\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0m_maybe_cast_indexer\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m   2659\u001b[0m         \u001b[0mindexer\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mget_indexer\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m[\u001b[0m\u001b[0mkey\u001b[0m\u001b[1;33m]\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mmethod\u001b[0m\u001b[1;33m=\u001b[0m\u001b[0mmethod\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mtolerance\u001b[0m\u001b[1;33m=\u001b[0m\u001b[0mtolerance\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m   2660\u001b[0m         \u001b[1;32mif\u001b[0m \u001b[0mindexer\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mndim\u001b[0m \u001b[1;33m>\u001b[0m \u001b[1;36m1\u001b[0m \u001b[1;32mor\u001b[0m \u001b[0mindexer\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0msize\u001b[0m \u001b[1;33m>\u001b[0m \u001b[1;36m1\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
                            "\u001b[1;32mpandas\\_libs\\index.pyx\u001b[0m in \u001b[0;36mpandas._libs.index.IndexEngine.get_loc\u001b[1;34m()\u001b[0m\n",
                            "\u001b[1;32mpandas\\_libs\\index.pyx\u001b[0m in \u001b[0;36mpandas._libs.index.IndexEngine.get_loc\u001b[1;34m()\u001b[0m\n",
                            "\u001b[1;32mpandas\\_libs\\hashtable_class_helper.pxi\u001b[0m in \u001b[0;36mpandas._libs.hashtable.PyObjectHashTable.get_item\u001b[1;34m()\u001b[0m\n",
                            "\u001b[1;32mpandas\\_libs\\hashtable_class_helper.pxi\u001b[0m in \u001b[0;36mpandas._libs.hashtable.PyObjectHashTable.get_item\u001b[1;34m()\u001b[0m\n",
                            "\u001b[1;31mKeyError\u001b[0m: 'true'"
                        ]
                    }
                ]
            }
        },
        "54dee1d99989457dbb8dbd4465373bb9": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "939fa5a958784ce58e54ddcf51bca621": {
            "model_name": "VBoxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_dom_classes": [
                    "widget-interact"
                ],
                "children": [
                    "IPY_MODEL_d761178d64984e5780b996bd722fb245",
                    "IPY_MODEL_bef8cd141d384863b19e21d9fb508ff1"
                ],
                "layout": "IPY_MODEL_54dee1d99989457dbb8dbd4465373bb9"
            }
        },
        "0eccff23a6d14854871f78f06b9048b3": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "b5342caa76ef460fad79b1450b845772": {
            "model_name": "SliderStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "d761178d64984e5780b996bd722fb245": {
            "model_name": "IntSliderModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "shift_list",
                "layout": "IPY_MODEL_0eccff23a6d14854871f78f06b9048b3",
                "max": 12,
                "min": -4,
                "style": "IPY_MODEL_b5342caa76ef460fad79b1450b845772",
                "value": 4
            }
        },
        "a8e6fa2f22fe4544856fd8021354e0f9": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "bef8cd141d384863b19e21d9fb508ff1": {
            "model_name": "OutputModel",
            "model_module": "@jupyter-widgets/output",
            "model_module_version": "1.0.0",
            "state": {
                "layout": "IPY_MODEL_a8e6fa2f22fe4544856fd8021354e0f9",
                "outputs": [
                    {
                        "output_type": "error",
                        "ename": "KeyError",
                        "evalue": "'true'",
                        "traceback": [
                            "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
                            "\u001b[1;31mKeyError\u001b[0m                                  Traceback (most recent call last)",
                            "\u001b[1;32m~\\Anaconda3\\envs\\learn-env-ext\\lib\\site-packages\\pandas\\core\\indexes\\base.py\u001b[0m in \u001b[0;36mget_loc\u001b[1;34m(self, key, method, tolerance)\u001b[0m\n\u001b[0;32m   2655\u001b[0m             \u001b[1;32mtry\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m-> 2656\u001b[1;33m                 \u001b[1;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0m_engine\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mget_loc\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m   2657\u001b[0m             \u001b[1;32mexcept\u001b[0m \u001b[0mKeyError\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
                            "\u001b[1;32mpandas\\_libs\\index.pyx\u001b[0m in \u001b[0;36mpandas._libs.index.IndexEngine.get_loc\u001b[1;34m()\u001b[0m\n",
                            "\u001b[1;32mpandas\\_libs\\index.pyx\u001b[0m in \u001b[0;36mpandas._libs.index.IndexEngine.get_loc\u001b[1;34m()\u001b[0m\n",
                            "\u001b[1;32mpandas\\_libs\\hashtable_class_helper.pxi\u001b[0m in \u001b[0;36mpandas._libs.hashtable.PyObjectHashTable.get_item\u001b[1;34m()\u001b[0m\n",
                            "\u001b[1;32mpandas\\_libs\\hashtable_class_helper.pxi\u001b[0m in \u001b[0;36mpandas._libs.hashtable.PyObjectHashTable.get_item\u001b[1;34m()\u001b[0m\n",
                            "\u001b[1;31mKeyError\u001b[0m: 'true'",
                            "\nDuring handling of the above exception, another exception occurred:\n",
                            "\u001b[1;31mKeyError\u001b[0m                                  Traceback (most recent call last)",
                            "\u001b[1;32m~\\Anaconda3\\envs\\learn-env-ext\\lib\\site-packages\\ipywidgets\\widgets\\interaction.py\u001b[0m in \u001b[0;36mupdate\u001b[1;34m(self, *args)\u001b[0m\n\u001b[0;32m    249\u001b[0m                     \u001b[0mvalue\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mwidget\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mget_interact_value\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    250\u001b[0m                     \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[1;33m[\u001b[0m\u001b[0mwidget\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0m_kwarg\u001b[0m\u001b[1;33m]\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mvalue\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m--> 251\u001b[1;33m                 \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mresult\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mf\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m**\u001b[0m\u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m    252\u001b[0m                 \u001b[0mshow_inline_matplotlib_plots\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    253\u001b[0m                 \u001b[1;32mif\u001b[0m \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mauto_display\u001b[0m \u001b[1;32mand\u001b[0m \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mresult\u001b[0m \u001b[1;32mis\u001b[0m \u001b[1;32mnot\u001b[0m \u001b[1;32mNone\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
                            "\u001b[1;32m<ipython-input-315-979788243916>\u001b[0m in \u001b[0;36mplot_shift_list\u001b[1;34m(shift_list)\u001b[0m\n\u001b[0;32m     17\u001b[0m \u001b[1;31m#     return\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m     18\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m---> 19\u001b[1;33m     \u001b[0mdf_data\u001b[0m\u001b[1;33m[\u001b[0m\u001b[1;34m'true'\u001b[0m\u001b[1;33m]\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mplot\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m     20\u001b[0m     \u001b[0mdf_data\u001b[0m\u001b[1;33m[\u001b[0m\u001b[1;34m'pred'\u001b[0m\u001b[1;33m]\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mshift\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mshift\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mplot\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;31m#shift(shift)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m     21\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n",
                            "\u001b[1;32m~\\Anaconda3\\envs\\learn-env-ext\\lib\\site-packages\\pandas\\core\\frame.py\u001b[0m in \u001b[0;36m__getitem__\u001b[1;34m(self, key)\u001b[0m\n\u001b[0;32m   2925\u001b[0m             \u001b[1;32mif\u001b[0m \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mcolumns\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mnlevels\u001b[0m \u001b[1;33m>\u001b[0m \u001b[1;36m1\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m   2926\u001b[0m                 \u001b[1;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0m_getitem_multilevel\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m-> 2927\u001b[1;33m             \u001b[0mindexer\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mcolumns\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mget_loc\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m   2928\u001b[0m             \u001b[1;32mif\u001b[0m \u001b[0mis_integer\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mindexer\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m   2929\u001b[0m                 \u001b[0mindexer\u001b[0m \u001b[1;33m=\u001b[0m \u001b[1;33m[\u001b[0m\u001b[0mindexer\u001b[0m\u001b[1;33m]\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
                            "\u001b[1;32m~\\Anaconda3\\envs\\learn-env-ext\\lib\\site-packages\\pandas\\core\\indexes\\base.py\u001b[0m in \u001b[0;36mget_loc\u001b[1;34m(self, key, method, tolerance)\u001b[0m\n\u001b[0;32m   2656\u001b[0m                 \u001b[1;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0m_engine\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mget_loc\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m   2657\u001b[0m             \u001b[1;32mexcept\u001b[0m \u001b[0mKeyError\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m-> 2658\u001b[1;33m                 \u001b[1;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0m_engine\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mget_loc\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0m_maybe_cast_indexer\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m   2659\u001b[0m         \u001b[0mindexer\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mget_indexer\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m[\u001b[0m\u001b[0mkey\u001b[0m\u001b[1;33m]\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mmethod\u001b[0m\u001b[1;33m=\u001b[0m\u001b[0mmethod\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mtolerance\u001b[0m\u001b[1;33m=\u001b[0m\u001b[0mtolerance\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m   2660\u001b[0m         \u001b[1;32mif\u001b[0m \u001b[0mindexer\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mndim\u001b[0m \u001b[1;33m>\u001b[0m \u001b[1;36m1\u001b[0m \u001b[1;32mor\u001b[0m \u001b[0mindexer\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0msize\u001b[0m \u001b[1;33m>\u001b[0m \u001b[1;36m1\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
                            "\u001b[1;32mpandas\\_libs\\index.pyx\u001b[0m in \u001b[0;36mpandas._libs.index.IndexEngine.get_loc\u001b[1;34m()\u001b[0m\n",
                            "\u001b[1;32mpandas\\_libs\\index.pyx\u001b[0m in \u001b[0;36mpandas._libs.index.IndexEngine.get_loc\u001b[1;34m()\u001b[0m\n",
                            "\u001b[1;32mpandas\\_libs\\hashtable_class_helper.pxi\u001b[0m in \u001b[0;36mpandas._libs.hashtable.PyObjectHashTable.get_item\u001b[1;34m()\u001b[0m\n",
                            "\u001b[1;32mpandas\\_libs\\hashtable_class_helper.pxi\u001b[0m in \u001b[0;36mpandas._libs.hashtable.PyObjectHashTable.get_item\u001b[1;34m()\u001b[0m\n",
                            "\u001b[1;31mKeyError\u001b[0m: 'true'"
                        ]
                    }
                ]
            }
        },
        "42840e5ace8c40aa811bb882c9e35687": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "189d76d3f9854db6866a65babdd0b2b4": {
            "model_name": "VBoxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_dom_classes": [
                    "widget-interact"
                ],
                "children": [
                    "IPY_MODEL_810a5e3888804a0f99defd75a5d4238a",
                    "IPY_MODEL_40541f47b710491fa326c326baf1a32a"
                ],
                "layout": "IPY_MODEL_42840e5ace8c40aa811bb882c9e35687"
            }
        },
        "eb0d20bdc98c416db8399b0cbb0e5bcf": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "ecdfa967532c4341a256e50eb7975085": {
            "model_name": "SliderStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "810a5e3888804a0f99defd75a5d4238a": {
            "model_name": "IntSliderModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "shift_list",
                "layout": "IPY_MODEL_eb0d20bdc98c416db8399b0cbb0e5bcf",
                "max": 12,
                "min": -4,
                "style": "IPY_MODEL_ecdfa967532c4341a256e50eb7975085",
                "value": 1
            }
        },
        "47db8b5ae359452f97773437fbc51305": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "40541f47b710491fa326c326baf1a32a": {
            "model_name": "OutputModel",
            "model_module": "@jupyter-widgets/output",
            "model_module_version": "1.0.0",
            "state": {
                "layout": "IPY_MODEL_47db8b5ae359452f97773437fbc51305"
            }
        },
        "bf2ef7adb38d4ea9b239fa2545ddae0c": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "012ce9a44aea4b58a4e3d59659b09e77": {
            "model_name": "VBoxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_dom_classes": [
                    "widget-interact"
                ],
                "children": [
                    "IPY_MODEL_f804d39e2c934467a4bed29566e65907",
                    "IPY_MODEL_4f602cdc80514a4082aa940fcfae77d6"
                ],
                "layout": "IPY_MODEL_bf2ef7adb38d4ea9b239fa2545ddae0c"
            }
        },
        "fc6e6354be1347c49e91a63f15e921d0": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "016b3fee840049398441aa72f81e3ae3": {
            "model_name": "SliderStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "f804d39e2c934467a4bed29566e65907": {
            "model_name": "IntSliderModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "shift_list",
                "layout": "IPY_MODEL_fc6e6354be1347c49e91a63f15e921d0",
                "max": 12,
                "min": -4,
                "style": "IPY_MODEL_016b3fee840049398441aa72f81e3ae3",
                "value": 2
            }
        },
        "45ef416d3abd4d128b1935aa20e24158": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "4f602cdc80514a4082aa940fcfae77d6": {
            "model_name": "OutputModel",
            "model_module": "@jupyter-widgets/output",
            "model_module_version": "1.0.0",
            "state": {
                "layout": "IPY_MODEL_45ef416d3abd4d128b1935aa20e24158",
                "outputs": [
                    {
                        "output_type": "display_data",
                        "data": {
                            "text/plain": "<Figure size 432x288 with 1 Axes>",
                            "image/png": "\n"
                        },
                        "metadata": {
                            "needs_background": "light"
                        }
                    }
                ]
            }
        },
        "a04573dcb968426c92d80419f31fe634": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "205f086b2f73476bbce42311bd589cfd": {
            "model_name": "SliderStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "526069d22dad49a38c8cce3582521eed": {
            "model_name": "IntSliderModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "shift_list",
                "layout": "IPY_MODEL_a04573dcb968426c92d80419f31fe634",
                "max": 4,
                "min": -4,
                "style": "IPY_MODEL_205f086b2f73476bbce42311bd589cfd",
                "value": 3
            }
        },
        "60b347f9ae374614a10df739bcb59a13": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "7f38d36cc94c4137b698bea84b144762": {
            "model_name": "VBoxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_dom_classes": [
                    "widget-interact"
                ],
                "children": [
                    "IPY_MODEL_526069d22dad49a38c8cce3582521eed",
                    "IPY_MODEL_75f57a3ab8b94dd6a8445301277f1579"
                ],
                "layout": "IPY_MODEL_60b347f9ae374614a10df739bcb59a13"
            }
        },
        "ab2a4bfb0c5e4086b399882923c91093": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "75f57a3ab8b94dd6a8445301277f1579": {
            "model_name": "OutputModel",
            "model_module": "@jupyter-widgets/output",
            "model_module_version": "1.0.0",
            "state": {
                "layout": "IPY_MODEL_ab2a4bfb0c5e4086b399882923c91093",
                "outputs": [
                    {
                        "output_type": "display_data",
                        "data": {
                            "text/plain": "<Figure size 432x288 with 1 Axes>",
                            "image/png": "iVBORw0KGgoAAAANSUhEUgAAAYkAAAEUCAYAAADeJcogAAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAALEgAACxIB0t1+/AAAADl0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uIDMuMC4yLCBodHRwOi8vbWF0cGxvdGxpYi5vcmcvOIA7rQAAIABJREFUeJzsnXecXFX5/99n6vae3WQ3vXdSSCCU0EMVpElRFEQFBcSv+hWwfVFRsfITUMSCSJEaIiBdWgIJgRTSe99syu5me5l2z++Pc6dtSbbvzu7zfr32NTPnnnvvmdmZ+7lPOc9RWmsEQRAEoSUcvT0AQRAEoe8iIiEIgiC0ioiEIAiC0CoiEoIgCEKriEgIgiAIrSIiIQiCILSKiIQgCILQKiISgiAIQquISAiCIAit4urtAXSWvLw8PXLkyN4ehiAIQkKxcuXKMq31oGP1S3iRGDlyJCtWrOjtYQiCICQUSqk9bekn7iZBEAShVUQkBEEQhFYRkRAEQRBaRURCEARBaBURCUEQBKFVRCQ6QijY2yMQBEHoEUQk2smbi5fAz3JpePd3vT0UQRCEbifh50n0JFprlr3xDAvckPz+T6H4A8gaDpnDIGcUTLgA3Mm9PUxBEIQuQ0SiHSxavZ9qnRpt2PFOfIezfwKnfKtnByUIgtCNiLupHTzzyT5qiLEU7toP31gOFz9oXu98r1fGJQiC0F2ISLSR7YdrWb7rCOMKMgDY5hgF3jTInwiTLzGddr4LWvfiKAVBELoWEYk28uRyU+bkzPE5APyb06MbkzKizwMNzfYNWSIcgiAkJiISbaDBH2LhymIGpXs5rtDEJOoCKr7TpIvNY6A+rnn74Vqm3f0Gv3h1U8cHcGQXfPQQHN7c8WMIgiB0ABGJNvDymhKqG4NcPWcYLkIANFhODtc0Rjt57IC2vzZu3/e2HKbeH+Ivi3e276T1R+CTv8HfF8D9M+D1O+E/EhQXBKFnGfAise9IPXc8v5bKen+0saoYHr0Itr8NwBPL9+BQcM3c4RAKABDUTt7ZdDi6T0Qk4i2Jg1VRIWkMhI4+mEADbFgET10Dvx0Hr3wH9n0Mo04z2w+s6dibFARB6CADPgX2569s4vUNB3lmxT5233shWCH4+7lQXQxON2uTZrO2uIqzJxVQmJUMvmoAgjh4c+Mhrp473BzInWIe/XVxx6/zR4XhhVX7ufaE4fEDsEKw+wNY+yxseilyfAZPg+lXwdTLIaMQnrgCtr8FvhrwpnfLZyEIgtCUAS8Seeme+IalDxiBAPwHN3PPf0ws4bp5I8z2N74PwJCsZF7bXkatL0ia1xWdRBeMD1zX+6MlPP66ZCdXzRmG06Hg4HpY+wysex5qSkyHzGEw50aY9jkomBw/rrQC81h7WERCEIQeY8CLRLLbGXn+h8ef47Zd96DSClC1h/DUlbC5fB8jcgdx6ti8uP1mD/Hy5yMWi7eWcsG0IeBwmw1WvEupzmdeXzhtCKvWrWf7Cz9jwuHX4PBG08GbCbO+ZKyG4fPA0YoH0GWLme3uEgRB6AkGvEiE3UFJ+Lhw249xOALcEbqZL+d/woTDr1Kkyvjs3Nk4HPHZTFPzjLi8ueGgLRL2xb2JSAR8dTzj+SkzDzXg8u7FsV6jnR7UxIuMMIxbAO6kYw9U2cfXVufesCAIA5qX15QwbP0f29x/wItEaY2Pm5wvc0fyIhzBRt7LupxFpZPIrt7CnW4oUmVcMXtos/0GJwUoykrm7c2HCYQs3A77o7TiK8SeWvUSJzg2QzVsTZ7OIzVzufyqW5gzaXT7BhoWCWTOhSAIHee2p1bztmdhm/sP+OymtzYe4i73UziCjTBoEqff8kcW3XIS+7VxL52a30humrfZfmr8uZwzuYCaxiDLdx5BK9ttFSMSjYEQ1ZWVkdc117zE06Ez+dNHZR0YqW3JNLUktv0XnrtBypcLghBPYzW88QOo3NdsU6pqbGGHlhnwIuF1xFx0L/8ruJPJT0+iROcCMMpT2WSHTMgdC0WzWDDFBJPf2HCQe9/YbrY3VkW6/ur1zdTG1HqaPSKbOSOzeXdLKZsPVrdvoLYlse1QTXz7k5fDhhdg77L2HU8QhP7NB/fBsgfhueubbUpFRKJN+IMWHsv+sApnmrRTICPZRTVm3kOzDzNQB8mmNMfckTlkJrt5bf0B6oO2G+jFbwBgWZpFq/fHFwQEbpo/BqD9k+uUsSS+9fQqdEv1oZRq3iYIwoAlVF9unlRFLQlfMITCEpFoK/X+ICnhDytnTKTd63JSr42LKSX2wwz6jTvJY+ZEuJwOzpqYT1mtH0eTWMHibaVU1gdITbKD0vNuBeDMifmMy0/jpU9LKKlsXuepVWxLQqEprmhhP6eneZsgCAOSdcVVPP2JSa23YpJpqhoCpODDodoe2xzQIlHnD0V9c57U+G2Yi3uyjhGJcF0md7Rv2OXkID5W8PgyUxDwxpPsoHfBFNPPofja/NEELc0jH+xq95gdaDaUtOCqcgz4HARBEGxeXltCQBvvQnVdA1c8tJQ/vbed5TuPMN3RPi/GgBSJOl+Qd7cc5o/vbo9aCp60uD71tkgk6ZgyGxGRiLqQ5o8fhNfliLMk9h2p550thzluWBbDMu35E+F5FMAlM4ooyPDy1Md7qapv47yHGEtiY0lV8+1Od/M2QRAGJO9vKcWyL+9OLFbtreDXr2/htqdW85Tn5+061oC4/WwMhFi1p4KlO8pZuqOMtcVVBO3y3ae4fKZTE0vCj4uAduK1YkQiXJfJdjcBpHhcnDouD8fWqCXxxPI9aA1fPHEEBDeYRmf0o/a4HNx4yih+8epmnli+h1vOGHvsN2HHHFq1JARBEDD14rYcqiHoMhmXLodmxQ/P4f2th/nvpsOwtX3H63KRUEo9AlwEHNZaT7XbrgTuBiYBc7XWK2L6TwceBjIAC5ijtW57VKUF/EGLNcWVLN1ezrKdZazaW4k/aC7iTodi+tBM5o3O5aQxeczxK3gOs4BQDKdPyKdydxrpAfuuXetIuY5YdxPAgsmD2bE1akk8+8k+clI9XDh9CKywLQVH/J3+NXOH88Db2/nHh7u48ZRRJMXM/G4JSysc2JbEgRZEQibZCYKAiYcCcZZETqqHS2cO5dKZQ82VuB10hyXxKPAg8FhM23rgMowYRFBKuYAngOu01muUUrlAu+tOBEMW60uqWWZbCit2V9BgV1xVCiYPyeCkMbnMG5PLnJE5pCfFXLDXha2D+Av/A9fMxPWXIrxVO+DJz0HJKqgzHz7J2XF9L55RyP3/jl6kK+oD3HzaGHPhD5fRaOIOSk9y8/kTR/Dn93e0XPiv6XtE4QFyVTWrqho5UucnJzUmWC0iIQgC8P5Wc50K2XOrnLHxUssyN7nKAbTNI9HlIqG1XqyUGtmkbROAap6muQBYq7VeY/crb+/59pTXMfOnb1Hji04mG1+QxrzRucwbk8eJo3PISjlK5k+4amuTmER6khsKxsKRjbDtDcgYCpM+A0WzYfb1cX2T3E6yk51gD0Ep+Hz4or/x3+axhcDyl08eySMf7Iov/NcKQQs8wF89v2eHNQTfovkw7axoBxEJQRjwhCzNB9vKyEpxE/LbcczYa0N9mUnjn3Qx5v782PR2TGI8oJVSbwCDgKe11r8+1k5KqbuB/wPwDB7LlDQPFx1XyLwxuZw4Oof89DbUQgrjsyenNbEkALjwd0YQCqZCesFRDxMMRdPMzppYwLCcFAj6oGS1aWwhsJyfkcRls4p4+pN9vLXxIOdNHdLq8T/YXs6C8H6qkvTtz8D2Z6IdZG1tQRjwrC2upKohwNVzhhFaZVzYcZmX4etdUmabj9nb2U0u4BTg8/bjpUqps46+C2it79ZaK621mjg4nff+9wx+edk0Lj6usH0CAWaBITBrNjQlLR/GnnVMgQDwB6Jesi+Gy4rHLmXqq6Ulvjp/NErBQ+/vbHmSnM2mg9H9Z/j+wm9GPAxzvhrtYB1jQSNBEPo9YVfTaeMH4aOFjMfwejXtWG6gt0WiGHhfa12mta4HXgVmtecAbmcn30LlXvOYNbJTh9ltRYXklHBZ8UBM/H3o8S3uN2ZQGudMKmDNvkqW7zrS6vEtHXVFpXi9vH5ksHF/hRF3kyAMeBZvLcXpUJw0No8kTwuOovDNagKJxBvAdKVUih3EPg3Y2KMjmHEtnHYHpOR06jAvWicDYClXtKx4eAGiGV8wVkkr3HSame398Ps7Wu2jiYrEpMIMdpbV0ZA2LKaDiIQgDGSq6gN8uq+SmcOyyEx2c+2coujGd34OL3wNXr/TvG4Sgz0aXS4SSqmngGXABKVUsVLqRqXUpUqpYmAe8Iodg0BrXQH8HvgE+BRYpbV+pavHdFQmXQRnfL/TtY8sHGy1igi4YxQ6bEkcY72IthT+c8ekyE4pzEBr2NSYbQegEJEQhAHOB9vLsLSZ4AuQnxrjblr8a7MS5uFNpgTRqPltPm53ZDdd08qmRa30f4K2htn7OCGcOHRMbCBsSbiOHSe5af4YPtm9gr8s3snvPzej+bEtIpI+pdAEnTaUVDOrYKpZG1tEQhD6P0GfqdPWwk3t4ph4BBBdtmD61cZjkj0CMoraXZ2ht91N/YbbzhxLSDlxEiMS/uZlPFrjWIX/tBUVgclDMgBMeY7IinUSuBaEfo1lwT358Mh5zTZprXl/aynZKW6mFtmZS+FrwuwvwejTIHtkh8r3iEh0Ed9ZMIHJRTk4rKBZCGjhV+FfnzMb25BudrTCfyFL4whPwkAxriANj9NhynM4ZFlTQRgQhC2DfR8127TtcC0Hqxs5Zdyg6HyrcH919GoOx0JEogtxOF0Q8pmFgNY9C2kFcPpdzSbftUZrhf8CIQt32EJxunE7HYwfnMbmgzWEwllPMk9CEPo1K3a3vqJl2NU0f1xetDGcFu8Qkeg7DD8R0gab+Qs3/he+uRpOv7PN6Wbhwn91/hBPLN8TafcFragby565PWVIJv6gRXm9fbcgloQg9FssS/PFv7W++uSSbUZAwkFrs5N9zVCdu8yLSHQl5/wUvrsFLvwtDJvToYypa+YOJ93r4h8f7qLRrj8VCFnR+iu26Ti50MQlDlb7TbuIhCD0W4KWjq/B1ISSygayU9wUZMQkyQRarkvXXkQk+hjhwn9ltX5eWLUfMFVtI+tV2HcFUyIiYZc6lxnXgtBvsbRGxYrE6iehch/r91fx3efW4C/dTmZSE7dSB2ZXt0Rv124SWqBp4T9/0EJFRMJYJ5OGZKAUlFTbsQuxJASh39LMknjxGwCk6cHcpJ381rufF/RlQExVo8awSGR06txiSfRBwoX/dpXV8dbGgwRCVrRIl21JpHpdjMpNpSRsSYhICEK/JWRpnPaNYkXKSP6W+lXeCs0iT1UzzmE8Dpc1vBC/k6/GXC/E3dQ/iS385wta0aIcMUGoSYUZ1AdsC0NEQhD6LZalIzeKS2qGcE/5Gbwy5fdw7XPxHf98CrzxA9j2FhzZASm5na4mIe6mPkq48N+bGw/xwfYy0iKWRPQfPqUwg/0bwimwIhKC0F8J6ai7KYSDhz4/i/OnDYGD6+I7lm4xbcseNK/bUX6jNUQk+jA3nTaGNzce4m9LdvLtJoFrgFG5qexDREIQ+juWpXEq8xu3cBiBgHhX0s0fQu4Y2Lccdr4PZVth3q2dPreIRB8mXPjvk90VKFdzkchMcRNCZlwLQn8nFJPdNHNEbnSDO0YkMgpNCaDRp5u/LkJiEn2cm+0y4k1TYAGykj3REuIiEoLQbwmGou6m0YNiUlq9MSW/k7O75dxiSfRxzphgCv85jsRnNwFkpbixtFgSgtDfsWJiEnFlNjypcNF9kDe+0wHq1hCR6OM4HIpbzxxLcGG4NlPMCnUeJ7XYFWbrW1/VThCExMYU+Qx7E5pMmjv+y916bhGJBOCSGUXUbsqHLcTdLSS5nezQdgCrfHvvDE4QhG6nVUuiB5CYRIKQ5rH/VTHuJq/LQbk2sylDdeXRzr5aWHQz7HinJ4coCEI3EbJoVr+tpxCRSBR085iEUop6TEGvw+W2u6lsO/xhOqx5Cl6/q/lx6sph/6ruHq0gCF1IKGYynVgSQsu0IBIAPtwEtBNnoBbWPA0Pz4d6Y1Usqcrj4gc/iD/OAzPhr2dAbWlPjFoQhC4gTiS6KUDdGiISiYJungJrN1CPl7zqDbDoJrN9wT0AHGmwWFtchWXFLEjUWGUeQ/7uH7MgCF1C7IxrcTcJLdOKJfHtc8ZTQwoOHYLCWXDzYph+FQCXOJfyDee/OVTdfM1sQRDM2tD/XLKV2r99xljifRRxNwnHphWRmDg4nQeDn2XF6G/Al9+AnNFxdxrfcz8Lr91pLJFQoPnxBGEAs2xHOY+9+h5pxYuNJd5HMdlNraTAdjMiEonCWf9nJsxc/EBcs8upeDp0JitGfAVcHtPY5E5jyJZ/whvfh9rD0cbuEonyHbBrSfccWxC6mNc3HCRIz150O0LI0jhU71gSMk8iURg0Hm79pFmz02F0PhQbd4j5Eq2xRlOUqsn76E/xcym6SyQemGUef3ykx7/MgtAeQpbm1XUHySRmVUetezww3Bb2lNfhiqxzL5aE0A6c9hc6ViT8VvTfulfn85vBvzFWyLY3ozu2IBLfeno1P/r3+q4ZmLizhD7O8l3llNX6ohdfMDdSR3aZVPKy7WD1/ve4zhfk929tJdVpj9OVdPQduhgRiQTH6TAiEYwRiWp/9ItdrVNZX5UEX3oZcsce9VhvbzrMk8v3cLCqsfMD0/rYfQShF/nP2gMAjMjyRhsfPB7unwEPzjZ/7/2i2X6BkMW3n/mUpdvL4je88QMC7/2WrYdq8AU7seZ8xR5480cQNBmIf3x3O4eqfVw4Ocdsd3qPsnPXI+6mBMflNCIRm+Za1WiRZz93JGeyp7wenVaAuv4V+N0Es6GFO/2Q1lgaFq3ez9dPH9PJkYlICH2LslofB3ZvYergFELZo3l9/UHy0rxcd0IRvGd3mn61cecEG2H9Qqjc2+w4H2wv44XV+3lh9X5233thdMOyB3EDC16fhNupGF+QztTCTKYWZTClKJNJgzNI9rTBVfT4pWZVudRB7J5wI39bsovCzCTOHZ9lSvO4RCSEdtCSJVHVGL2L8aZlU3sgSHmdn7z0waYY2IpHWhSJ8DGeX7mPm08bjeqMb1YsCaGPcdPjK/nLwc+hVA01BfP4od/JoCEjGLejEoBPR3yZGZfdZzrXHjYi0cJ8IgV82fkaDXgAWySauKUmD8lg08EaNpRU88wK0+ZQMDY/jamFmUwpymRqYQaTCzNIT3LH7WtV7jUunqX3c+/W2fhDFj+4cDKeQLHp0MPuJhGJBCcak4hxMTUGI89TMnLgAOwprycvzRtNoW1BJMLWyI7SOtYUVzFjWFbHByYxCaGPseVgDbmqBoDsQ8u4zAkcjlYkCMR63x32pTE2bdzmB4vW86H7cfvV782DvzayPdWtePHWUwiELHaU1rJ+fzXr91exoaSKDSXVbD1Uywur90f6j8pLZUphBlOLMplamMmcEHgVUFfKD2u/yKQhX+WCqefDix+ZHcJZjD1El4uEUuoR4CLgsNZ6qt12JXA3MAmYq7Ve0WSf4cBG4G6t9W+7ekz9mZYsiSN10buf9EyzEMme8jpmj8huVSS01gQtjcfpwB+yWLiyuHMiIe4moY/hdChKrUz8rnQuCd3LMHctC78wGsc/FgAQ1DEi4bQvxC2IxP7KegjfzIezoWJEYojXB4Db6WDi4AwmDs7gitlDAXMjtqu8jg0l1WzYX8X6kirW76/mP2sPRGIkm7xRC34Qldxe8Ut45L9QbGc3Nqu60L10hyXxKPAg8FhM23rgMuDhVva5D3itG8bS72kak2jwh/jju9u5zN6ek5kJwO7yerul5ZXswhozY1gWu8rreGlNCT+8aBJeVwfT7cSSEPoYlqXxEqA04KTM7+Di2cfhGDE5sn3DwQbmhV9ERCLe3aS1OUbk9a9HYYVCWEE/YafRAtdq4NIWx+BwKMYMSmPMoDQuPq4wcsziigY22IKx58MCJqp9vBqay9Zp3+Fb/As2vhg9SENlJz6F9tPlkqS1XgwcadK2SWu9paX+SqnPAjuBDV09loFA2N0UtiR+8eomdpTWRbbnZZlS4nvL7baIJRF/px9OofW4HFw6s4iqhgDvbDpMh5GYhNDH8AUtvARotC/nFx03JG57aV3UTYvTvuTvfDeSZQRQ7w+RRrTMzc7GNLY2ZrE5ODjS9r3GP7RrXEophuWkcN7UIXz33AmMLzJpJz9yfZvrLzoTPvcY3PB6dIeU3FaO1D30agqsUioVuAP4STv3u1sppZVSuqSkpHsGlyCE3U0hS/P2pkM8/tEeJhRE18DNycrA7VRRS6IVd5PjjTu5zfkCTofi8lnGNF64qrgTIxOREPoOIUsTCAXxqgA+7aEoK5mZTdypTkLoSCHNmKSNfcsjT2t9QdKUEYlng6dxhfo9D016jG2ffYUtalSXjNXhr0Gn5rP0BwvISrEtmhHz4I7dcMUjMPHCo+7f1fT2PImfAPdprWuP2TMGrfXdWmultVaFhYXdNLTEwGXPuD5U3cj3nl+Lx+XgD9fMiGx3upMZlp3CnoglYb78tY3xZrTrk4f5jvt5nA7FhMHpTC3K4N0tpZTW+Do2MHE3CX0If9DCg7EUfLg5f+rgZtl7XhXk7pc2cNPjK7jgDzGlZfZ+FHm6+WANSZjfzoIZI1nxw3O4/5qZXDZrKI94vxjdpzOWdGM1ypve3NWbnA1TL+/xGeG9nd10AnCFUurXQBZgKaUatdYP9vK4EoZwTOLdLWZ9iB9fNJmJgzOiHdxJjMhV7Cyro6ohQKghSA7w/YVruf9/55o+MV/osGVyxayh3P3yRl78dD9fOXV0+wfWSXfT955fQ3FFA//66omm4eB6WP041B6CS//S4xkeQuISsjRvbDiI1764+3BzwfSoq8lyeHBYfpLw8c9lewDjdo1cHd+9B077XyxL85s3NkfEJis93eS12uzMOpH390/nNOdaU57G4TZZUk6XeXS47DancWc5XPF/Tntb3WHI6Ds3v70qElrrU8PPlVJ3A7UiEO0jLy06sebUcXlcf9LI+A6uJEbkuoBS9pbXkx3Q5AD7jsQYbzEZHEna/JAunlHEz1/dxMJVHRSJTvLsimLSqEev2IRa9RiUxKymd9I3oWhWj49JSCxqGgM8u6KYf3y4i+KKBgbZAec5Y4eQMzw70s835jySt71ElU5j0TdOYlhOCqkeF4QnWxdMBeDltSWs31/Nt8ZlwD6aTWr7xaXTWPb8Ofjqy/D668EKgBWEUNA8WkHQbZyJPfKUzr79LqM7UmCfAk4H8pRSxcD/YQLZDwCDgFeUUp9qrc/t6nMPRDwuBxMK0tlyqIbfXXkcDkcTU9ThYkSuueveXV5Hrh2TUGgCIQu30wGB+kj3VGWe56R6OGNCPm9uPMTGkmomF2bQLjrpbnIT5L/e/0X9p8LEUcYtMI9bXwdfTaeOLfRv9h2p59Glu3nmk33U+oIkuR1ce8JwvjZtFDwBOZnx3+Xkq/7G/vcf4aY515KZYbIBdawl7M3AFwzx2ze34HYqrj1+sBGJJuUxxhWkM+6WHwM/bn1wlmWEIhSICkfsXyhgvufZI7vmw+gCulwktNbXtLJp0TH2u7urxzJQePwrc9Ea8jNiZmJ++U3Y/hbkjGZkrnFF7SmvY3q42jAWf1m8k1vOGGtKENgkqahVcfnsoby58RALVxUzuTCaKtgmOuFu8gVD5FDNYFXB7pRpjLzpGcgsgmV/NCJRsQs4rcPHF/onK/dU8PcPdvL6+oNYGvLTvXz99DFcO3c42akeOLzZdGxa1sLlpeisr8c1KaW41/EV7rT+Bo1VPPnRXvYdaeCGk0eSn7y/5eO0BYcDcESzpxKA3o5JCF1AfnoL0/SHn2D+gBG5KYCZdR0Ir10E/OHtbZw7ZTBjXVFLwqujInHGhHyyU9y8+Ol+7jx/orE62konLImKugAZtkWzNjCUkZlFZkO9nVn98u0w+/oOH1/oPwRDFq+tP8jfP9jFp/vM/IEphRnceMooLppeaGILkc72zVAby1osz7uM7YdeZXTlHra9/Q9meYdx2/z5ULLTPk7P1lDqLUQkBgBDs1NwKFskjDXN7OEZfLLH4o6Fa3nu0sxImps3xpLwuBxcMqOIR5fuZvHWUs6aVNCOs3bckiiv85GBycYqyI85Z1p+h48p9C+qGgI888le/rl0D/srG1AKzp5UwI2njOLE0Tkt1x0L2pl6bby4zx2Zw9KSKYz1v8Uv+YO5s/p/d0TjCs6BkTwhIjEA8LgcFGYls7u8jkCa+fGcOjaXvRmDeXXdQV5bXR4uUxbJAAlz+ayhPLp0NwtXFbdPJDrhboq1JOodqdENs6+H174HI07u8LGFxGZPeR3/+HA3z63YR50/RLLbyZfmjeD6k0cxKi/16DtHLInkNp3rjIn5XLf4Ol635nB88iG+OS2Iq3xzdN6EWBJCf2JkbiofbC+j3vY3eZyKn1w8lQ+3l/PMsvVcaJsSTUVialEG4wvS+O/Gw1TW+6OTe1riYMyCRZ1wN9X6gpHSBz5izuf0AErmYAwwtNY8u2IfT328jzXFlWgNQzKTuO2scVwzZziZKcfw72sNjVVw4FPzuo0X9xNG5RDAxVJrKp8971pcc4aZDQ/OgbKtPb6uQ28hIjFAGJGbwgfbobTWXHy9ThiU7uXHF03m5YWfEL4WO614kVDKzMD+5WubeXlNCdfNG9n6SepKY1503JIIWjETn3TMhCKlzA882GiXStAxFks7n7tTZK5FgrB81xHuWLgOgOlDM/nKqaM5f+rgaIws6IPq/VBVDFXhx30xbcVxBfjaGpNQSvG7K49j2+FaLrcL9AGmTMaW12DiBV31Fvs0IhIDhHDw+nCt8csm2f/5y2YVUbIsCexFtoa0YLFfOrOIX72+medX7T+6SMRWzOzE3X4wpHGFRcKKD5YHLHCXrIZ7BnX4+ACk5sPtn4LnGC4KodfZfKAaDwFuLtzJ/8zyoA68ApuLowJQd5QaY0lZJp00c6jJjAPIbfuCWnHiECbQTXDlAAAgAElEQVR/kvkbIIhIDBBG5JqLYVltENzgse/ClFLMLIyKxLCM5l+J/Iwk5o8fxHtbStl+uJax+WktnyS2YmYnYhL+kIVbmeCgT0fHU1nvJ8uy/cqp+TB4qr1FxZQqaOm5/Tr8/NA6s+JYdQnkjevwOIWe4WC1j684X+XbR56BmGXacXogowgGnQqZw0yadOZQ85cx1Lz2RuuYUVcGJZ/C2LN6/D0kMiISA4SRtkhY9gXTG+PF8VrReRJOgrTE5bOG8t6WUhauKuaO8ya2fJK4ssqdcDeFNO6wJRGKWhKNAQtLKxxKY40+A8flf+nYCd78ESy93/ipW8AXDDWvmxMKmNIJPVw3RzBrSg+2FwtiwT0w4iQjCil59ryDNpKaB+PO7p5B9mN6u8Cf0EMMzzHuprBIxC61m9EYXSXLrVsWiXMmF5Ce5GLRqv2RsuLN6CJ3UyBkRUSitMGKaw+fOUAH17kASLLzgBub1+V/Z/MhJvzwdd7dEuPCqD4AP8uDd37W8XMKHSYQsvCE13AYcyYUzTbp0O0RCKHDyKc8QEj2OCnI8EZEwh3znx9yeHHkuYuWa8skuZ1cNL2Qg9WNLN1R1vJJusjdFAhZkXHsOuKnMRCKtGt7/I1WJ766EZFobkk88sFuAH78Ykym1v6V5nHJ7zp+TqHDxN40DJSMor6EiMQAYkRuKtr+lzvDXpPKfWRUb4v0ac3dBHDFbDPzeeHKVtaZaGHR+I4QtKLupkbtZN1+czEPhDQO25aoaGx192OTNdw8lu9otmlknrG49h1poKbRvnttqOjEyYTO4g9qPCo8gS1xyln0F0QkBhAjc1Mi7hqHst04294AYHFoGgCuVtxNALOGZzMqL5XXNxyMXkBjibMkOuFuClq4bUsigItVe8xFOhCycCjzDmoCnYgN5I41jxV7mm164qO9kecRMVz3XMfPJXSaeEtC0pZ7GhGJAcSI3FSsppbEViMSb1rHm/ajWBJKKS6bWURjwOLVdQead+gqd5OlcSszjqB2smqvEQl/KCo8ft2JmITbWAsEG5ptyrBzgz1OB48t24N1aBPset9szBzW8XMKHcYfFJHoTUQkBhC5qZ5ITMKJBn897FpMXeY4dmuzRq/TasFCiOHSWWGX0/74DVrDoY0xr9toSVQfMOOIIRgTk0hPTWbV3kq01gSCMUHsTomEPZkq0NxnFbQ004oyuei4Iewsq+PgWzHrFYeO/tkI3UO8JSHupp5GRGIA4XY6IoFfBxbsWgzBRqqGnknAno/gbCVwHWZodgonjcnl491H2BteN9uyTE2ltU/H9Iy3JNYVV3Hyve/wzuZD0cYjO+H3E6lbeAuLVhdz72ubufHRT3jq471kYI49asggSmt8FFc0EIzJqvJ1RiTCtXuCzUXCrLGhuP6kkWRSS+6OF0wMI298l8VchPbhD0Vn4Isl0fOISAwgPC4HAXtqjLKCkXhEzfCzIimlzqPEJMJcPsvMQl24qhisELx0K3z8F8ifDJMuNp2auJvueWUj+ysbeHxZTBzg8CYAUre8wP88s4Y/v7+DtzcfxulwMDf1EFo5KRxjYiWr9lbEuZsCuhNf3XDtniYiobUmENK4nQ6mD83iO7nL8GofR6beYEo5iCXRK9T7QzEiIZZETyMiMYBwOx1RN03QZ+IRSVn4hxwfEY9juZsAzps6mBSPk5dW7UI/fyN8+iQUzoTrX4F047Zq6m4Kr8Vd1RBz/EA0JjClMIOnvnoiK394Nit+eDZjMzXKm86MUaY8+Oq9lXHuJr/VicC1UuaiH4iPSQRCRtg8LgeEAlxpvUad9vK32pPNHaxYEj3OztJaVu45wjyn7cp0dMKCFDqEiMQAwuNS+LHvxA58agqgjT0bl9tN0LYkHG1YgzfV6+Izk3P4Qe0vURsXwfCT4IsvQUoOkRIYTdxNLnviU6zLKPZOflh2CvPG5JIbXrM75AenhymFmbidilV7KyIXceikSIBdKNAX1xSwLRW30wGbXia54SD/cZ7J459WEnK4zZg6EZAX2sfhmka++MjHpNKZfGehs4hIDCDczqi7iU0vm8fx5+J2qoi7yaHb4FLx1XJX5Y8527maLWlz4AsLIcleN9heQ7vpxTRcsdMfYw3E3sm7XU2+iqEAON0kuZ1MLcpkY0l1XNrt9tJ61hY3nzHdZlzJzbKboiKhYPmfAaifcSM1jUFW7jkCaCjd3PFzCm2mpjHA9Y98QnFFA9+abxfZm/zZ3h3UAEVEYgDhdjrwhUWirtRc0MeeHSceDusYMYmGSnj8UrIOLuN9xwlcVX079bFrPoRrGzVxN3lcpr3OH3P8GEvC7WhiGdgiAWZ+RtDSkVRYgLqAxVUPf8Tbmw7RIZxuCMW/13DMY0xgq1lYZty5XHj6qQDMdWwxnR6eDzUdPKfQJnzBEDc9vpKNB6q59oThfGWe7cJ0t22xIKFrEZEYQMRZEgBD50JKDi6ng6BugyVRVwb/vAiKP4Zpn2PlCfdR6XfwxoaDMZ1adjeFXUX7jjREaz/FpKA2Wz/bCkQyWWYNzwbMugJhrpozAo3mq4+t4PGPmk+KOyYOFzQRxIBdWPAb++80DSfeTH5GEvNG51Kt7QtUyA/PfKGZq0roGixL8+1n17B0RzkLJhfws0umogLtW5ta6FpEJAYQHqcDv47JDhm/AMB2N9lZT61l8FSXwD8ugIPrzDKilz7MpbNHAk3mTLRiSfiCFsk0Ms+xgYo3f2UutMsfimx3OZtaEn5w2JbEiCzArNEdZmJhFk9/bR45qR5+9O/1/PK1TVitFR5sCYfLCFEM64qruNH5Kmkhu6bT6DMAuP+amVziv4eHBv8Mpl5hRPKVbxuXWsUeqC1tenShgzy7Yh+vrD3A3JE53H/NTJwOFXULhidBCj2KlAofQLhdCn/sv3z8eabd4YhWVW0pu6liDzx2MVTshnm3mnLNSjEqL5XZI7L5cEcZJZUNFGYlx4hEdHetNUu2HmKJ93sMVWXwkb0hNT86tqO4m4ZkJjMkM4kDVTEBTOVgxrAsXvj6yVz/6Mc8/P5O9lc08NsrjyPJ3YYMGKe7WUrr/W9v438dJi2Xix+MvJc0r4tdegi/2g1DZ1/AZ8q3weonIK3AFP0bNR++9PKxzykck932jcD3zpsQ/T+GLQm3WBK9gVgSA4j89CSCsSKRPxkwd/GR9iZ+ekq3wiPnGYE47c6IQIS5YvZQtIZFq21rIhy4jlEJ48YJMVSVsdMazLOjfw7/swG+u5WaIfMA8DibWAExIgFRl1MEZS4gw3NTWHjzScwZmc1/1h7gur8vp7K+DamqDqeZ42Gzt7yejQeqcXvs7KpJn4lsS4opmfvDV3fC1f8yAheuCrsrWkVX6By+oPmfxAl9wLYgXRKT6A1EJAYQOakeHr/pNPMiOSdysTexCvtHGTsX4OA6+Mf5UFNixOGMu5otunPh9CF4XQ4WripGa00kJhHjbrK0jszk3stgnq2bZVYPUwpti4on9puodVxMAmDm8Kz4N6OiO2Snenj8xhO4cPoQPtldwWUPLY3OBm+Byno/JTUh8NdE2sIiNybXFokYgVIx77mqIYDOKIKrnmj1+ELHCWe/xQpzJMFBAte9gojEACNn5FT4/PNw6yeRtriAdtjdVLwCHr0Q6svhwt/DSbe1eLyMJDcLpgxmZ2kdn+6rjHE3RS2DoKVxYf/4PR42lFRHgteWLU4eR4wlYTWfXTtrRFNLIv6rm+R28sDVM7lp/mh2ltZx2UMfsmZfyymyv39rK4V19uSs+6ahX7wN9fHDzHdvIt9Za5+79fIPJVWNMPyEVrcLHcdni4THGWtJhGMS4m7qDUQkBiLjzjFLOdo4HYpQ+KsQCsCuJfDYJeCrgUv/DHNuPOrhLreL/j2/srhFd1MoFLUkUpO9NARC7CitxRcMsbPcXAAu33Q7/Osq+NfVJqgNkcA1mBnZntgMKNX8q+twKO66YBI/u2QKR+r8XPWXZby1sXm6qiPWGqrai1r9GN/0/5XHnD/DeWC13Sk+XPfbK4+LPF8bFp8v2wsue1pZ81toN2FLwhtrSQQkcN2biEgINsqU3y7bCk9eYVI8r/wnHHf1Mfc8ddwg8tO9vLymhMhcuRh3U0hHLYn0FOMyWFtcxce7juBoKAegqGoVbH0dtr5mHgEKpkSO4XU5mVqUET3pUcozXDdvJH+57ngUipseX8Fjy3bHbc/PiFnd7MpH+dOkx/mm/xYq8ufFfBzxbrUrZg/lya8Y62FNsZ39NPwESBtsltIUuoRwTCLuhiAoKbC9iYiEECGAy7iXAK55GiZf3Kb9nA7FpTOLqG4Mssu2DOLdTZapOgtkppof+rriShoDFsOVWUtaz7gW7iqGO/fBHXvM3zk/iTvPOZMHR1+0YEnEcvbkAp656URyUj38+MUN/PyVjZEUWV8gKmCVARd/35rMh8lnkH7CtUc95tQis+xp3ExvhysuAC50Dl+LloQdX5KYRK/Q5SKhlHpEKXVYKbU+pu1KpdQGpZSllDo+pv0cpdRKpdQ6+/HMrh6P0HYqSDeuky8shHFnt2vfy2eb0gkbD9jB4NjAtRVdOzsjNRmXQ7FufxUhyyIVMylNpeaDN92U90jOMn9NuGn+aHwX/MGkno4965hjmj40i0XfOJkxg1L565Jd3PbUahoDociFCGDJzkrK6/x85rhCXMewCDKT3YzOS2VdcVV0TobD0alV+IQoIUvz3hYz5yTOklj7rHkUS6JX6I55Eo8CDwKPxbStBy4DHm7Stwz4jNa6RCk1FXgDKOqGMQnHYMn3ziC5ahFkZUD2yHbvP74gnWlFmew6VGd/q+ItCae9RrHT6WJ8QTobSqppDEQtjGNZBmBiDt6518Pc69s8rmE5KSz8+kl87fGVvLLuAIeqGxmWE/Vtv7axDMjh0plFoJqvVNeU6UMz+fenJewqr2PMoDSTihuS2dddwXtbDgOa0eoArn1Lof4INByBQ/b9prj1eoUutyS01ouBI03aNmmtt7TQd7XWusR+uQFIUkp5m/YTup9hOSnkjpreIYEIM398HjXavgDXlUXajSVhi4HDyfShmfiCFpsOVrdLJDpKVoqHx2+cy2eOK2TFnoronA6gtM5idF4q04dmQkruMY913DBj4URcTg4ntKFyrnBsVuyp4BrnO7zj/a7JrHv2Onj5drMxOScuRiX0HH0pJnE5sFprfczbMqXU3UoprZTSJSUlx+ou9BDnThnMNm0bgmXbIu1By4queOdwRXz7q/dW4lS2xdGNIgEm8P2Hq2Zw82lj4tqPkM5nZxaZuRAxGV+tMX2oEYk1++zgtXI2qwEldIzaxiBjlP17nn09nPtLuPRhuPY5uP3TXh3bQKZPlOVQSk0BfgUsaEt/rfXdwN0Axx9/vBT47yN4XA6qdap5EaiLtIcsjTNiSbjMXTv23Xg4SakHFpNxOBR3nj+RMYNS+fzbf6Sgah07dBGfnWELWxtSWacUZuByqHhLQgLXXUKdL0g6tsvvpG9C7pij7yD0CL0uEkqpocAi4Ita6x29PR6h43hdTnzhRY1iqqTGpsDicDFhcDpup6IxYEVFQvXcimNXHj+M44ZdwoL7sjl+RDbDc20XmVIw4hRIL2h13yS3MxJTCYQs3MopgesuoqzOT7qyM5m8GUfvLPQYvSoSSqks4BXgLq31h705FqHzeFyOGJGIFuMLxkymw+HE63IyYXA66/dXR3dWnVxprp2My0/jtjPHcvakJoJwwyvH3Pe4YZlsPFDNloM1THU4xJLoAg5VN7J4aylf89gWaJKIRF+hO1JgnwKWAROUUsVKqRuVUpcqpYqBecArSqk37O63AmOBHymlPrX/JIUhQfE4HdHlUWMsCUvrSAps2GKYVtR6LaaeQCnFdxZMiASi20M4LrG2uMrMk5DAdbuoagjQGIh+Zpal+e5za1BYzHHtgszhZnlZoU/Q5ZaE1vqaVjYtaqHvPcA9XT0GoXfwuh34dHORCDaJSYBJJX3q45idE2iB+9iYyrVKYhLtwR+0OO//LWb2iGwevHYWAP9Yupsl28o4f3wm3r31kD+xl0cpxNKXspuEBMfjdLQYk7AsjVPFi8Q0O8MpQg9bEp1hfEE6XpfDlOeQFNh2sXJPBQeqGnlj7T7ufXUTmw5U86vXNpOX5uFnF4w0naRGU5+i1wPXQv8hXiSiMYkaX5BC7HkT3nTAXGiPVbCvr+J2OphSmMGa4ipC6Q6c2jJlSHo4rpKILN5mZlRvS/oiqz8ayy0bf4c/ZPGbK44j77XrTaeq4t4boNCMxPllCn0eh0OB04OFMj90y1gPTyzbwziHPYGtyLgYPC4Hk4akR3dOIJEAE5cIWZq6gJ2BHZPhtLa4ksXvvAqrn+yl0fVd3t9SSng2/kzHdnaW1fHFeSM4Y2I+7LFzV6r29d4AhWYk1i9T6PNo5eDV0AlQtgU++Su7y+p4b2spX3fZy3t6UiN9pw/N4pcBO4Q1/txeGG3HOW6YcZfV+GxxsOMSWmu++dRq5i++Bl78Bvhqe2uIfY7SGh8bD1RH41PA2Pw0vn/BpPiO8pn1KcTdJHQp/qDF3XyJU50byPzvT3hsyzAcsetmxyxBeeuZY3l10B3oEx9EORPrqxjOcKr2WabYmB2X+GR3hVmn2a5FV1lRjk5vfQGjY+Go3I3zyDZSU1KIc2YpBYUzISmztV37HEtsV1Mk0w24/+qZzdckP/HmnhyWcAwS65cpJARlZHK3/wvcx0Ocuf3nrBn8YwhX145ZXawgI4kbTh7VO4PsJKNyU0n3uqhotN1NoQC4k3luRbyr5Io/vM52PbRD5/Di50PvN8lU1S13GHu2qdibILy/1YhErCUxudCeD+GrAXcqeNPgjB/0xvCEVhCRELqFRdYpfDl5Fac0LGfwiE+iItFPFrN3OBRTijKo3KfMrPFQgDpfkFfWHYjrN3MQjB00GLTGpQN4dQNeqwGvbsRjNeLVjXitBjy6Ea/ViEc34LVM27jGteQ1VlPpzOVlz/lUNQZp9Ju78O+6n4M9S3vhnXcMy9Is2VZGfrqXxppoyRaW/A62vwP7lpulc0fMS6h06IGAiITQTSi+VvEF3k5ey9g1v4k296N1ijOT3fjDP6GQj9c2H6TeH8LtjDqGflP9PWhMN7WsOli+I+uK+7lu0kUAVDcGuO5vyznl8HpODGwysZAEuKhuKKnmSJ2fK2YP5e2VpdENb/8UUFA4w1hGM7/Qa2MUWkZEQug2DpDLgbnfZ8zyH0Ub+4klAeBxOQlo+ycU9PHcioMAXDBtCFWbUshU9eicMShPinGleFIh8jzFzAfwpEYfY5+7U0yfrBGQkhM5Z0aSm+xUD7XaFlt/bULEJd7falYgnD9+EO+vjJlXcvbdMPOLkHrsMu1C7yAiIXQbJ4/NZcy558P6B6DOXCRIsAD10YgtQ1JSXs3yXUc4YVQOP7hwEnp3NiFXJs5vrury86Z6XNRhi60vMURi8dYylIJTx+ZFiz0CjD9fBKKPIymwQrfx3QUTzPKeo083DelDenM4XY7H5Yi4m/67wQSsrzx+GPnpSWR5wOnqeFbT0UjxOKmLWBJ1R+/cB6huDLBqbwXTh2aRneqJrFIIJITADXREJIRuY+bwbPPEY5dZ6Gc1jjxOFRGJ9zfuJ9Xj5IJpg83GUACc7m45b6rXRW3YkvDXRDdYIag52C3n7AxLt5cTtDSnjTOLOsWmwIZn4At9FxEJoVv44YUxE6TCtXgC9b0zmG7C43IQsEWiqqaWC6YNIcUTDmT7wdk9lkSyx0k9dpXU8MSzoB/+djb8bgLUHOqW83aUcCmO0yYMAuJTYPEee6EnoXcRkRC6hdhS0Ey5zDye+p3eGUw34XE58GImCn7LtZDPzRgU3WgFu82SaPCHqNVhS6IWilfAw/OhxI5/9KHaR1prFm8tJT3JxXH2BMSnv3K82Tj3pl4cmdBWRCSELuWK2Wbi2NTYKq/D5sBd++HUb/fSqLqHxVvLyFHG3XOKcwPH/2cBrH/BFPsL+cHRPSIRtCzq7CndesnvjAVRuinaIXTMZeJ7jJ1ldRRXNHDK2DxcdkHHQSl2yq6j/yQx9GfkvyR0Kb+4dBo3nDySyUOarCzWD90Kltb8JvA56nQSk4akM6f8ZXj+Blj+ZyMS7u5J9w1ZmjrbklD7V0LOGLj4Adi7DN75WZ9y6y3dUQ6Y1NcIoaB5TID5HYJYEkIX43E5mFKYiRoAZbMf+vxsDpLLj4M38OGEu+CW5TDxIjN7GLrtTtnrcrJBj6BY5+E78Xb4+ocw8uSY2E/j0Q/Qg5TWGKtmZG60sCNWWCTkHjUREJEQhA4yPDe6OE6S2wm5Y+DqJ2HUfNPYUNEt5/2fs8ezQxdxiu9+qk76ftRiCc9mDzR0y3k7Qm2jEYT0pBhBCFs63WRpCV2LiIQgdAFJrpifUng+SP2RbjlXZoqby2eZ2E9jICZTqA9mkdX5jEikemNEwmcXLPRmtLCH0NcQkRCELiDZE+NfT7FnENeXd+P5zE+3MRiTRRa+M+9LloQtEmmxItFoi0SSiEQiICIhCF1AIKSjL3LHmMeM7pthnuQyohSXahy2JIJ9RyQOVZv4SJy7SSyJhEIiR4LQBYQvhgDMvgHqymH657rtfOGFeuLcTa6+FZMIWZpP91UytSgjfmGh8h3mMa2gdwYmtAuxJAShEzz9tRMZm5/GtScMjzY6nHD6HZDTfQsqJbltd1NLlkQfiUmsLa4kaGmykpvMPC9ZbWajF87onYEJ7UIsCUHoBCeOzuW/3z6tx88btST6bkzisWV7SKGReRUvwVuvQs0BqC6Bg+sge2S3zUgXuhYRCUFIQLy2SDS0KBJ9Y57E4MwkrnK+yy11j8OHMRtS8mDGtb02LqF9iEgIQgKSbIuELy4FNiwSfcPd5AtYZCm7lPkFv4VxCyB9MLi8vTswoV1ITEIQEpBITCI2BTZcK8oK9MKImtMQCEUKIDJkBmSPEIFIQEQkBCEBGZRmLrb7K2LiD+FaSH1k3Y4GfxAvfvOiH61tPtAQkRCEBGRSoZljsL6kKtrY10QiECIpLBIuEYlERURCEBKQjCQ3I3NTWL+/Gq3tiXzKFgndN0SiMWDhVba7SUQiYelykVBKPaKUOqyUWh/TdqVSaoNSylJKHd+k/11Kqe1KqS1KqXO7ejyC0F+ZUpRJVUOA4rDLKVxVtY9YEoGQFbUkpJhfwtIdlsSjwHlN2tYDlwGLYxuVUpOBq4Ep9j5/UkpJkXlBaANTC83CThtK7DIXEXdTsJdGFE8gZEUD1xKwTli6XCS01ouBI03aNmmtt7TQ/RLgaa21T2u9C9gOzO3qMQlCf2RqkYlLbAjHJZT9c9ZWK3v0LP6Qxqtsweqm9b6F7qe3YxJFwL6Y18V221FRSt2tlNJKKV1SUtJtgxOEvswU25JYvz8sEsoIRR9xNwVDFi5lx0tkgaGEpbdFoqXly3QLbfEdtL5ba6201qqwsLAbhiUIfZ+cVA9FWcmsD7ubwFyM+0jgOhCycCl7LKq3LzVCR+nt/1wxMCzm9VBATANBaCNTCjMorfFxOFyFVjmbxSQO1zTy342HIOjr0bEFQhq3ssyYBsBytv2V3haJl4CrlVJepdQoYBzwcS+PSRAShqlFtsspHJdwOJu5my5+4EMO/OsbcE8+1B7usbEFQhYutLiaEpzuSIF9ClgGTFBKFSulblRKXaqUKgbmAa8opd4A0FpvAJ4FNgKvA7do3UdsZUFIAMLB6/X7bZeTcjYLXB+sbuQ613/Ni5JPe2xsgZCFU4WiWVdCQtLlEq+1vqaVTYta6f9z4OddPQ5BGAhMbRq8bsGS6C0CIY0LSyyJBKe33U2CIHSC/IwkBqV74+dK9JV5EkELJ5YErRMc+e8JQoIztTCD/ZUNvLCqGOpKoXzbUXofM3mwSwhZmsZgyASuxZJIaEQkBCHBCQevv/3smmhj8YqWOwd7ZkGiksoGAiGNxyGB60RHREIQEpwpdkXYOOrKALPOdBz1R5r37QZ2lpnFhrwOLYHrBEdEQhASnPDM6zjsWkkPvLM9vv21O2Dpg2B1b+mOnaW1ALgdlohEgiMiIQgJztDsZDKT3c3aNx2o5q2NhwA4rLNMY1IGvPkD+OdnoGJPt41pZ6mxJCKT6YSERURCEBIcpVRkvkSEoI8HbSvi8llDScLHkfQJ8I2PYOJFsOcDeOhkWL+wW8a0y3Y3uZTEJBIdEQlB6AeE50v8PnAFAAeOVPDq+gNMK8rkqjnDSMJPVcAJqXlw1RPw2T+bVNl/3wK+mi4fz87SWoZkJqGsoIhEgiMiIQj9gCl2htMhsgF4e90+tIZbzxzLiCw3HhXiUIP9c1cKZlwDx10FwQao2t+lY6n3BympamRUXqqZ2CcxiYRGREIQ+gFT7QwnnzaxCce+ZcwqcHDOpAIKdr8IgCe8AFCY5Bzz2NgkA6qThF1Nowelmoq0IhIJjdiBgtAPGJmbCsBWPZRG7eZa5zt8rvYjHK9cBSv/AcAstQXL0jgcdkXWJDsrqrGqS8cSEYm8NOPSksB1QiOWhCD0AxwORUGGl416JCf77uch5+dxpuVEBALgVv9t1PljSnYk2xlPh9bTlYQzm0YNCrub5F40kRGREIR+wp3nTwSgnEzGXPZj1O1r4ZqnYfz5/Dn4Gf5jzeNP7+2I7lA4yzyWtrSycMcJz5EYE7YkxN2U0IhICEI/YVh2CgBnTBjEgimDzcV5wvlw7dOsGHc7AG+sPxjdIS3fPIYCTQ/VKXaV1eFxOijK8oKsJ5HwiEgIQj/h+JE5PPO1E7n38unNtj30hdmke10crvERCNmzrR32BDyr60RCa83O0jpG5KaYCrAglkSCIyIhCP2IE0bnUpCR1Kzd7XRw6awian1BVu2pMI1O+w4/1HWlxUtrfdT4giazKVyyXALXCdmnJIIAABYjSURBVI2IhCAMEE4bPwiAxdtKTUMXWRI7Smsj5T92lYbTX9Oiix+JuymhEZEQhAHCiaNzcTsVi7eaCrE4bZHoZEzirN+9z1cfW0FJZUOk+quZSGdbEuJuSmhEJARhgJDqdXH8iBzW7a+irNYXvcPvgpXssqih8p372XvICNCYcPoriEgkOCISgjCAOG2CcTl9sK3MlOdwuLsku+mbrkVMXvsLTtp4D2BPpNPibuoPiEgIwgBi/jg7LrHVjks43Z2OSXjxM9uxFYBTG95mbHIt2ake2Pex6WAvgCQkJiLxgjCAmDQknUHpXhZvK6W6MYDXchCobyBNa/DXQkOlqeXUUGGeN1TYr2OfV8T125IUX9bjf72LgKvgmc+bht1Lev6NCl2GiIQgDCCUUswfN4iFq4r5w3+38aNQLd7KzfCzvPbFJtwpkJQFGUVxtZ/2WPmc3fgmlG0/ys5CIiEiIQgDjPnj81i4qpj/rC3hR+HGnNGQPcrUc0rKguTsoz+3l0cFWPiji7jcaayFXwav5c+e/wfv/LTn35jQLYhICMIA49Rxg1AKDlX7IDzv7txfwrizO3S8Ru2JPH/dmkNlznFkbXyxC0Yq9AUkcC0IA4ycVA/T7UWKInjTO3w8H7HraytqTv1hh48l9D1EJARhADLfnn3dFTQStSSUgkFTz4JxC7rs+ELvIiIhCAOQcImOPwcvAsDKm9DhY8W6m4ZmJ5PkdsJZ/9e5AQp9BhEJQRiAzBhmFhy6N3gtIxv/hd/dNe6m0Xlp5sngqXDaneb57Os7fGyh9+lykVBKPaKUOqyUWh/TlqOUeksptc1+zLbbM5VSLyul1iilNiilbujq8QiC0ByX08GjN8yJvI6UD+8ANaREno/KS41uOOMu+O42uOj/dfjYQu/THZbEo8B5TdruBN7WWo8D3rZfA9wCbNRaHwecDvxOKeVBEIRu5/QJ+Zw/dTAA/mDHRaJMZ0SejxmUGr8xLd8EKoSEpctFQmu9GDjSpPkS4J/2838Cnw13B9KVUgpIs/fruuL2giAcFbfTXAICId3hYwSSciPPTx6b1+kxCX2LnponUaC1PgCgtT6glLLXTeRB4CWgBEgHrtJaH/OWRil1N/B/AEOGDOmWAQvCQCAn1Rju/1q+h6HZKbhdCrfTgdvpwGM/up0Kt6vJa6cDj8u83q6HRo43elBab70VoZvo7cl05wKfAmcCY4C3lFJLtNbVR9tJa303cDfA8ccf3/FbIEEY4IQD2Pe/05kyGh7uy/km/3PxvK4ZlNCn6CmROKSUGmJbEUOAw3b7DcC9WmsNbFdK7QImAh/30LgEYUBz0fQhZKa4qW4IEAhpAiHL/rOfB81rf9w2C38w/vWo6TfDxKLefjtCN9BTIvES8CXgXvsxPGd/L3AWsEQpVQBMAHb20JgEYcDjcjo4Y0L+sTsKA5YuFwml1FOYTKU8pVQxJnZwL/CsUupGjDBcaXf/GfCoUmodoIA7tNZSfF4QBKGP0OUiobW+ppVNZ7XQtwSQ+fuCIAh9FJlxLQiCILSKiIQgCILQKiISgiAIQquISAiCIAitIiIhCIIgtIoy89gSF6VUKbCnA7sWYsqBdFf/3kLG2bUMtHEmwvtNhDFC3x/nCK31MVefSniR6ChKKa21bnN5yvb27y1knF3LQBtnIrzfRBgjJM44j4W4mwRBEIRWEZEQBEEQWmUgi8RPurl/byHj7FoG2jgT4f0mwhghccZ5VAZsTEIQBEE4NgPZkhAEQRCOgYiEIAiC0CoiEoIgCEKriEgIgiAIrSIiIQiCILRKvxYJpVTCz3YUBEHoTfq1SADu8JP+JBhKqSKllMd+3iffl1LqMqVUdm+P41gopdJjnvfJzxISZ5xdRSJ8xyFxvuedoV+KhFLqGqXUSuDnSqnbAfRRJoQopb6qlPqTUmpMjw2yAyilrlJKrQfuAx6Ho7+v3kAp9QWl1EfAKUBjb4+nNexxrgTuV0rdB33vswRQSn1OKbUBuFcp9Wvo2DjlO961JMr3vEvQWverP+B4YClwIpAHrAG+bG9TMf0U4ASuArYBi4FrgaTefg+tvK859vs6yX69CZjV2+Nq8nneAISAE3p7PEcZowe4HXgfOAkYCmwBLm36HentP2ACsASYa7/+ALi9ne9XvuNd/x3q09/zrv7rF5aEUsod83Iy8LbW+iOtdRnwJPALpVSmDv+XlUrShv/f3tnHW1WVefz7uxBogMKYvInTRSTANyQxNUVRkkowzD46pR9RqSZLZco+Nb5hSjRiOmV9rGaY7G0cwfGt8X1gQqZARV4UwQkoipnUJkUKUEdUeOaPZx3ZnO653HPPPXufffb6fT77c/ba6zlr/569195rr2c961k7gJXAMcD3gBOBUSnTrwhJeyWSQ4ElZvaYpAHAGuBP2TD7c4RruwyYC2yX1CLpfEkNcT0l9Qz3/A382p1lZo+Z2XPAHPyFXNIjU56J5BD8I2d1SP8TMEPSmA6UE+t4HdDo9bweyH0jIekK4FZJF0rqDmwEPpS4aTuBrcDng/wM4BFJl0o61Mx+ZWabgbvwr4RxjWBjlHQ1znO6pHcDzwDvlnQnXkkFfF/SDUE+dbutpOskTUoc+jXw78AD+MvtOOAHkq4P8pnUt1BH7pH0N5LeY2Y/A15K8DmKBoj7n+A5XVIrzqkVODXc332BDcBHg3yb1zNRd2Id7xqeuajndUPWXZnObsBIvGt6G3A68CBwSci7Afg+sAL4Om6CWg5cBCzCv6pmAj8FWhNlTgR+DEwoO1eqJghgWhnPfwMGhry/A6aG/aHA74EDUub3F/jX9x/xh+QdibwhwNXAsJA+OHAcnEEdGQosDHXkZOA7wI1An5DfEn7nAkdkdc8r8Lwp5H0G+EfgceAWYDSwFujbwboT63jnOeaintf9OmRNoIYbeADw+UR6GjA37PcA9gFGh3Qr8G08KuPZ4VhvYBZwe1m51+G9jknAxRnoJeArZTy/ltDtW8DYhPzdwMkpc+wJnBb2HwL+NpHXknyYEhyPy+Ba7gtclkh/EDc/7lV6KYa68ouwfyTwuQbhOS/UhRbcS29k4vr+Q3iBqayctupOrOOd55mLel7vLRfdora6mWb2PG6jLWEp0DvYYt8ws61mtiq40c3AB5p2AlPD/1/BK+MwSeMT5TwCXBnK7lEPfdqDhdrG7jxvBg6WdCjwIm6XnijpJryxXJMyx+34ICj4w/5pSYNC3k4zexNA0t6SbsZfaP+VJkf5smBb2L2OPAsciD/cpet8NNBL0mzgVlI2wbbDczDQu3Q9zWytpN54A/FOM9uc0AGoWHdiHe88z4av52kgF40E0BcgjDm8DTN7NZE8Bfidmb0uaUQYUHov8GjIvwKYDRwk6cRw7GX8y3JiKH9/3Dx1P3CwmX2zXgqF841I2i8TjWFbPG8HzsBNaQtx0xm42eCltDiWYGavhBfcMtxT6Ktl/xsP/CwkJ4UXYd1QzrP0IjKzbQmxY/A6kjw2GDcVAIwzs1sakaekobgNXMBnJJ0iaWAiv726k2Udr4ZnJnW8LZ4lNFo9zwRZd2Xa2/Bu+Hxgadlxsctc0D383ox3WZcCP8Ef/r2BAUG+JHdJsjzgYuCLtqt7uV8Kep0aeN5Y4pXQqz2eX06k6+rGuAeOJVt+iev+uJ18OD6IdwRu7qu7HblKnpeVriFwPG5XHg4c1MA83w+MCPv7hfSzoY4fXEXdSbuOd5ZnanW8Azwbpp5nuWVOYA83sCdwB/Aq7rIIuw8e7Q/0wm22K/Fu6kLcfjg0yHRLyA8KvwvxL5kTcC+FL6WgiwLPmbjP+pll+ZnzrJYjbvYopb+Fm/OeBo5uMJ69w/63cRv9HGABcEgOeM4v8cTnPPwQOKesnJas6065Xs3EM6t63ihb5gT2cAMHAF8AJgP/m8h7B+7p8VO8VR8AvAm8RBjMBsYFudLXwN/j3lCtwEF4V/Y/gatS1uta4PpEuuF4dpDjz3F7vsL9+S2Jr8AG43kU0Ad3KV1HFRPSGokn0A/4EW5+7QGch5vK9gr538i67jQhz8zredZbwyxfKmk6cDju6vdDMzNJewP3m9kHJM3HZ5zOBV4D7sG7fkvMbI6ka3C32Dfwh20j7rq2AO9ZXANca2Z/TJyzh/nkqjT0WhZ4DsS/nGgUnrVylDQceNHqP+5QK8/PAv9qZi/ngSdwbijnCTO7VdJ+wL24I8ZlwHbA8AlnlwHXA1/JsI43Nc+06nnDIetWKjRSFwBPAB/CvyiuwL8w+gOzgsw03ENpRRvyV+NfA2fgg3Qj8ZZ/Cv4QDk6cq1uGejUczxo5dk+DYxfw7JE3nhXK2RtvbH7NLvfRPvig7+gGquPNxjO1et6I227eQhliAnCDmT0iaRPwEeBsfFLRaZLehzcYC/HZ0xNwD4j5wCb8gbvIzGZLWmDB60nSavyLjZCWeZiCrPRqRJ61cHwrJY618qzrF2qdeJaXcwbwObzXcSE+twAz2ybpdtzk2gh1vBl5plnPGw6ZusAmXAGfwu19mNly3F45FB/Mmg88aWZH4pOMxgP/DUw291VeDiwBhko63nZ3i52Kfy1sDmWnYltrR6+G4ZkHjkXk2U45i/G4ZIOAL+GhZ06Xh7Y4nuCf3wD6Rp5NhrQnDnULvwKfkBKylgAtCZ/pZ4Hncfeya3CbYUn+L3Ef76T8Gnywb3Ao/2OSVuEmq8+aWV1D+VahV2Y888CxiDxxh4uOlvMccJSZ/QSfVHcC/jxMNg9UWDdUqW/k2URIxdwk6Th8TGGdpDlmtjUc7x66cr/CG4a/krQE91//OB7M7GFghyTDvUFelbSbvJk9FwYH/y+ccj3exX+8kfTKgmceOBaRZ9ifVWU5/XFvPsxsoaRFiZdgI+kbeTYR6t6TCC33Lfh4wmDgCkkTARK2vm143PweuPfSLbiHQQ98EHtCMC21JX+TPFR4P3x8AjNbncLLolq9UueZB45F5MkuF+7OlPP2zOMUXry16Bt5NgnSMDeNxd1U5+JfTgOAT8jjxSNpFj4dfwtuWmrFb/Rq3AVwT/L98Ju/BY9umRaq1SsLnnngWESeRdM38swxutzcJOlYYLOZrQ+H1gGjJQ02sxckvYKvGDdF0iJ8osrXzWxt+P9M4BPAdWa2qQ35g4DLzWxDkJ8G9LLdY990OTqhV+o888CxiDyBQ4FhuKmp6fWNPJsLXdaTkNRX0oP4BKGz5RErwW2BW4EfSbobj8L5FO7S+k08dspx2rXQ+3rc46Ncfh8zW29m55jZBgWvhWCGqueLt1q9UueZB45F5Ik7Xswrir6RZ3Oiy2ZcSzoA+Bh+s0bgMfofCnk9cLeyAWY2T9KHgS8C91Uhf4mZTQr5LWnZDzuhV+o888CxiDyLpm/k2ZyoqZGQNBWfs/CUmW2Vr1fbgvsdC5hjZi+0If8B4A/46nEV5RP/uxr4k9U5jHMbPDukVxY888CxiDyLpm/k2fyo2twkxyBJjwLn44PL35P0LjN73cxeA/4DHxw6pUx+Or7O7ifxgaY/ky871wmSVuAB0R6oQc8u1ysLnnngWFSeRdM38iwOqmokJHUz73r0AZ43swn41PbNeFhjAMxsCR7EbBRul+2PT477CD4F/m7CBLky+ZGS9pXUK2T9BphhZh80s42d0K9eeqXOMw8ci8gTX95yY63l5EXfyLOAsI4Fx+qOL05+A3AScDrw40S+8EXAT0rI3wgsA36Jx6i5s5J8ONYbXzjoSdwUNaQj3GrZqtUrC5554FhEnkXTN/Is7rbHnoSkk/DIq/3waIlfxUMJnCwPvIf5HZsJXJuQHw2MwSNgXgQc05Z84lST8C+GVcDhVv/p+1XplQXPPHAsIk/cnbUw+kaeBUcHWvhxwHmJ9HfxmDMXACvCsRZgIB4D/yx88Y4pwIkdkG8Nx6YAJ6bVOnZCr9R55oFjEXkWTd/Is9hbR27gO/FlRLuF9LmEVbbwJfwuDftj8ZAaVclnpngOeOaBYxF5Fk3fyLPY2x7NTWb2mpltt12x309lV7yTC4FRkh7AG4iV5p4Hb3RUHtybYU88uhrV6pUFzzxwLCLPoukbeRYbHQ7LIQ/Ba3hclPvC4W3AlcBhwG/N7Hlw+2G18rWr0jnkgWceOELxeBZN33ojLzyLhmpcYHfi0Ss3AUeEln0GsNPMFpduXg3yWSEPPPPAEYrHs2j61ht54VksVGObAo7Fb+Ri4JNdLZ/VlgeeeeBYRJ5F0zfyLN5WVVgOSUNwz6VvmNn2rpbPCnngmQeOUDyeRdO33sgLzyKhywL8RUREREQ0H1Jd4zoiIiIiIl+IjUREREREREXERiIiIiIioiJiIxERERERURGxkYiIiIiIqIjYSEREREREVERsJCJyC0kmqXc7+a2S/rrGc4yXNDGRHhxWTKs7JD0kaVgn/rdI0uR6cIooHmIjEdHMaAVqaiSA8cDbjYSZvWBmJ9dYZodgZqeZ2YY0zhURUQmxkYjIDSSdKWmtpMfkC92Xjv+LpOWSVku6V1K/kPUd4BBJT0u6K8iOkPSwpGWSVkm6sJ3zHY4vmDU1lHF56J1sSsiYpKtCeb+RNEHS9ZKekrRG0qiE7PmSlkpaIWmhpBF70HejpMPC/iJJN0paHM4zOyF3SCh3paTbgL0SeYMk3SXpyXB9rgzH+4fyxya4LZbU4aCfEQVB1nFB4ha3jmz4OukvAyNC+st4xNDewLsScrOA2WF/PLA8kdcdXwFtZEj3AdaV0hXOey1wUyLdCmxKpA24OOyfBbwCTEpwvC3sjwMeBHqG9IeBJXvQeSNwWNhfBNyBf9jtiwfBGx7yVgDnh/1jgR3A5JBeQFiYB+gB/AI4NXF91of//A9wYNb3OW6Nt8Wvhoi84Fh8vZJ1IT0HXw8Z/Ev/XPwl2At/8bWF9wCjgHmJ5Qh6hmNra+B2R/hdiUexfjCkVwBnhv3T8SV9l4ZzC1+usxrcaWY7gS2SfgkMk/QHPIz2P+Mnf0LSagBJvfCGYP+Evn1wfReY2SJJt+PB9D5qZr+rkk9EARAbiYi8oNIiM2PwpS7fb2YvSTqHyuMQwnsBR3Yxt9fD7w4gGZRuB7ueMQE/MLNruuA85WVXCsDWEvKONrM3K8iMwRf4GVIDr4gmRhyTiMgLHgfGSBoe0p8Kv32BLcDLknoC0xL/2YqbZkpYB7wm6bzSAUkjJe3TznnLy+gs7sd7PEPCebtJOqrWQs1sK7AGOCeU+z7g8JC3DTcvXV6Sl3SgpIFh/wt47+u9wOWSurrxjGgCxEYiIhcwsxfxHsL9kh4D3gpZjwIbcHPRw4TlLQOeAdaFAeS7zOwt3OzzcUnPSHoW+C7+oqyEe4GxpYHrGvj/HLgKuE/SKvzFPqWz5ZVhKnCppJXAp4EnEnnn4oP3q4MZ6g6gb2hMpgNTzez3eKM7T1KfLuIU0SSIocIjIiIiIioi9iQiIiIiIioiDlxHFB6S+gPz28i6x8xm1vncnwIuaSPrAjN7up7njojoCKK5KSIiIiKiIqK5KSIiIiKiImIjERERERFREbGRiIiIiIioiNhIRERERERUxP8DeCFh2GiKpw8AAAAASUVORK5CYII=\n"
                        },
                        "metadata": {
                            "needs_background": "light"
                        }
                    }
                ]
            }
        },
        "0782851494984c9381ce9afe5a47ab17": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "2e2c4fdc8b1145bc94817b8849d050e0": {
            "model_name": "SliderStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "b5ab6451b2db4953a25362faed7a48bb": {
            "model_name": "IntSliderModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "shift_list",
                "layout": "IPY_MODEL_0782851494984c9381ce9afe5a47ab17",
                "max": 4,
                "min": -4,
                "style": "IPY_MODEL_2e2c4fdc8b1145bc94817b8849d050e0"
            }
        },
        "7235bbcce8744e01b0d8b10a5f60e8c4": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "32bb75d3a8bc4f9ea394411a09a19c39": {
            "model_name": "VBoxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_dom_classes": [
                    "widget-interact"
                ],
                "children": [
                    "IPY_MODEL_b5ab6451b2db4953a25362faed7a48bb",
                    "IPY_MODEL_e7e75a6a94b643139b59f679a1355e3b"
                ],
                "layout": "IPY_MODEL_7235bbcce8744e01b0d8b10a5f60e8c4"
            }
        },
        "df70b57d17b04103a3ed072483643fae": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "e7e75a6a94b643139b59f679a1355e3b": {
            "model_name": "OutputModel",
            "model_module": "@jupyter-widgets/output",
            "model_module_version": "1.0.0",
            "state": {
                "layout": "IPY_MODEL_df70b57d17b04103a3ed072483643fae",
                "outputs": [
                    {
                        "output_type": "display_data",
                        "data": {
                            "text/plain": "<Figure size 432x288 with 1 Axes>",
                            "image/png": "\n"
                        },
                        "metadata": {
                            "needs_background": "light"
                        }
                    }
                ]
            }
        },
        "e0dfd920eeea448c8bd207fa60b227fb": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "db612dff2cbb4e909dd9e55ef42117eb": {
            "model_name": "SliderStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "26e21f11e0bc45a08a9135dd943f206b": {
            "model_name": "IntSliderModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "shift_list",
                "layout": "IPY_MODEL_e0dfd920eeea448c8bd207fa60b227fb",
                "max": 4,
                "min": -4,
                "style": "IPY_MODEL_db612dff2cbb4e909dd9e55ef42117eb",
                "value": -4
            }
        },
        "64d9b182f19a4ab9a7330c8a325d4a60": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "04aaacf87e9440198f772e707dc69781": {
            "model_name": "VBoxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_dom_classes": [
                    "widget-interact"
                ],
                "children": [
                    "IPY_MODEL_26e21f11e0bc45a08a9135dd943f206b",
                    "IPY_MODEL_d7e81d62fb10492f8048ec63cadc5831"
                ],
                "layout": "IPY_MODEL_64d9b182f19a4ab9a7330c8a325d4a60"
            }
        },
        "9e79641b746e4916abcc474490a8f01d": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "d7e81d62fb10492f8048ec63cadc5831": {
            "model_name": "OutputModel",
            "model_module": "@jupyter-widgets/output",
            "model_module_version": "1.0.0",
            "state": {
                "layout": "IPY_MODEL_9e79641b746e4916abcc474490a8f01d",
                "outputs": [
                    {
                        "output_type": "display_data",
                        "data": {
                            "text/plain": "<Figure size 432x288 with 1 Axes>",
                            "image/png": "\n"
                        },
                        "metadata": {
                            "needs_background": "light"
                        }
                    }
                ]
            }
        },
        "70a801981d5144eebe203418ea250a40": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "ca4b6de74ee546daa60314285778a85e": {
            "model_name": "SliderStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "37ffa7c97e7c482eb384332fa5f70fe3": {
            "model_name": "IntSliderModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "shift_list",
                "layout": "IPY_MODEL_70a801981d5144eebe203418ea250a40",
                "max": 4,
                "min": -4,
                "style": "IPY_MODEL_ca4b6de74ee546daa60314285778a85e",
                "value": -4
            }
        },
        "400336241fde4c15a8639ad8da8f4365": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "cf5933f273604b22bcaad9160548cac0": {
            "model_name": "VBoxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_dom_classes": [
                    "widget-interact"
                ],
                "children": [
                    "IPY_MODEL_37ffa7c97e7c482eb384332fa5f70fe3",
                    "IPY_MODEL_6a7ca1b2e51e47bfa3e2d67f9ad1921c"
                ],
                "layout": "IPY_MODEL_400336241fde4c15a8639ad8da8f4365"
            }
        },
        "6c4ba99f79ca454e86b3a13844ebf944": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "6a7ca1b2e51e47bfa3e2d67f9ad1921c": {
            "model_name": "OutputModel",
            "model_module": "@jupyter-widgets/output",
            "model_module_version": "1.0.0",
            "state": {
                "layout": "IPY_MODEL_6c4ba99f79ca454e86b3a13844ebf944",
                "outputs": [
                    {
                        "output_type": "display_data",
                        "data": {
                            "text/plain": "<IPython.core.display.Javascript object>",
                            "application/javascript": "/* Put everything inside the global mpl namespace */\nwindow.mpl = {};\n\n\nmpl.get_websocket_type = function() {\n    if (typeof(WebSocket) !== 'undefined') {\n        return WebSocket;\n    } else if (typeof(MozWebSocket) !== 'undefined') {\n        return MozWebSocket;\n    } else {\n        alert('Your browser does not have WebSocket support.' +\n              'Please try Chrome, Safari or Firefox ≥ 6. ' +\n              'Firefox 4 and 5 are also supported but you ' +\n              'have to enable WebSockets in about:config.');\n    };\n}\n\nmpl.figure = function(figure_id, websocket, ondownload, parent_element) {\n    this.id = figure_id;\n\n    this.ws = websocket;\n\n    this.supports_binary = (this.ws.binaryType != undefined);\n\n    if (!this.supports_binary) {\n        var warnings = document.getElementById(\"mpl-warnings\");\n        if (warnings) {\n            warnings.style.display = 'block';\n            warnings.textContent = (\n                \"This browser does not support binary websocket messages. \" +\n                    \"Performance may be slow.\");\n        }\n    }\n\n    this.imageObj = new Image();\n\n    this.context = undefined;\n    this.message = undefined;\n    this.canvas = undefined;\n    this.rubberband_canvas = undefined;\n    this.rubberband_context = undefined;\n    this.format_dropdown = undefined;\n\n    this.image_mode = 'full';\n\n    this.root = $('<div/>');\n    this._root_extra_style(this.root)\n    this.root.attr('style', 'display: inline-block');\n\n    $(parent_element).append(this.root);\n\n    this._init_header(this);\n    this._init_canvas(this);\n    this._init_toolbar(this);\n\n    var fig = this;\n\n    this.waiting = false;\n\n    this.ws.onopen =  function () {\n            fig.send_message(\"supports_binary\", {value: fig.supports_binary});\n            fig.send_message(\"send_image_mode\", {});\n            if (mpl.ratio != 1) {\n                fig.send_message(\"set_dpi_ratio\", {'dpi_ratio': mpl.ratio});\n            }\n            fig.send_message(\"refresh\", {});\n        }\n\n    this.imageObj.onload = function() {\n            if (fig.image_mode == 'full') {\n                // Full images could contain transparency (where diff images\n                // almost always do), so we need to clear the canvas so that\n                // there is no ghosting.\n                fig.context.clearRect(0, 0, fig.canvas.width, fig.canvas.height);\n            }\n            fig.context.drawImage(fig.imageObj, 0, 0);\n        };\n\n    this.imageObj.onunload = function() {\n        fig.ws.close();\n    }\n\n    this.ws.onmessage = this._make_on_message_function(this);\n\n    this.ondownload = ondownload;\n}\n\nmpl.figure.prototype._init_header = function() {\n    var titlebar = $(\n        '<div class=\"ui-dialog-titlebar ui-widget-header ui-corner-all ' +\n        'ui-helper-clearfix\"/>');\n    var titletext = $(\n        '<div class=\"ui-dialog-title\" style=\"width: 100%; ' +\n        'text-align: center; padding: 3px;\"/>');\n    titlebar.append(titletext)\n    this.root.append(titlebar);\n    this.header = titletext[0];\n}\n\n\n\nmpl.figure.prototype._canvas_extra_style = function(canvas_div) {\n\n}\n\n\nmpl.figure.prototype._root_extra_style = function(canvas_div) {\n\n}\n\nmpl.figure.prototype._init_canvas = function() {\n    var fig = this;\n\n    var canvas_div = $('<div/>');\n\n    canvas_div.attr('style', 'position: relative; clear: both; outline: 0');\n\n    function canvas_keyboard_event(event) {\n        return fig.key_event(event, event['data']);\n    }\n\n    canvas_div.keydown('key_press', canvas_keyboard_event);\n    canvas_div.keyup('key_release', canvas_keyboard_event);\n    this.canvas_div = canvas_div\n    this._canvas_extra_style(canvas_div)\n    this.root.append(canvas_div);\n\n    var canvas = $('<canvas/>');\n    canvas.addClass('mpl-canvas');\n    canvas.attr('style', \"left: 0; top: 0; z-index: 0; outline: 0\")\n\n    this.canvas = canvas[0];\n    this.context = canvas[0].getContext(\"2d\");\n\n    var backingStore = this.context.backingStorePixelRatio ||\n\tthis.context.webkitBackingStorePixelRatio ||\n\tthis.context.mozBackingStorePixelRatio ||\n\tthis.context.msBackingStorePixelRatio ||\n\tthis.context.oBackingStorePixelRatio ||\n\tthis.context.backingStorePixelRatio || 1;\n\n    mpl.ratio = (window.devicePixelRatio || 1) / backingStore;\n\n    var rubberband = $('<canvas/>');\n    rubberband.attr('style', \"position: absolute; left: 0; top: 0; z-index: 1;\")\n\n    var pass_mouse_events = true;\n\n    canvas_div.resizable({\n        start: function(event, ui) {\n            pass_mouse_events = false;\n        },\n        resize: function(event, ui) {\n            fig.request_resize(ui.size.width, ui.size.height);\n        },\n        stop: function(event, ui) {\n            pass_mouse_events = true;\n            fig.request_resize(ui.size.width, ui.size.height);\n        },\n    });\n\n    function mouse_event_fn(event) {\n        if (pass_mouse_events)\n            return fig.mouse_event(event, event['data']);\n    }\n\n    rubberband.mousedown('button_press', mouse_event_fn);\n    rubberband.mouseup('button_release', mouse_event_fn);\n    // Throttle sequential mouse events to 1 every 20ms.\n    rubberband.mousemove('motion_notify', mouse_event_fn);\n\n    rubberband.mouseenter('figure_enter', mouse_event_fn);\n    rubberband.mouseleave('figure_leave', mouse_event_fn);\n\n    canvas_div.on(\"wheel\", function (event) {\n        event = event.originalEvent;\n        event['data'] = 'scroll'\n        if (event.deltaY < 0) {\n            event.step = 1;\n        } else {\n            event.step = -1;\n        }\n        mouse_event_fn(event);\n    });\n\n    canvas_div.append(canvas);\n    canvas_div.append(rubberband);\n\n    this.rubberband = rubberband;\n    this.rubberband_canvas = rubberband[0];\n    this.rubberband_context = rubberband[0].getContext(\"2d\");\n    this.rubberband_context.strokeStyle = \"#000000\";\n\n    this._resize_canvas = function(width, height) {\n        // Keep the size of the canvas, canvas container, and rubber band\n        // canvas in synch.\n        canvas_div.css('width', width)\n        canvas_div.css('height', height)\n\n        canvas.attr('width', width * mpl.ratio);\n        canvas.attr('height', height * mpl.ratio);\n        canvas.attr('style', 'width: ' + width + 'px; height: ' + height + 'px;');\n\n        rubberband.attr('width', width);\n        rubberband.attr('height', height);\n    }\n\n    // Set the figure to an initial 600x600px, this will subsequently be updated\n    // upon first draw.\n    this._resize_canvas(600, 600);\n\n    // Disable right mouse context menu.\n    $(this.rubberband_canvas).bind(\"contextmenu\",function(e){\n        return false;\n    });\n\n    function set_focus () {\n        canvas.focus();\n        canvas_div.focus();\n    }\n\n    window.setTimeout(set_focus, 100);\n}\n\nmpl.figure.prototype._init_toolbar = function() {\n    var fig = this;\n\n    var nav_element = $('<div/>')\n    nav_element.attr('style', 'width: 100%');\n    this.root.append(nav_element);\n\n    // Define a callback function for later on.\n    function toolbar_event(event) {\n        return fig.toolbar_button_onclick(event['data']);\n    }\n    function toolbar_mouse_event(event) {\n        return fig.toolbar_button_onmouseover(event['data']);\n    }\n\n    for(var toolbar_ind in mpl.toolbar_items) {\n        var name = mpl.toolbar_items[toolbar_ind][0];\n        var tooltip = mpl.toolbar_items[toolbar_ind][1];\n        var image = mpl.toolbar_items[toolbar_ind][2];\n        var method_name = mpl.toolbar_items[toolbar_ind][3];\n\n        if (!name) {\n            // put a spacer in here.\n            continue;\n        }\n        var button = $('<button/>');\n        button.addClass('ui-button ui-widget ui-state-default ui-corner-all ' +\n                        'ui-button-icon-only');\n        button.attr('role', 'button');\n        button.attr('aria-disabled', 'false');\n        button.click(method_name, toolbar_event);\n        button.mouseover(tooltip, toolbar_mouse_event);\n\n        var icon_img = $('<span/>');\n        icon_img.addClass('ui-button-icon-primary ui-icon');\n        icon_img.addClass(image);\n        icon_img.addClass('ui-corner-all');\n\n        var tooltip_span = $('<span/>');\n        tooltip_span.addClass('ui-button-text');\n        tooltip_span.html(tooltip);\n\n        button.append(icon_img);\n        button.append(tooltip_span);\n\n        nav_element.append(button);\n    }\n\n    var fmt_picker_span = $('<span/>');\n\n    var fmt_picker = $('<select/>');\n    fmt_picker.addClass('mpl-toolbar-option ui-widget ui-widget-content');\n    fmt_picker_span.append(fmt_picker);\n    nav_element.append(fmt_picker_span);\n    this.format_dropdown = fmt_picker[0];\n\n    for (var ind in mpl.extensions) {\n        var fmt = mpl.extensions[ind];\n        var option = $(\n            '<option/>', {selected: fmt === mpl.default_extension}).html(fmt);\n        fmt_picker.append(option)\n    }\n\n    // Add hover states to the ui-buttons\n    $( \".ui-button\" ).hover(\n        function() { $(this).addClass(\"ui-state-hover\");},\n        function() { $(this).removeClass(\"ui-state-hover\");}\n    );\n\n    var status_bar = $('<span class=\"mpl-message\"/>');\n    nav_element.append(status_bar);\n    this.message = status_bar[0];\n}\n\nmpl.figure.prototype.request_resize = function(x_pixels, y_pixels) {\n    // Request matplotlib to resize the figure. Matplotlib will then trigger a resize in the client,\n    // which will in turn request a refresh of the image.\n    this.send_message('resize', {'width': x_pixels, 'height': y_pixels});\n}\n\nmpl.figure.prototype.send_message = function(type, properties) {\n    properties['type'] = type;\n    properties['figure_id'] = this.id;\n    this.ws.send(JSON.stringify(properties));\n}\n\nmpl.figure.prototype.send_draw_message = function() {\n    if (!this.waiting) {\n        this.waiting = true;\n        this.ws.send(JSON.stringify({type: \"draw\", figure_id: this.id}));\n    }\n}\n\n\nmpl.figure.prototype.handle_save = function(fig, msg) {\n    var format_dropdown = fig.format_dropdown;\n    var format = format_dropdown.options[format_dropdown.selectedIndex].value;\n    fig.ondownload(fig, format);\n}\n\n\nmpl.figure.prototype.handle_resize = function(fig, msg) {\n    var size = msg['size'];\n    if (size[0] != fig.canvas.width || size[1] != fig.canvas.height) {\n        fig._resize_canvas(size[0], size[1]);\n        fig.send_message(\"refresh\", {});\n    };\n}\n\nmpl.figure.prototype.handle_rubberband = function(fig, msg) {\n    var x0 = msg['x0'] / mpl.ratio;\n    var y0 = (fig.canvas.height - msg['y0']) / mpl.ratio;\n    var x1 = msg['x1'] / mpl.ratio;\n    var y1 = (fig.canvas.height - msg['y1']) / mpl.ratio;\n    x0 = Math.floor(x0) + 0.5;\n    y0 = Math.floor(y0) + 0.5;\n    x1 = Math.floor(x1) + 0.5;\n    y1 = Math.floor(y1) + 0.5;\n    var min_x = Math.min(x0, x1);\n    var min_y = Math.min(y0, y1);\n    var width = Math.abs(x1 - x0);\n    var height = Math.abs(y1 - y0);\n\n    fig.rubberband_context.clearRect(\n        0, 0, fig.canvas.width, fig.canvas.height);\n\n    fig.rubberband_context.strokeRect(min_x, min_y, width, height);\n}\n\nmpl.figure.prototype.handle_figure_label = function(fig, msg) {\n    // Updates the figure title.\n    fig.header.textContent = msg['label'];\n}\n\nmpl.figure.prototype.handle_cursor = function(fig, msg) {\n    var cursor = msg['cursor'];\n    switch(cursor)\n    {\n    case 0:\n        cursor = 'pointer';\n        break;\n    case 1:\n        cursor = 'default';\n        break;\n    case 2:\n        cursor = 'crosshair';\n        break;\n    case 3:\n        cursor = 'move';\n        break;\n    }\n    fig.rubberband_canvas.style.cursor = cursor;\n}\n\nmpl.figure.prototype.handle_message = function(fig, msg) {\n    fig.message.textContent = msg['message'];\n}\n\nmpl.figure.prototype.handle_draw = function(fig, msg) {\n    // Request the server to send over a new figure.\n    fig.send_draw_message();\n}\n\nmpl.figure.prototype.handle_image_mode = function(fig, msg) {\n    fig.image_mode = msg['mode'];\n}\n\nmpl.figure.prototype.updated_canvas_event = function() {\n    // Called whenever the canvas gets updated.\n    this.send_message(\"ack\", {});\n}\n\n// A function to construct a web socket function for onmessage handling.\n// Called in the figure constructor.\nmpl.figure.prototype._make_on_message_function = function(fig) {\n    return function socket_on_message(evt) {\n        if (evt.data instanceof Blob) {\n            /* FIXME: We get \"Resource interpreted as Image but\n             * transferred with MIME type text/plain:\" errors on\n             * Chrome.  But how to set the MIME type?  It doesn't seem\n             * to be part of the websocket stream */\n            evt.data.type = \"image/png\";\n\n            /* Free the memory for the previous frames */\n            if (fig.imageObj.src) {\n                (window.URL || window.webkitURL).revokeObjectURL(\n                    fig.imageObj.src);\n            }\n\n            fig.imageObj.src = (window.URL || window.webkitURL).createObjectURL(\n                evt.data);\n            fig.updated_canvas_event();\n            fig.waiting = false;\n            return;\n        }\n        else if (typeof evt.data === 'string' && evt.data.slice(0, 21) == \"data:image/png;base64\") {\n            fig.imageObj.src = evt.data;\n            fig.updated_canvas_event();\n            fig.waiting = false;\n            return;\n        }\n\n        var msg = JSON.parse(evt.data);\n        var msg_type = msg['type'];\n\n        // Call the  \"handle_{type}\" callback, which takes\n        // the figure and JSON message as its only arguments.\n        try {\n            var callback = fig[\"handle_\" + msg_type];\n        } catch (e) {\n            console.log(\"No handler for the '\" + msg_type + \"' message type: \", msg);\n            return;\n        }\n\n        if (callback) {\n            try {\n                // console.log(\"Handling '\" + msg_type + \"' message: \", msg);\n                callback(fig, msg);\n            } catch (e) {\n                console.log(\"Exception inside the 'handler_\" + msg_type + \"' callback:\", e, e.stack, msg);\n            }\n        }\n    };\n}\n\n// from http://stackoverflow.com/questions/1114465/getting-mouse-location-in-canvas\nmpl.findpos = function(e) {\n    //this section is from http://www.quirksmode.org/js/events_properties.html\n    var targ;\n    if (!e)\n        e = window.event;\n    if (e.target)\n        targ = e.target;\n    else if (e.srcElement)\n        targ = e.srcElement;\n    if (targ.nodeType == 3) // defeat Safari bug\n        targ = targ.parentNode;\n\n    // jQuery normalizes the pageX and pageY\n    // pageX,Y are the mouse positions relative to the document\n    // offset() returns the position of the element relative to the document\n    var x = e.pageX - $(targ).offset().left;\n    var y = e.pageY - $(targ).offset().top;\n\n    return {\"x\": x, \"y\": y};\n};\n\n/*\n * return a copy of an object with only non-object keys\n * we need this to avoid circular references\n * http://stackoverflow.com/a/24161582/3208463\n */\nfunction simpleKeys (original) {\n  return Object.keys(original).reduce(function (obj, key) {\n    if (typeof original[key] !== 'object')\n        obj[key] = original[key]\n    return obj;\n  }, {});\n}\n\nmpl.figure.prototype.mouse_event = function(event, name) {\n    var canvas_pos = mpl.findpos(event)\n\n    if (name === 'button_press')\n    {\n        this.canvas.focus();\n        this.canvas_div.focus();\n    }\n\n    var x = canvas_pos.x * mpl.ratio;\n    var y = canvas_pos.y * mpl.ratio;\n\n    this.send_message(name, {x: x, y: y, button: event.button,\n                             step: event.step,\n                             guiEvent: simpleKeys(event)});\n\n    /* This prevents the web browser from automatically changing to\n     * the text insertion cursor when the button is pressed.  We want\n     * to control all of the cursor setting manually through the\n     * 'cursor' event from matplotlib */\n    event.preventDefault();\n    return false;\n}\n\nmpl.figure.prototype._key_event_extra = function(event, name) {\n    // Handle any extra behaviour associated with a key event\n}\n\nmpl.figure.prototype.key_event = function(event, name) {\n\n    // Prevent repeat events\n    if (name == 'key_press')\n    {\n        if (event.which === this._key)\n            return;\n        else\n            this._key = event.which;\n    }\n    if (name == 'key_release')\n        this._key = null;\n\n    var value = '';\n    if (event.ctrlKey && event.which != 17)\n        value += \"ctrl+\";\n    if (event.altKey && event.which != 18)\n        value += \"alt+\";\n    if (event.shiftKey && event.which != 16)\n        value += \"shift+\";\n\n    value += 'k';\n    value += event.which.toString();\n\n    this._key_event_extra(event, name);\n\n    this.send_message(name, {key: value,\n                             guiEvent: simpleKeys(event)});\n    return false;\n}\n\nmpl.figure.prototype.toolbar_button_onclick = function(name) {\n    if (name == 'download') {\n        this.handle_save(this, null);\n    } else {\n        this.send_message(\"toolbar_button\", {name: name});\n    }\n};\n\nmpl.figure.prototype.toolbar_button_onmouseover = function(tooltip) {\n    this.message.textContent = tooltip;\n};\nmpl.toolbar_items = [[\"Home\", \"Reset original view\", \"fa fa-home icon-home\", \"home\"], [\"Back\", \"Back to previous view\", \"fa fa-arrow-left icon-arrow-left\", \"back\"], [\"Forward\", \"Forward to next view\", \"fa fa-arrow-right icon-arrow-right\", \"forward\"], [\"\", \"\", \"\", \"\"], [\"Pan\", \"Pan axes with left mouse, zoom with right\", \"fa fa-arrows icon-move\", \"pan\"], [\"Zoom\", \"Zoom to rectangle\", \"fa fa-square-o icon-check-empty\", \"zoom\"], [\"\", \"\", \"\", \"\"], [\"Download\", \"Download plot\", \"fa fa-floppy-o icon-save\", \"download\"]];\n\nmpl.extensions = [\"eps\", \"jpeg\", \"pdf\", \"png\", \"ps\", \"raw\", \"svg\", \"tif\"];\n\nmpl.default_extension = \"png\";var comm_websocket_adapter = function(comm) {\n    // Create a \"websocket\"-like object which calls the given IPython comm\n    // object with the appropriate methods. Currently this is a non binary\n    // socket, so there is still some room for performance tuning.\n    var ws = {};\n\n    ws.close = function() {\n        comm.close()\n    };\n    ws.send = function(m) {\n        //console.log('sending', m);\n        comm.send(m);\n    };\n    // Register the callback with on_msg.\n    comm.on_msg(function(msg) {\n        //console.log('receiving', msg['content']['data'], msg);\n        // Pass the mpl event to the overridden (by mpl) onmessage function.\n        ws.onmessage(msg['content']['data'])\n    });\n    return ws;\n}\n\nmpl.mpl_figure_comm = function(comm, msg) {\n    // This is the function which gets called when the mpl process\n    // starts-up an IPython Comm through the \"matplotlib\" channel.\n\n    var id = msg.content.data.id;\n    // Get hold of the div created by the display call when the Comm\n    // socket was opened in Python.\n    var element = $(\"#\" + id);\n    var ws_proxy = comm_websocket_adapter(comm)\n\n    function ondownload(figure, format) {\n        window.open(figure.imageObj.src);\n    }\n\n    var fig = new mpl.figure(id, ws_proxy,\n                           ondownload,\n                           element.get(0));\n\n    // Call onopen now - mpl needs it, as it is assuming we've passed it a real\n    // web socket which is closed, not our websocket->open comm proxy.\n    ws_proxy.onopen();\n\n    fig.parent_element = element.get(0);\n    fig.cell_info = mpl.find_output_cell(\"<div id='\" + id + \"'></div>\");\n    if (!fig.cell_info) {\n        console.error(\"Failed to find cell for figure\", id, fig);\n        return;\n    }\n\n    var output_index = fig.cell_info[2]\n    var cell = fig.cell_info[0];\n\n};\n\nmpl.figure.prototype.handle_close = function(fig, msg) {\n    var width = fig.canvas.width/mpl.ratio\n    fig.root.unbind('remove')\n\n    // Update the output cell to use the data from the current canvas.\n    fig.push_to_output();\n    var dataURL = fig.canvas.toDataURL();\n    // Re-enable the keyboard manager in IPython - without this line, in FF,\n    // the notebook keyboard shortcuts fail.\n    IPython.keyboard_manager.enable()\n    $(fig.parent_element).html('<img src=\"' + dataURL + '\" width=\"' + width + '\">');\n    fig.close_ws(fig, msg);\n}\n\nmpl.figure.prototype.close_ws = function(fig, msg){\n    fig.send_message('closing', msg);\n    // fig.ws.close()\n}\n\nmpl.figure.prototype.push_to_output = function(remove_interactive) {\n    // Turn the data on the canvas into data in the output cell.\n    var width = this.canvas.width/mpl.ratio\n    var dataURL = this.canvas.toDataURL();\n    this.cell_info[1]['text/html'] = '<img src=\"' + dataURL + '\" width=\"' + width + '\">';\n}\n\nmpl.figure.prototype.updated_canvas_event = function() {\n    // Tell IPython that the notebook contents must change.\n    IPython.notebook.set_dirty(true);\n    this.send_message(\"ack\", {});\n    var fig = this;\n    // Wait a second, then push the new image to the DOM so\n    // that it is saved nicely (might be nice to debounce this).\n    setTimeout(function () { fig.push_to_output() }, 1000);\n}\n\nmpl.figure.prototype._init_toolbar = function() {\n    var fig = this;\n\n    var nav_element = $('<div/>')\n    nav_element.attr('style', 'width: 100%');\n    this.root.append(nav_element);\n\n    // Define a callback function for later on.\n    function toolbar_event(event) {\n        return fig.toolbar_button_onclick(event['data']);\n    }\n    function toolbar_mouse_event(event) {\n        return fig.toolbar_button_onmouseover(event['data']);\n    }\n\n    for(var toolbar_ind in mpl.toolbar_items){\n        var name = mpl.toolbar_items[toolbar_ind][0];\n        var tooltip = mpl.toolbar_items[toolbar_ind][1];\n        var image = mpl.toolbar_items[toolbar_ind][2];\n        var method_name = mpl.toolbar_items[toolbar_ind][3];\n\n        if (!name) { continue; };\n\n        var button = $('<button class=\"btn btn-default\" href=\"#\" title=\"' + name + '\"><i class=\"fa ' + image + ' fa-lg\"></i></button>');\n        button.click(method_name, toolbar_event);\n        button.mouseover(tooltip, toolbar_mouse_event);\n        nav_element.append(button);\n    }\n\n    // Add the status bar.\n    var status_bar = $('<span class=\"mpl-message\" style=\"text-align:right; float: right;\"/>');\n    nav_element.append(status_bar);\n    this.message = status_bar[0];\n\n    // Add the close button to the window.\n    var buttongrp = $('<div class=\"btn-group inline pull-right\"></div>');\n    var button = $('<button class=\"btn btn-mini btn-primary\" href=\"#\" title=\"Stop Interaction\"><i class=\"fa fa-power-off icon-remove icon-large\"></i></button>');\n    button.click(function (evt) { fig.handle_close(fig, {}); } );\n    button.mouseover('Stop Interaction', toolbar_mouse_event);\n    buttongrp.append(button);\n    var titlebar = this.root.find($('.ui-dialog-titlebar'));\n    titlebar.prepend(buttongrp);\n}\n\nmpl.figure.prototype._root_extra_style = function(el){\n    var fig = this\n    el.on(\"remove\", function(){\n\tfig.close_ws(fig, {});\n    });\n}\n\nmpl.figure.prototype._canvas_extra_style = function(el){\n    // this is important to make the div 'focusable\n    el.attr('tabindex', 0)\n    // reach out to IPython and tell the keyboard manager to turn it's self\n    // off when our div gets focus\n\n    // location in version 3\n    if (IPython.notebook.keyboard_manager) {\n        IPython.notebook.keyboard_manager.register_events(el);\n    }\n    else {\n        // location in version 2\n        IPython.keyboard_manager.register_events(el);\n    }\n\n}\n\nmpl.figure.prototype._key_event_extra = function(event, name) {\n    var manager = IPython.notebook.keyboard_manager;\n    if (!manager)\n        manager = IPython.keyboard_manager;\n\n    // Check for shift+enter\n    if (event.shiftKey && event.which == 13) {\n        this.canvas_div.blur();\n        event.shiftKey = false;\n        // Send a \"J\" for go to next cell\n        event.which = 74;\n        event.keyCode = 74;\n        manager.command_mode();\n        manager.handle_keydown(event);\n    }\n}\n\nmpl.figure.prototype.handle_save = function(fig, msg) {\n    fig.ondownload(fig, null);\n}\n\n\nmpl.find_output_cell = function(html_output) {\n    // Return the cell and output element which can be found *uniquely* in the notebook.\n    // Note - this is a bit hacky, but it is done because the \"notebook_saving.Notebook\"\n    // IPython event is triggered only after the cells have been serialised, which for\n    // our purposes (turning an active figure into a static one), is too late.\n    var cells = IPython.notebook.get_cells();\n    var ncells = cells.length;\n    for (var i=0; i<ncells; i++) {\n        var cell = cells[i];\n        if (cell.cell_type === 'code'){\n            for (var j=0; j<cell.output_area.outputs.length; j++) {\n                var data = cell.output_area.outputs[j];\n                if (data.data) {\n                    // IPython >= 3 moved mimebundle to data attribute of output\n                    data = data.data;\n                }\n                if (data['text/html'] == html_output) {\n                    return [cell, data, j];\n                }\n            }\n        }\n    }\n}\n\n// Register the function which deals with the matplotlib target/channel.\n// The kernel may be null if the page has been refreshed.\nif (IPython.notebook.kernel != null) {\n    IPython.notebook.kernel.comm_manager.register_target('matplotlib', mpl.mpl_figure_comm);\n}\n"
                        },
                        "metadata": {}
                    },
                    {
                        "output_type": "display_data",
                        "data": {
                            "text/plain": "<IPython.core.display.HTML object>",
                            "text/html": "<div id='3064563a-598d-4994-9661-25f366a6facd'></div>"
                        },
                        "metadata": {}
                    }
                ]
            }
        },
        "2a92de73ca5d4c26bee3fdd48c3572e7": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "3da1f42634724b489585d9ab0337482a": {
            "model_name": "SliderStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "967f898fc8c843b8856882e2496fcb1a": {
            "model_name": "IntSliderModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "shift_list",
                "layout": "IPY_MODEL_2a92de73ca5d4c26bee3fdd48c3572e7",
                "max": 4,
                "min": -4,
                "style": "IPY_MODEL_3da1f42634724b489585d9ab0337482a",
                "value": 2
            }
        },
        "9dd2ebd6ee7b4f3791236b13c4fb70b9": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "7d91de0259d4473681a9a5b4b0380d42": {
            "model_name": "VBoxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_dom_classes": [
                    "widget-interact"
                ],
                "children": [
                    "IPY_MODEL_967f898fc8c843b8856882e2496fcb1a",
                    "IPY_MODEL_1c64d964bd3942838040f640be4a2503"
                ],
                "layout": "IPY_MODEL_9dd2ebd6ee7b4f3791236b13c4fb70b9"
            }
        },
        "98ed0786fe3241e2bb761554ea871852": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "1c64d964bd3942838040f640be4a2503": {
            "model_name": "OutputModel",
            "model_module": "@jupyter-widgets/output",
            "model_module_version": "1.0.0",
            "state": {
                "layout": "IPY_MODEL_98ed0786fe3241e2bb761554ea871852",
                "outputs": [
                    {
                        "output_type": "display_data",
                        "data": {
                            "text/plain": "<IPython.core.display.Javascript object>",
                            "application/javascript": "/* Put everything inside the global mpl namespace */\nwindow.mpl = {};\n\n\nmpl.get_websocket_type = function() {\n    if (typeof(WebSocket) !== 'undefined') {\n        return WebSocket;\n    } else if (typeof(MozWebSocket) !== 'undefined') {\n        return MozWebSocket;\n    } else {\n        alert('Your browser does not have WebSocket support.' +\n              'Please try Chrome, Safari or Firefox ≥ 6. ' +\n              'Firefox 4 and 5 are also supported but you ' +\n              'have to enable WebSockets in about:config.');\n    };\n}\n\nmpl.figure = function(figure_id, websocket, ondownload, parent_element) {\n    this.id = figure_id;\n\n    this.ws = websocket;\n\n    this.supports_binary = (this.ws.binaryType != undefined);\n\n    if (!this.supports_binary) {\n        var warnings = document.getElementById(\"mpl-warnings\");\n        if (warnings) {\n            warnings.style.display = 'block';\n            warnings.textContent = (\n                \"This browser does not support binary websocket messages. \" +\n                    \"Performance may be slow.\");\n        }\n    }\n\n    this.imageObj = new Image();\n\n    this.context = undefined;\n    this.message = undefined;\n    this.canvas = undefined;\n    this.rubberband_canvas = undefined;\n    this.rubberband_context = undefined;\n    this.format_dropdown = undefined;\n\n    this.image_mode = 'full';\n\n    this.root = $('<div/>');\n    this._root_extra_style(this.root)\n    this.root.attr('style', 'display: inline-block');\n\n    $(parent_element).append(this.root);\n\n    this._init_header(this);\n    this._init_canvas(this);\n    this._init_toolbar(this);\n\n    var fig = this;\n\n    this.waiting = false;\n\n    this.ws.onopen =  function () {\n            fig.send_message(\"supports_binary\", {value: fig.supports_binary});\n            fig.send_message(\"send_image_mode\", {});\n            if (mpl.ratio != 1) {\n                fig.send_message(\"set_dpi_ratio\", {'dpi_ratio': mpl.ratio});\n            }\n            fig.send_message(\"refresh\", {});\n        }\n\n    this.imageObj.onload = function() {\n            if (fig.image_mode == 'full') {\n                // Full images could contain transparency (where diff images\n                // almost always do), so we need to clear the canvas so that\n                // there is no ghosting.\n                fig.context.clearRect(0, 0, fig.canvas.width, fig.canvas.height);\n            }\n            fig.context.drawImage(fig.imageObj, 0, 0);\n        };\n\n    this.imageObj.onunload = function() {\n        fig.ws.close();\n    }\n\n    this.ws.onmessage = this._make_on_message_function(this);\n\n    this.ondownload = ondownload;\n}\n\nmpl.figure.prototype._init_header = function() {\n    var titlebar = $(\n        '<div class=\"ui-dialog-titlebar ui-widget-header ui-corner-all ' +\n        'ui-helper-clearfix\"/>');\n    var titletext = $(\n        '<div class=\"ui-dialog-title\" style=\"width: 100%; ' +\n        'text-align: center; padding: 3px;\"/>');\n    titlebar.append(titletext)\n    this.root.append(titlebar);\n    this.header = titletext[0];\n}\n\n\n\nmpl.figure.prototype._canvas_extra_style = function(canvas_div) {\n\n}\n\n\nmpl.figure.prototype._root_extra_style = function(canvas_div) {\n\n}\n\nmpl.figure.prototype._init_canvas = function() {\n    var fig = this;\n\n    var canvas_div = $('<div/>');\n\n    canvas_div.attr('style', 'position: relative; clear: both; outline: 0');\n\n    function canvas_keyboard_event(event) {\n        return fig.key_event(event, event['data']);\n    }\n\n    canvas_div.keydown('key_press', canvas_keyboard_event);\n    canvas_div.keyup('key_release', canvas_keyboard_event);\n    this.canvas_div = canvas_div\n    this._canvas_extra_style(canvas_div)\n    this.root.append(canvas_div);\n\n    var canvas = $('<canvas/>');\n    canvas.addClass('mpl-canvas');\n    canvas.attr('style', \"left: 0; top: 0; z-index: 0; outline: 0\")\n\n    this.canvas = canvas[0];\n    this.context = canvas[0].getContext(\"2d\");\n\n    var backingStore = this.context.backingStorePixelRatio ||\n\tthis.context.webkitBackingStorePixelRatio ||\n\tthis.context.mozBackingStorePixelRatio ||\n\tthis.context.msBackingStorePixelRatio ||\n\tthis.context.oBackingStorePixelRatio ||\n\tthis.context.backingStorePixelRatio || 1;\n\n    mpl.ratio = (window.devicePixelRatio || 1) / backingStore;\n\n    var rubberband = $('<canvas/>');\n    rubberband.attr('style', \"position: absolute; left: 0; top: 0; z-index: 1;\")\n\n    var pass_mouse_events = true;\n\n    canvas_div.resizable({\n        start: function(event, ui) {\n            pass_mouse_events = false;\n        },\n        resize: function(event, ui) {\n            fig.request_resize(ui.size.width, ui.size.height);\n        },\n        stop: function(event, ui) {\n            pass_mouse_events = true;\n            fig.request_resize(ui.size.width, ui.size.height);\n        },\n    });\n\n    function mouse_event_fn(event) {\n        if (pass_mouse_events)\n            return fig.mouse_event(event, event['data']);\n    }\n\n    rubberband.mousedown('button_press', mouse_event_fn);\n    rubberband.mouseup('button_release', mouse_event_fn);\n    // Throttle sequential mouse events to 1 every 20ms.\n    rubberband.mousemove('motion_notify', mouse_event_fn);\n\n    rubberband.mouseenter('figure_enter', mouse_event_fn);\n    rubberband.mouseleave('figure_leave', mouse_event_fn);\n\n    canvas_div.on(\"wheel\", function (event) {\n        event = event.originalEvent;\n        event['data'] = 'scroll'\n        if (event.deltaY < 0) {\n            event.step = 1;\n        } else {\n            event.step = -1;\n        }\n        mouse_event_fn(event);\n    });\n\n    canvas_div.append(canvas);\n    canvas_div.append(rubberband);\n\n    this.rubberband = rubberband;\n    this.rubberband_canvas = rubberband[0];\n    this.rubberband_context = rubberband[0].getContext(\"2d\");\n    this.rubberband_context.strokeStyle = \"#000000\";\n\n    this._resize_canvas = function(width, height) {\n        // Keep the size of the canvas, canvas container, and rubber band\n        // canvas in synch.\n        canvas_div.css('width', width)\n        canvas_div.css('height', height)\n\n        canvas.attr('width', width * mpl.ratio);\n        canvas.attr('height', height * mpl.ratio);\n        canvas.attr('style', 'width: ' + width + 'px; height: ' + height + 'px;');\n\n        rubberband.attr('width', width);\n        rubberband.attr('height', height);\n    }\n\n    // Set the figure to an initial 600x600px, this will subsequently be updated\n    // upon first draw.\n    this._resize_canvas(600, 600);\n\n    // Disable right mouse context menu.\n    $(this.rubberband_canvas).bind(\"contextmenu\",function(e){\n        return false;\n    });\n\n    function set_focus () {\n        canvas.focus();\n        canvas_div.focus();\n    }\n\n    window.setTimeout(set_focus, 100);\n}\n\nmpl.figure.prototype._init_toolbar = function() {\n    var fig = this;\n\n    var nav_element = $('<div/>')\n    nav_element.attr('style', 'width: 100%');\n    this.root.append(nav_element);\n\n    // Define a callback function for later on.\n    function toolbar_event(event) {\n        return fig.toolbar_button_onclick(event['data']);\n    }\n    function toolbar_mouse_event(event) {\n        return fig.toolbar_button_onmouseover(event['data']);\n    }\n\n    for(var toolbar_ind in mpl.toolbar_items) {\n        var name = mpl.toolbar_items[toolbar_ind][0];\n        var tooltip = mpl.toolbar_items[toolbar_ind][1];\n        var image = mpl.toolbar_items[toolbar_ind][2];\n        var method_name = mpl.toolbar_items[toolbar_ind][3];\n\n        if (!name) {\n            // put a spacer in here.\n            continue;\n        }\n        var button = $('<button/>');\n        button.addClass('ui-button ui-widget ui-state-default ui-corner-all ' +\n                        'ui-button-icon-only');\n        button.attr('role', 'button');\n        button.attr('aria-disabled', 'false');\n        button.click(method_name, toolbar_event);\n        button.mouseover(tooltip, toolbar_mouse_event);\n\n        var icon_img = $('<span/>');\n        icon_img.addClass('ui-button-icon-primary ui-icon');\n        icon_img.addClass(image);\n        icon_img.addClass('ui-corner-all');\n\n        var tooltip_span = $('<span/>');\n        tooltip_span.addClass('ui-button-text');\n        tooltip_span.html(tooltip);\n\n        button.append(icon_img);\n        button.append(tooltip_span);\n\n        nav_element.append(button);\n    }\n\n    var fmt_picker_span = $('<span/>');\n\n    var fmt_picker = $('<select/>');\n    fmt_picker.addClass('mpl-toolbar-option ui-widget ui-widget-content');\n    fmt_picker_span.append(fmt_picker);\n    nav_element.append(fmt_picker_span);\n    this.format_dropdown = fmt_picker[0];\n\n    for (var ind in mpl.extensions) {\n        var fmt = mpl.extensions[ind];\n        var option = $(\n            '<option/>', {selected: fmt === mpl.default_extension}).html(fmt);\n        fmt_picker.append(option)\n    }\n\n    // Add hover states to the ui-buttons\n    $( \".ui-button\" ).hover(\n        function() { $(this).addClass(\"ui-state-hover\");},\n        function() { $(this).removeClass(\"ui-state-hover\");}\n    );\n\n    var status_bar = $('<span class=\"mpl-message\"/>');\n    nav_element.append(status_bar);\n    this.message = status_bar[0];\n}\n\nmpl.figure.prototype.request_resize = function(x_pixels, y_pixels) {\n    // Request matplotlib to resize the figure. Matplotlib will then trigger a resize in the client,\n    // which will in turn request a refresh of the image.\n    this.send_message('resize', {'width': x_pixels, 'height': y_pixels});\n}\n\nmpl.figure.prototype.send_message = function(type, properties) {\n    properties['type'] = type;\n    properties['figure_id'] = this.id;\n    this.ws.send(JSON.stringify(properties));\n}\n\nmpl.figure.prototype.send_draw_message = function() {\n    if (!this.waiting) {\n        this.waiting = true;\n        this.ws.send(JSON.stringify({type: \"draw\", figure_id: this.id}));\n    }\n}\n\n\nmpl.figure.prototype.handle_save = function(fig, msg) {\n    var format_dropdown = fig.format_dropdown;\n    var format = format_dropdown.options[format_dropdown.selectedIndex].value;\n    fig.ondownload(fig, format);\n}\n\n\nmpl.figure.prototype.handle_resize = function(fig, msg) {\n    var size = msg['size'];\n    if (size[0] != fig.canvas.width || size[1] != fig.canvas.height) {\n        fig._resize_canvas(size[0], size[1]);\n        fig.send_message(\"refresh\", {});\n    };\n}\n\nmpl.figure.prototype.handle_rubberband = function(fig, msg) {\n    var x0 = msg['x0'] / mpl.ratio;\n    var y0 = (fig.canvas.height - msg['y0']) / mpl.ratio;\n    var x1 = msg['x1'] / mpl.ratio;\n    var y1 = (fig.canvas.height - msg['y1']) / mpl.ratio;\n    x0 = Math.floor(x0) + 0.5;\n    y0 = Math.floor(y0) + 0.5;\n    x1 = Math.floor(x1) + 0.5;\n    y1 = Math.floor(y1) + 0.5;\n    var min_x = Math.min(x0, x1);\n    var min_y = Math.min(y0, y1);\n    var width = Math.abs(x1 - x0);\n    var height = Math.abs(y1 - y0);\n\n    fig.rubberband_context.clearRect(\n        0, 0, fig.canvas.width, fig.canvas.height);\n\n    fig.rubberband_context.strokeRect(min_x, min_y, width, height);\n}\n\nmpl.figure.prototype.handle_figure_label = function(fig, msg) {\n    // Updates the figure title.\n    fig.header.textContent = msg['label'];\n}\n\nmpl.figure.prototype.handle_cursor = function(fig, msg) {\n    var cursor = msg['cursor'];\n    switch(cursor)\n    {\n    case 0:\n        cursor = 'pointer';\n        break;\n    case 1:\n        cursor = 'default';\n        break;\n    case 2:\n        cursor = 'crosshair';\n        break;\n    case 3:\n        cursor = 'move';\n        break;\n    }\n    fig.rubberband_canvas.style.cursor = cursor;\n}\n\nmpl.figure.prototype.handle_message = function(fig, msg) {\n    fig.message.textContent = msg['message'];\n}\n\nmpl.figure.prototype.handle_draw = function(fig, msg) {\n    // Request the server to send over a new figure.\n    fig.send_draw_message();\n}\n\nmpl.figure.prototype.handle_image_mode = function(fig, msg) {\n    fig.image_mode = msg['mode'];\n}\n\nmpl.figure.prototype.updated_canvas_event = function() {\n    // Called whenever the canvas gets updated.\n    this.send_message(\"ack\", {});\n}\n\n// A function to construct a web socket function for onmessage handling.\n// Called in the figure constructor.\nmpl.figure.prototype._make_on_message_function = function(fig) {\n    return function socket_on_message(evt) {\n        if (evt.data instanceof Blob) {\n            /* FIXME: We get \"Resource interpreted as Image but\n             * transferred with MIME type text/plain:\" errors on\n             * Chrome.  But how to set the MIME type?  It doesn't seem\n             * to be part of the websocket stream */\n            evt.data.type = \"image/png\";\n\n            /* Free the memory for the previous frames */\n            if (fig.imageObj.src) {\n                (window.URL || window.webkitURL).revokeObjectURL(\n                    fig.imageObj.src);\n            }\n\n            fig.imageObj.src = (window.URL || window.webkitURL).createObjectURL(\n                evt.data);\n            fig.updated_canvas_event();\n            fig.waiting = false;\n            return;\n        }\n        else if (typeof evt.data === 'string' && evt.data.slice(0, 21) == \"data:image/png;base64\") {\n            fig.imageObj.src = evt.data;\n            fig.updated_canvas_event();\n            fig.waiting = false;\n            return;\n        }\n\n        var msg = JSON.parse(evt.data);\n        var msg_type = msg['type'];\n\n        // Call the  \"handle_{type}\" callback, which takes\n        // the figure and JSON message as its only arguments.\n        try {\n            var callback = fig[\"handle_\" + msg_type];\n        } catch (e) {\n            console.log(\"No handler for the '\" + msg_type + \"' message type: \", msg);\n            return;\n        }\n\n        if (callback) {\n            try {\n                // console.log(\"Handling '\" + msg_type + \"' message: \", msg);\n                callback(fig, msg);\n            } catch (e) {\n                console.log(\"Exception inside the 'handler_\" + msg_type + \"' callback:\", e, e.stack, msg);\n            }\n        }\n    };\n}\n\n// from http://stackoverflow.com/questions/1114465/getting-mouse-location-in-canvas\nmpl.findpos = function(e) {\n    //this section is from http://www.quirksmode.org/js/events_properties.html\n    var targ;\n    if (!e)\n        e = window.event;\n    if (e.target)\n        targ = e.target;\n    else if (e.srcElement)\n        targ = e.srcElement;\n    if (targ.nodeType == 3) // defeat Safari bug\n        targ = targ.parentNode;\n\n    // jQuery normalizes the pageX and pageY\n    // pageX,Y are the mouse positions relative to the document\n    // offset() returns the position of the element relative to the document\n    var x = e.pageX - $(targ).offset().left;\n    var y = e.pageY - $(targ).offset().top;\n\n    return {\"x\": x, \"y\": y};\n};\n\n/*\n * return a copy of an object with only non-object keys\n * we need this to avoid circular references\n * http://stackoverflow.com/a/24161582/3208463\n */\nfunction simpleKeys (original) {\n  return Object.keys(original).reduce(function (obj, key) {\n    if (typeof original[key] !== 'object')\n        obj[key] = original[key]\n    return obj;\n  }, {});\n}\n\nmpl.figure.prototype.mouse_event = function(event, name) {\n    var canvas_pos = mpl.findpos(event)\n\n    if (name === 'button_press')\n    {\n        this.canvas.focus();\n        this.canvas_div.focus();\n    }\n\n    var x = canvas_pos.x * mpl.ratio;\n    var y = canvas_pos.y * mpl.ratio;\n\n    this.send_message(name, {x: x, y: y, button: event.button,\n                             step: event.step,\n                             guiEvent: simpleKeys(event)});\n\n    /* This prevents the web browser from automatically changing to\n     * the text insertion cursor when the button is pressed.  We want\n     * to control all of the cursor setting manually through the\n     * 'cursor' event from matplotlib */\n    event.preventDefault();\n    return false;\n}\n\nmpl.figure.prototype._key_event_extra = function(event, name) {\n    // Handle any extra behaviour associated with a key event\n}\n\nmpl.figure.prototype.key_event = function(event, name) {\n\n    // Prevent repeat events\n    if (name == 'key_press')\n    {\n        if (event.which === this._key)\n            return;\n        else\n            this._key = event.which;\n    }\n    if (name == 'key_release')\n        this._key = null;\n\n    var value = '';\n    if (event.ctrlKey && event.which != 17)\n        value += \"ctrl+\";\n    if (event.altKey && event.which != 18)\n        value += \"alt+\";\n    if (event.shiftKey && event.which != 16)\n        value += \"shift+\";\n\n    value += 'k';\n    value += event.which.toString();\n\n    this._key_event_extra(event, name);\n\n    this.send_message(name, {key: value,\n                             guiEvent: simpleKeys(event)});\n    return false;\n}\n\nmpl.figure.prototype.toolbar_button_onclick = function(name) {\n    if (name == 'download') {\n        this.handle_save(this, null);\n    } else {\n        this.send_message(\"toolbar_button\", {name: name});\n    }\n};\n\nmpl.figure.prototype.toolbar_button_onmouseover = function(tooltip) {\n    this.message.textContent = tooltip;\n};\nmpl.toolbar_items = [[\"Home\", \"Reset original view\", \"fa fa-home icon-home\", \"home\"], [\"Back\", \"Back to previous view\", \"fa fa-arrow-left icon-arrow-left\", \"back\"], [\"Forward\", \"Forward to next view\", \"fa fa-arrow-right icon-arrow-right\", \"forward\"], [\"\", \"\", \"\", \"\"], [\"Pan\", \"Pan axes with left mouse, zoom with right\", \"fa fa-arrows icon-move\", \"pan\"], [\"Zoom\", \"Zoom to rectangle\", \"fa fa-square-o icon-check-empty\", \"zoom\"], [\"\", \"\", \"\", \"\"], [\"Download\", \"Download plot\", \"fa fa-floppy-o icon-save\", \"download\"]];\n\nmpl.extensions = [\"eps\", \"jpeg\", \"pdf\", \"png\", \"ps\", \"raw\", \"svg\", \"tif\"];\n\nmpl.default_extension = \"png\";var comm_websocket_adapter = function(comm) {\n    // Create a \"websocket\"-like object which calls the given IPython comm\n    // object with the appropriate methods. Currently this is a non binary\n    // socket, so there is still some room for performance tuning.\n    var ws = {};\n\n    ws.close = function() {\n        comm.close()\n    };\n    ws.send = function(m) {\n        //console.log('sending', m);\n        comm.send(m);\n    };\n    // Register the callback with on_msg.\n    comm.on_msg(function(msg) {\n        //console.log('receiving', msg['content']['data'], msg);\n        // Pass the mpl event to the overridden (by mpl) onmessage function.\n        ws.onmessage(msg['content']['data'])\n    });\n    return ws;\n}\n\nmpl.mpl_figure_comm = function(comm, msg) {\n    // This is the function which gets called when the mpl process\n    // starts-up an IPython Comm through the \"matplotlib\" channel.\n\n    var id = msg.content.data.id;\n    // Get hold of the div created by the display call when the Comm\n    // socket was opened in Python.\n    var element = $(\"#\" + id);\n    var ws_proxy = comm_websocket_adapter(comm)\n\n    function ondownload(figure, format) {\n        window.open(figure.imageObj.src);\n    }\n\n    var fig = new mpl.figure(id, ws_proxy,\n                           ondownload,\n                           element.get(0));\n\n    // Call onopen now - mpl needs it, as it is assuming we've passed it a real\n    // web socket which is closed, not our websocket->open comm proxy.\n    ws_proxy.onopen();\n\n    fig.parent_element = element.get(0);\n    fig.cell_info = mpl.find_output_cell(\"<div id='\" + id + \"'></div>\");\n    if (!fig.cell_info) {\n        console.error(\"Failed to find cell for figure\", id, fig);\n        return;\n    }\n\n    var output_index = fig.cell_info[2]\n    var cell = fig.cell_info[0];\n\n};\n\nmpl.figure.prototype.handle_close = function(fig, msg) {\n    var width = fig.canvas.width/mpl.ratio\n    fig.root.unbind('remove')\n\n    // Update the output cell to use the data from the current canvas.\n    fig.push_to_output();\n    var dataURL = fig.canvas.toDataURL();\n    // Re-enable the keyboard manager in IPython - without this line, in FF,\n    // the notebook keyboard shortcuts fail.\n    IPython.keyboard_manager.enable()\n    $(fig.parent_element).html('<img src=\"' + dataURL + '\" width=\"' + width + '\">');\n    fig.close_ws(fig, msg);\n}\n\nmpl.figure.prototype.close_ws = function(fig, msg){\n    fig.send_message('closing', msg);\n    // fig.ws.close()\n}\n\nmpl.figure.prototype.push_to_output = function(remove_interactive) {\n    // Turn the data on the canvas into data in the output cell.\n    var width = this.canvas.width/mpl.ratio\n    var dataURL = this.canvas.toDataURL();\n    this.cell_info[1]['text/html'] = '<img src=\"' + dataURL + '\" width=\"' + width + '\">';\n}\n\nmpl.figure.prototype.updated_canvas_event = function() {\n    // Tell IPython that the notebook contents must change.\n    IPython.notebook.set_dirty(true);\n    this.send_message(\"ack\", {});\n    var fig = this;\n    // Wait a second, then push the new image to the DOM so\n    // that it is saved nicely (might be nice to debounce this).\n    setTimeout(function () { fig.push_to_output() }, 1000);\n}\n\nmpl.figure.prototype._init_toolbar = function() {\n    var fig = this;\n\n    var nav_element = $('<div/>')\n    nav_element.attr('style', 'width: 100%');\n    this.root.append(nav_element);\n\n    // Define a callback function for later on.\n    function toolbar_event(event) {\n        return fig.toolbar_button_onclick(event['data']);\n    }\n    function toolbar_mouse_event(event) {\n        return fig.toolbar_button_onmouseover(event['data']);\n    }\n\n    for(var toolbar_ind in mpl.toolbar_items){\n        var name = mpl.toolbar_items[toolbar_ind][0];\n        var tooltip = mpl.toolbar_items[toolbar_ind][1];\n        var image = mpl.toolbar_items[toolbar_ind][2];\n        var method_name = mpl.toolbar_items[toolbar_ind][3];\n\n        if (!name) { continue; };\n\n        var button = $('<button class=\"btn btn-default\" href=\"#\" title=\"' + name + '\"><i class=\"fa ' + image + ' fa-lg\"></i></button>');\n        button.click(method_name, toolbar_event);\n        button.mouseover(tooltip, toolbar_mouse_event);\n        nav_element.append(button);\n    }\n\n    // Add the status bar.\n    var status_bar = $('<span class=\"mpl-message\" style=\"text-align:right; float: right;\"/>');\n    nav_element.append(status_bar);\n    this.message = status_bar[0];\n\n    // Add the close button to the window.\n    var buttongrp = $('<div class=\"btn-group inline pull-right\"></div>');\n    var button = $('<button class=\"btn btn-mini btn-primary\" href=\"#\" title=\"Stop Interaction\"><i class=\"fa fa-power-off icon-remove icon-large\"></i></button>');\n    button.click(function (evt) { fig.handle_close(fig, {}); } );\n    button.mouseover('Stop Interaction', toolbar_mouse_event);\n    buttongrp.append(button);\n    var titlebar = this.root.find($('.ui-dialog-titlebar'));\n    titlebar.prepend(buttongrp);\n}\n\nmpl.figure.prototype._root_extra_style = function(el){\n    var fig = this\n    el.on(\"remove\", function(){\n\tfig.close_ws(fig, {});\n    });\n}\n\nmpl.figure.prototype._canvas_extra_style = function(el){\n    // this is important to make the div 'focusable\n    el.attr('tabindex', 0)\n    // reach out to IPython and tell the keyboard manager to turn it's self\n    // off when our div gets focus\n\n    // location in version 3\n    if (IPython.notebook.keyboard_manager) {\n        IPython.notebook.keyboard_manager.register_events(el);\n    }\n    else {\n        // location in version 2\n        IPython.keyboard_manager.register_events(el);\n    }\n\n}\n\nmpl.figure.prototype._key_event_extra = function(event, name) {\n    var manager = IPython.notebook.keyboard_manager;\n    if (!manager)\n        manager = IPython.keyboard_manager;\n\n    // Check for shift+enter\n    if (event.shiftKey && event.which == 13) {\n        this.canvas_div.blur();\n        event.shiftKey = false;\n        // Send a \"J\" for go to next cell\n        event.which = 74;\n        event.keyCode = 74;\n        manager.command_mode();\n        manager.handle_keydown(event);\n    }\n}\n\nmpl.figure.prototype.handle_save = function(fig, msg) {\n    fig.ondownload(fig, null);\n}\n\n\nmpl.find_output_cell = function(html_output) {\n    // Return the cell and output element which can be found *uniquely* in the notebook.\n    // Note - this is a bit hacky, but it is done because the \"notebook_saving.Notebook\"\n    // IPython event is triggered only after the cells have been serialised, which for\n    // our purposes (turning an active figure into a static one), is too late.\n    var cells = IPython.notebook.get_cells();\n    var ncells = cells.length;\n    for (var i=0; i<ncells; i++) {\n        var cell = cells[i];\n        if (cell.cell_type === 'code'){\n            for (var j=0; j<cell.output_area.outputs.length; j++) {\n                var data = cell.output_area.outputs[j];\n                if (data.data) {\n                    // IPython >= 3 moved mimebundle to data attribute of output\n                    data = data.data;\n                }\n                if (data['text/html'] == html_output) {\n                    return [cell, data, j];\n                }\n            }\n        }\n    }\n}\n\n// Register the function which deals with the matplotlib target/channel.\n// The kernel may be null if the page has been refreshed.\nif (IPython.notebook.kernel != null) {\n    IPython.notebook.kernel.comm_manager.register_target('matplotlib', mpl.mpl_figure_comm);\n}\n"
                        },
                        "metadata": {}
                    },
                    {
                        "output_type": "display_data",
                        "data": {
                            "text/plain": "<IPython.core.display.HTML object>",
                            "text/html": "<div id='3021c3ed-1f0a-4179-9313-0f5e8c44d4af'></div>"
                        },
                        "metadata": {}
                    }
                ]
            }
        },
        "45f305c46d5d44019ffd4073544d065c": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "71b1aee7685840a6942c79ce7fc1c1c7": {
            "model_name": "VBoxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_dom_classes": [
                    "widget-interact"
                ],
                "children": [
                    "IPY_MODEL_504cdc7f9fd34b71b0a0f1bcbb32f2a5",
                    "IPY_MODEL_a2ac96b6c9724ef9967fd2921cb45e85"
                ],
                "layout": "IPY_MODEL_45f305c46d5d44019ffd4073544d065c"
            }
        },
        "7928bcd604f148b985cba01a2e3f2edb": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "3dcde66bee8047d0bb75bbaa955595d2": {
            "model_name": "SliderStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "504cdc7f9fd34b71b0a0f1bcbb32f2a5": {
            "model_name": "IntSliderModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "shift_list",
                "layout": "IPY_MODEL_7928bcd604f148b985cba01a2e3f2edb",
                "max": 12,
                "min": -4,
                "style": "IPY_MODEL_3dcde66bee8047d0bb75bbaa955595d2",
                "value": 7
            }
        },
        "7d0719664739427ebba31b4944b17fa7": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "a2ac96b6c9724ef9967fd2921cb45e85": {
            "model_name": "OutputModel",
            "model_module": "@jupyter-widgets/output",
            "model_module_version": "1.0.0",
            "state": {
                "layout": "IPY_MODEL_7d0719664739427ebba31b4944b17fa7",
                "outputs": [
                    {
                        "output_type": "display_data",
                        "data": {
                            "text/plain": "<IPython.core.display.Javascript object>",
                            "application/javascript": "/* Put everything inside the global mpl namespace */\nwindow.mpl = {};\n\n\nmpl.get_websocket_type = function() {\n    if (typeof(WebSocket) !== 'undefined') {\n        return WebSocket;\n    } else if (typeof(MozWebSocket) !== 'undefined') {\n        return MozWebSocket;\n    } else {\n        alert('Your browser does not have WebSocket support.' +\n              'Please try Chrome, Safari or Firefox ≥ 6. ' +\n              'Firefox 4 and 5 are also supported but you ' +\n              'have to enable WebSockets in about:config.');\n    };\n}\n\nmpl.figure = function(figure_id, websocket, ondownload, parent_element) {\n    this.id = figure_id;\n\n    this.ws = websocket;\n\n    this.supports_binary = (this.ws.binaryType != undefined);\n\n    if (!this.supports_binary) {\n        var warnings = document.getElementById(\"mpl-warnings\");\n        if (warnings) {\n            warnings.style.display = 'block';\n            warnings.textContent = (\n                \"This browser does not support binary websocket messages. \" +\n                    \"Performance may be slow.\");\n        }\n    }\n\n    this.imageObj = new Image();\n\n    this.context = undefined;\n    this.message = undefined;\n    this.canvas = undefined;\n    this.rubberband_canvas = undefined;\n    this.rubberband_context = undefined;\n    this.format_dropdown = undefined;\n\n    this.image_mode = 'full';\n\n    this.root = $('<div/>');\n    this._root_extra_style(this.root)\n    this.root.attr('style', 'display: inline-block');\n\n    $(parent_element).append(this.root);\n\n    this._init_header(this);\n    this._init_canvas(this);\n    this._init_toolbar(this);\n\n    var fig = this;\n\n    this.waiting = false;\n\n    this.ws.onopen =  function () {\n            fig.send_message(\"supports_binary\", {value: fig.supports_binary});\n            fig.send_message(\"send_image_mode\", {});\n            if (mpl.ratio != 1) {\n                fig.send_message(\"set_dpi_ratio\", {'dpi_ratio': mpl.ratio});\n            }\n            fig.send_message(\"refresh\", {});\n        }\n\n    this.imageObj.onload = function() {\n            if (fig.image_mode == 'full') {\n                // Full images could contain transparency (where diff images\n                // almost always do), so we need to clear the canvas so that\n                // there is no ghosting.\n                fig.context.clearRect(0, 0, fig.canvas.width, fig.canvas.height);\n            }\n            fig.context.drawImage(fig.imageObj, 0, 0);\n        };\n\n    this.imageObj.onunload = function() {\n        fig.ws.close();\n    }\n\n    this.ws.onmessage = this._make_on_message_function(this);\n\n    this.ondownload = ondownload;\n}\n\nmpl.figure.prototype._init_header = function() {\n    var titlebar = $(\n        '<div class=\"ui-dialog-titlebar ui-widget-header ui-corner-all ' +\n        'ui-helper-clearfix\"/>');\n    var titletext = $(\n        '<div class=\"ui-dialog-title\" style=\"width: 100%; ' +\n        'text-align: center; padding: 3px;\"/>');\n    titlebar.append(titletext)\n    this.root.append(titlebar);\n    this.header = titletext[0];\n}\n\n\n\nmpl.figure.prototype._canvas_extra_style = function(canvas_div) {\n\n}\n\n\nmpl.figure.prototype._root_extra_style = function(canvas_div) {\n\n}\n\nmpl.figure.prototype._init_canvas = function() {\n    var fig = this;\n\n    var canvas_div = $('<div/>');\n\n    canvas_div.attr('style', 'position: relative; clear: both; outline: 0');\n\n    function canvas_keyboard_event(event) {\n        return fig.key_event(event, event['data']);\n    }\n\n    canvas_div.keydown('key_press', canvas_keyboard_event);\n    canvas_div.keyup('key_release', canvas_keyboard_event);\n    this.canvas_div = canvas_div\n    this._canvas_extra_style(canvas_div)\n    this.root.append(canvas_div);\n\n    var canvas = $('<canvas/>');\n    canvas.addClass('mpl-canvas');\n    canvas.attr('style', \"left: 0; top: 0; z-index: 0; outline: 0\")\n\n    this.canvas = canvas[0];\n    this.context = canvas[0].getContext(\"2d\");\n\n    var backingStore = this.context.backingStorePixelRatio ||\n\tthis.context.webkitBackingStorePixelRatio ||\n\tthis.context.mozBackingStorePixelRatio ||\n\tthis.context.msBackingStorePixelRatio ||\n\tthis.context.oBackingStorePixelRatio ||\n\tthis.context.backingStorePixelRatio || 1;\n\n    mpl.ratio = (window.devicePixelRatio || 1) / backingStore;\n\n    var rubberband = $('<canvas/>');\n    rubberband.attr('style', \"position: absolute; left: 0; top: 0; z-index: 1;\")\n\n    var pass_mouse_events = true;\n\n    canvas_div.resizable({\n        start: function(event, ui) {\n            pass_mouse_events = false;\n        },\n        resize: function(event, ui) {\n            fig.request_resize(ui.size.width, ui.size.height);\n        },\n        stop: function(event, ui) {\n            pass_mouse_events = true;\n            fig.request_resize(ui.size.width, ui.size.height);\n        },\n    });\n\n    function mouse_event_fn(event) {\n        if (pass_mouse_events)\n            return fig.mouse_event(event, event['data']);\n    }\n\n    rubberband.mousedown('button_press', mouse_event_fn);\n    rubberband.mouseup('button_release', mouse_event_fn);\n    // Throttle sequential mouse events to 1 every 20ms.\n    rubberband.mousemove('motion_notify', mouse_event_fn);\n\n    rubberband.mouseenter('figure_enter', mouse_event_fn);\n    rubberband.mouseleave('figure_leave', mouse_event_fn);\n\n    canvas_div.on(\"wheel\", function (event) {\n        event = event.originalEvent;\n        event['data'] = 'scroll'\n        if (event.deltaY < 0) {\n            event.step = 1;\n        } else {\n            event.step = -1;\n        }\n        mouse_event_fn(event);\n    });\n\n    canvas_div.append(canvas);\n    canvas_div.append(rubberband);\n\n    this.rubberband = rubberband;\n    this.rubberband_canvas = rubberband[0];\n    this.rubberband_context = rubberband[0].getContext(\"2d\");\n    this.rubberband_context.strokeStyle = \"#000000\";\n\n    this._resize_canvas = function(width, height) {\n        // Keep the size of the canvas, canvas container, and rubber band\n        // canvas in synch.\n        canvas_div.css('width', width)\n        canvas_div.css('height', height)\n\n        canvas.attr('width', width * mpl.ratio);\n        canvas.attr('height', height * mpl.ratio);\n        canvas.attr('style', 'width: ' + width + 'px; height: ' + height + 'px;');\n\n        rubberband.attr('width', width);\n        rubberband.attr('height', height);\n    }\n\n    // Set the figure to an initial 600x600px, this will subsequently be updated\n    // upon first draw.\n    this._resize_canvas(600, 600);\n\n    // Disable right mouse context menu.\n    $(this.rubberband_canvas).bind(\"contextmenu\",function(e){\n        return false;\n    });\n\n    function set_focus () {\n        canvas.focus();\n        canvas_div.focus();\n    }\n\n    window.setTimeout(set_focus, 100);\n}\n\nmpl.figure.prototype._init_toolbar = function() {\n    var fig = this;\n\n    var nav_element = $('<div/>')\n    nav_element.attr('style', 'width: 100%');\n    this.root.append(nav_element);\n\n    // Define a callback function for later on.\n    function toolbar_event(event) {\n        return fig.toolbar_button_onclick(event['data']);\n    }\n    function toolbar_mouse_event(event) {\n        return fig.toolbar_button_onmouseover(event['data']);\n    }\n\n    for(var toolbar_ind in mpl.toolbar_items) {\n        var name = mpl.toolbar_items[toolbar_ind][0];\n        var tooltip = mpl.toolbar_items[toolbar_ind][1];\n        var image = mpl.toolbar_items[toolbar_ind][2];\n        var method_name = mpl.toolbar_items[toolbar_ind][3];\n\n        if (!name) {\n            // put a spacer in here.\n            continue;\n        }\n        var button = $('<button/>');\n        button.addClass('ui-button ui-widget ui-state-default ui-corner-all ' +\n                        'ui-button-icon-only');\n        button.attr('role', 'button');\n        button.attr('aria-disabled', 'false');\n        button.click(method_name, toolbar_event);\n        button.mouseover(tooltip, toolbar_mouse_event);\n\n        var icon_img = $('<span/>');\n        icon_img.addClass('ui-button-icon-primary ui-icon');\n        icon_img.addClass(image);\n        icon_img.addClass('ui-corner-all');\n\n        var tooltip_span = $('<span/>');\n        tooltip_span.addClass('ui-button-text');\n        tooltip_span.html(tooltip);\n\n        button.append(icon_img);\n        button.append(tooltip_span);\n\n        nav_element.append(button);\n    }\n\n    var fmt_picker_span = $('<span/>');\n\n    var fmt_picker = $('<select/>');\n    fmt_picker.addClass('mpl-toolbar-option ui-widget ui-widget-content');\n    fmt_picker_span.append(fmt_picker);\n    nav_element.append(fmt_picker_span);\n    this.format_dropdown = fmt_picker[0];\n\n    for (var ind in mpl.extensions) {\n        var fmt = mpl.extensions[ind];\n        var option = $(\n            '<option/>', {selected: fmt === mpl.default_extension}).html(fmt);\n        fmt_picker.append(option)\n    }\n\n    // Add hover states to the ui-buttons\n    $( \".ui-button\" ).hover(\n        function() { $(this).addClass(\"ui-state-hover\");},\n        function() { $(this).removeClass(\"ui-state-hover\");}\n    );\n\n    var status_bar = $('<span class=\"mpl-message\"/>');\n    nav_element.append(status_bar);\n    this.message = status_bar[0];\n}\n\nmpl.figure.prototype.request_resize = function(x_pixels, y_pixels) {\n    // Request matplotlib to resize the figure. Matplotlib will then trigger a resize in the client,\n    // which will in turn request a refresh of the image.\n    this.send_message('resize', {'width': x_pixels, 'height': y_pixels});\n}\n\nmpl.figure.prototype.send_message = function(type, properties) {\n    properties['type'] = type;\n    properties['figure_id'] = this.id;\n    this.ws.send(JSON.stringify(properties));\n}\n\nmpl.figure.prototype.send_draw_message = function() {\n    if (!this.waiting) {\n        this.waiting = true;\n        this.ws.send(JSON.stringify({type: \"draw\", figure_id: this.id}));\n    }\n}\n\n\nmpl.figure.prototype.handle_save = function(fig, msg) {\n    var format_dropdown = fig.format_dropdown;\n    var format = format_dropdown.options[format_dropdown.selectedIndex].value;\n    fig.ondownload(fig, format);\n}\n\n\nmpl.figure.prototype.handle_resize = function(fig, msg) {\n    var size = msg['size'];\n    if (size[0] != fig.canvas.width || size[1] != fig.canvas.height) {\n        fig._resize_canvas(size[0], size[1]);\n        fig.send_message(\"refresh\", {});\n    };\n}\n\nmpl.figure.prototype.handle_rubberband = function(fig, msg) {\n    var x0 = msg['x0'] / mpl.ratio;\n    var y0 = (fig.canvas.height - msg['y0']) / mpl.ratio;\n    var x1 = msg['x1'] / mpl.ratio;\n    var y1 = (fig.canvas.height - msg['y1']) / mpl.ratio;\n    x0 = Math.floor(x0) + 0.5;\n    y0 = Math.floor(y0) + 0.5;\n    x1 = Math.floor(x1) + 0.5;\n    y1 = Math.floor(y1) + 0.5;\n    var min_x = Math.min(x0, x1);\n    var min_y = Math.min(y0, y1);\n    var width = Math.abs(x1 - x0);\n    var height = Math.abs(y1 - y0);\n\n    fig.rubberband_context.clearRect(\n        0, 0, fig.canvas.width, fig.canvas.height);\n\n    fig.rubberband_context.strokeRect(min_x, min_y, width, height);\n}\n\nmpl.figure.prototype.handle_figure_label = function(fig, msg) {\n    // Updates the figure title.\n    fig.header.textContent = msg['label'];\n}\n\nmpl.figure.prototype.handle_cursor = function(fig, msg) {\n    var cursor = msg['cursor'];\n    switch(cursor)\n    {\n    case 0:\n        cursor = 'pointer';\n        break;\n    case 1:\n        cursor = 'default';\n        break;\n    case 2:\n        cursor = 'crosshair';\n        break;\n    case 3:\n        cursor = 'move';\n        break;\n    }\n    fig.rubberband_canvas.style.cursor = cursor;\n}\n\nmpl.figure.prototype.handle_message = function(fig, msg) {\n    fig.message.textContent = msg['message'];\n}\n\nmpl.figure.prototype.handle_draw = function(fig, msg) {\n    // Request the server to send over a new figure.\n    fig.send_draw_message();\n}\n\nmpl.figure.prototype.handle_image_mode = function(fig, msg) {\n    fig.image_mode = msg['mode'];\n}\n\nmpl.figure.prototype.updated_canvas_event = function() {\n    // Called whenever the canvas gets updated.\n    this.send_message(\"ack\", {});\n}\n\n// A function to construct a web socket function for onmessage handling.\n// Called in the figure constructor.\nmpl.figure.prototype._make_on_message_function = function(fig) {\n    return function socket_on_message(evt) {\n        if (evt.data instanceof Blob) {\n            /* FIXME: We get \"Resource interpreted as Image but\n             * transferred with MIME type text/plain:\" errors on\n             * Chrome.  But how to set the MIME type?  It doesn't seem\n             * to be part of the websocket stream */\n            evt.data.type = \"image/png\";\n\n            /* Free the memory for the previous frames */\n            if (fig.imageObj.src) {\n                (window.URL || window.webkitURL).revokeObjectURL(\n                    fig.imageObj.src);\n            }\n\n            fig.imageObj.src = (window.URL || window.webkitURL).createObjectURL(\n                evt.data);\n            fig.updated_canvas_event();\n            fig.waiting = false;\n            return;\n        }\n        else if (typeof evt.data === 'string' && evt.data.slice(0, 21) == \"data:image/png;base64\") {\n            fig.imageObj.src = evt.data;\n            fig.updated_canvas_event();\n            fig.waiting = false;\n            return;\n        }\n\n        var msg = JSON.parse(evt.data);\n        var msg_type = msg['type'];\n\n        // Call the  \"handle_{type}\" callback, which takes\n        // the figure and JSON message as its only arguments.\n        try {\n            var callback = fig[\"handle_\" + msg_type];\n        } catch (e) {\n            console.log(\"No handler for the '\" + msg_type + \"' message type: \", msg);\n            return;\n        }\n\n        if (callback) {\n            try {\n                // console.log(\"Handling '\" + msg_type + \"' message: \", msg);\n                callback(fig, msg);\n            } catch (e) {\n                console.log(\"Exception inside the 'handler_\" + msg_type + \"' callback:\", e, e.stack, msg);\n            }\n        }\n    };\n}\n\n// from http://stackoverflow.com/questions/1114465/getting-mouse-location-in-canvas\nmpl.findpos = function(e) {\n    //this section is from http://www.quirksmode.org/js/events_properties.html\n    var targ;\n    if (!e)\n        e = window.event;\n    if (e.target)\n        targ = e.target;\n    else if (e.srcElement)\n        targ = e.srcElement;\n    if (targ.nodeType == 3) // defeat Safari bug\n        targ = targ.parentNode;\n\n    // jQuery normalizes the pageX and pageY\n    // pageX,Y are the mouse positions relative to the document\n    // offset() returns the position of the element relative to the document\n    var x = e.pageX - $(targ).offset().left;\n    var y = e.pageY - $(targ).offset().top;\n\n    return {\"x\": x, \"y\": y};\n};\n\n/*\n * return a copy of an object with only non-object keys\n * we need this to avoid circular references\n * http://stackoverflow.com/a/24161582/3208463\n */\nfunction simpleKeys (original) {\n  return Object.keys(original).reduce(function (obj, key) {\n    if (typeof original[key] !== 'object')\n        obj[key] = original[key]\n    return obj;\n  }, {});\n}\n\nmpl.figure.prototype.mouse_event = function(event, name) {\n    var canvas_pos = mpl.findpos(event)\n\n    if (name === 'button_press')\n    {\n        this.canvas.focus();\n        this.canvas_div.focus();\n    }\n\n    var x = canvas_pos.x * mpl.ratio;\n    var y = canvas_pos.y * mpl.ratio;\n\n    this.send_message(name, {x: x, y: y, button: event.button,\n                             step: event.step,\n                             guiEvent: simpleKeys(event)});\n\n    /* This prevents the web browser from automatically changing to\n     * the text insertion cursor when the button is pressed.  We want\n     * to control all of the cursor setting manually through the\n     * 'cursor' event from matplotlib */\n    event.preventDefault();\n    return false;\n}\n\nmpl.figure.prototype._key_event_extra = function(event, name) {\n    // Handle any extra behaviour associated with a key event\n}\n\nmpl.figure.prototype.key_event = function(event, name) {\n\n    // Prevent repeat events\n    if (name == 'key_press')\n    {\n        if (event.which === this._key)\n            return;\n        else\n            this._key = event.which;\n    }\n    if (name == 'key_release')\n        this._key = null;\n\n    var value = '';\n    if (event.ctrlKey && event.which != 17)\n        value += \"ctrl+\";\n    if (event.altKey && event.which != 18)\n        value += \"alt+\";\n    if (event.shiftKey && event.which != 16)\n        value += \"shift+\";\n\n    value += 'k';\n    value += event.which.toString();\n\n    this._key_event_extra(event, name);\n\n    this.send_message(name, {key: value,\n                             guiEvent: simpleKeys(event)});\n    return false;\n}\n\nmpl.figure.prototype.toolbar_button_onclick = function(name) {\n    if (name == 'download') {\n        this.handle_save(this, null);\n    } else {\n        this.send_message(\"toolbar_button\", {name: name});\n    }\n};\n\nmpl.figure.prototype.toolbar_button_onmouseover = function(tooltip) {\n    this.message.textContent = tooltip;\n};\nmpl.toolbar_items = [[\"Home\", \"Reset original view\", \"fa fa-home icon-home\", \"home\"], [\"Back\", \"Back to previous view\", \"fa fa-arrow-left icon-arrow-left\", \"back\"], [\"Forward\", \"Forward to next view\", \"fa fa-arrow-right icon-arrow-right\", \"forward\"], [\"\", \"\", \"\", \"\"], [\"Pan\", \"Pan axes with left mouse, zoom with right\", \"fa fa-arrows icon-move\", \"pan\"], [\"Zoom\", \"Zoom to rectangle\", \"fa fa-square-o icon-check-empty\", \"zoom\"], [\"\", \"\", \"\", \"\"], [\"Download\", \"Download plot\", \"fa fa-floppy-o icon-save\", \"download\"]];\n\nmpl.extensions = [\"eps\", \"jpeg\", \"pdf\", \"png\", \"ps\", \"raw\", \"svg\", \"tif\"];\n\nmpl.default_extension = \"png\";var comm_websocket_adapter = function(comm) {\n    // Create a \"websocket\"-like object which calls the given IPython comm\n    // object with the appropriate methods. Currently this is a non binary\n    // socket, so there is still some room for performance tuning.\n    var ws = {};\n\n    ws.close = function() {\n        comm.close()\n    };\n    ws.send = function(m) {\n        //console.log('sending', m);\n        comm.send(m);\n    };\n    // Register the callback with on_msg.\n    comm.on_msg(function(msg) {\n        //console.log('receiving', msg['content']['data'], msg);\n        // Pass the mpl event to the overridden (by mpl) onmessage function.\n        ws.onmessage(msg['content']['data'])\n    });\n    return ws;\n}\n\nmpl.mpl_figure_comm = function(comm, msg) {\n    // This is the function which gets called when the mpl process\n    // starts-up an IPython Comm through the \"matplotlib\" channel.\n\n    var id = msg.content.data.id;\n    // Get hold of the div created by the display call when the Comm\n    // socket was opened in Python.\n    var element = $(\"#\" + id);\n    var ws_proxy = comm_websocket_adapter(comm)\n\n    function ondownload(figure, format) {\n        window.open(figure.imageObj.src);\n    }\n\n    var fig = new mpl.figure(id, ws_proxy,\n                           ondownload,\n                           element.get(0));\n\n    // Call onopen now - mpl needs it, as it is assuming we've passed it a real\n    // web socket which is closed, not our websocket->open comm proxy.\n    ws_proxy.onopen();\n\n    fig.parent_element = element.get(0);\n    fig.cell_info = mpl.find_output_cell(\"<div id='\" + id + \"'></div>\");\n    if (!fig.cell_info) {\n        console.error(\"Failed to find cell for figure\", id, fig);\n        return;\n    }\n\n    var output_index = fig.cell_info[2]\n    var cell = fig.cell_info[0];\n\n};\n\nmpl.figure.prototype.handle_close = function(fig, msg) {\n    var width = fig.canvas.width/mpl.ratio\n    fig.root.unbind('remove')\n\n    // Update the output cell to use the data from the current canvas.\n    fig.push_to_output();\n    var dataURL = fig.canvas.toDataURL();\n    // Re-enable the keyboard manager in IPython - without this line, in FF,\n    // the notebook keyboard shortcuts fail.\n    IPython.keyboard_manager.enable()\n    $(fig.parent_element).html('<img src=\"' + dataURL + '\" width=\"' + width + '\">');\n    fig.close_ws(fig, msg);\n}\n\nmpl.figure.prototype.close_ws = function(fig, msg){\n    fig.send_message('closing', msg);\n    // fig.ws.close()\n}\n\nmpl.figure.prototype.push_to_output = function(remove_interactive) {\n    // Turn the data on the canvas into data in the output cell.\n    var width = this.canvas.width/mpl.ratio\n    var dataURL = this.canvas.toDataURL();\n    this.cell_info[1]['text/html'] = '<img src=\"' + dataURL + '\" width=\"' + width + '\">';\n}\n\nmpl.figure.prototype.updated_canvas_event = function() {\n    // Tell IPython that the notebook contents must change.\n    IPython.notebook.set_dirty(true);\n    this.send_message(\"ack\", {});\n    var fig = this;\n    // Wait a second, then push the new image to the DOM so\n    // that it is saved nicely (might be nice to debounce this).\n    setTimeout(function () { fig.push_to_output() }, 1000);\n}\n\nmpl.figure.prototype._init_toolbar = function() {\n    var fig = this;\n\n    var nav_element = $('<div/>')\n    nav_element.attr('style', 'width: 100%');\n    this.root.append(nav_element);\n\n    // Define a callback function for later on.\n    function toolbar_event(event) {\n        return fig.toolbar_button_onclick(event['data']);\n    }\n    function toolbar_mouse_event(event) {\n        return fig.toolbar_button_onmouseover(event['data']);\n    }\n\n    for(var toolbar_ind in mpl.toolbar_items){\n        var name = mpl.toolbar_items[toolbar_ind][0];\n        var tooltip = mpl.toolbar_items[toolbar_ind][1];\n        var image = mpl.toolbar_items[toolbar_ind][2];\n        var method_name = mpl.toolbar_items[toolbar_ind][3];\n\n        if (!name) { continue; };\n\n        var button = $('<button class=\"btn btn-default\" href=\"#\" title=\"' + name + '\"><i class=\"fa ' + image + ' fa-lg\"></i></button>');\n        button.click(method_name, toolbar_event);\n        button.mouseover(tooltip, toolbar_mouse_event);\n        nav_element.append(button);\n    }\n\n    // Add the status bar.\n    var status_bar = $('<span class=\"mpl-message\" style=\"text-align:right; float: right;\"/>');\n    nav_element.append(status_bar);\n    this.message = status_bar[0];\n\n    // Add the close button to the window.\n    var buttongrp = $('<div class=\"btn-group inline pull-right\"></div>');\n    var button = $('<button class=\"btn btn-mini btn-primary\" href=\"#\" title=\"Stop Interaction\"><i class=\"fa fa-power-off icon-remove icon-large\"></i></button>');\n    button.click(function (evt) { fig.handle_close(fig, {}); } );\n    button.mouseover('Stop Interaction', toolbar_mouse_event);\n    buttongrp.append(button);\n    var titlebar = this.root.find($('.ui-dialog-titlebar'));\n    titlebar.prepend(buttongrp);\n}\n\nmpl.figure.prototype._root_extra_style = function(el){\n    var fig = this\n    el.on(\"remove\", function(){\n\tfig.close_ws(fig, {});\n    });\n}\n\nmpl.figure.prototype._canvas_extra_style = function(el){\n    // this is important to make the div 'focusable\n    el.attr('tabindex', 0)\n    // reach out to IPython and tell the keyboard manager to turn it's self\n    // off when our div gets focus\n\n    // location in version 3\n    if (IPython.notebook.keyboard_manager) {\n        IPython.notebook.keyboard_manager.register_events(el);\n    }\n    else {\n        // location in version 2\n        IPython.keyboard_manager.register_events(el);\n    }\n\n}\n\nmpl.figure.prototype._key_event_extra = function(event, name) {\n    var manager = IPython.notebook.keyboard_manager;\n    if (!manager)\n        manager = IPython.keyboard_manager;\n\n    // Check for shift+enter\n    if (event.shiftKey && event.which == 13) {\n        this.canvas_div.blur();\n        event.shiftKey = false;\n        // Send a \"J\" for go to next cell\n        event.which = 74;\n        event.keyCode = 74;\n        manager.command_mode();\n        manager.handle_keydown(event);\n    }\n}\n\nmpl.figure.prototype.handle_save = function(fig, msg) {\n    fig.ondownload(fig, null);\n}\n\n\nmpl.find_output_cell = function(html_output) {\n    // Return the cell and output element which can be found *uniquely* in the notebook.\n    // Note - this is a bit hacky, but it is done because the \"notebook_saving.Notebook\"\n    // IPython event is triggered only after the cells have been serialised, which for\n    // our purposes (turning an active figure into a static one), is too late.\n    var cells = IPython.notebook.get_cells();\n    var ncells = cells.length;\n    for (var i=0; i<ncells; i++) {\n        var cell = cells[i];\n        if (cell.cell_type === 'code'){\n            for (var j=0; j<cell.output_area.outputs.length; j++) {\n                var data = cell.output_area.outputs[j];\n                if (data.data) {\n                    // IPython >= 3 moved mimebundle to data attribute of output\n                    data = data.data;\n                }\n                if (data['text/html'] == html_output) {\n                    return [cell, data, j];\n                }\n            }\n        }\n    }\n}\n\n// Register the function which deals with the matplotlib target/channel.\n// The kernel may be null if the page has been refreshed.\nif (IPython.notebook.kernel != null) {\n    IPython.notebook.kernel.comm_manager.register_target('matplotlib', mpl.mpl_figure_comm);\n}\n"
                        },
                        "metadata": {}
                    },
                    {
                        "output_type": "display_data",
                        "data": {
                            "text/plain": "<IPython.core.display.HTML object>",
                            "text/html": "<div id='7bdd185e-db78-4487-a11b-29c47e66f692'></div>"
                        },
                        "metadata": {}
                    }
                ]
            }
        },
        "5d1dbe85a94f4fce973433293f983ecf": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "0363d1bcb3724d769dc1cdfb81e2028d": {
            "model_name": "VBoxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_dom_classes": [
                    "widget-interact"
                ],
                "children": [
                    "IPY_MODEL_648aae80ce0448ec8e73e904c4bbe913",
                    "IPY_MODEL_766cc6c1802740cfa49110fc9df96523"
                ],
                "layout": "IPY_MODEL_5d1dbe85a94f4fce973433293f983ecf"
            }
        },
        "4a884eafac664fa08de2731ddf6fef06": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "d109f83e6577494dab75b80df2e12472": {
            "model_name": "SliderStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "648aae80ce0448ec8e73e904c4bbe913": {
            "model_name": "IntSliderModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "shift_list",
                "layout": "IPY_MODEL_4a884eafac664fa08de2731ddf6fef06",
                "max": 12,
                "min": -4,
                "style": "IPY_MODEL_d109f83e6577494dab75b80df2e12472",
                "value": 4
            }
        },
        "da5e2ab305604aa686266150bfac4f62": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "766cc6c1802740cfa49110fc9df96523": {
            "model_name": "OutputModel",
            "model_module": "@jupyter-widgets/output",
            "model_module_version": "1.0.0",
            "state": {
                "layout": "IPY_MODEL_da5e2ab305604aa686266150bfac4f62",
                "outputs": [
                    {
                        "output_type": "display_data",
                        "data": {
                            "text/plain": "<IPython.core.display.Javascript object>",
                            "application/javascript": "/* Put everything inside the global mpl namespace */\nwindow.mpl = {};\n\n\nmpl.get_websocket_type = function() {\n    if (typeof(WebSocket) !== 'undefined') {\n        return WebSocket;\n    } else if (typeof(MozWebSocket) !== 'undefined') {\n        return MozWebSocket;\n    } else {\n        alert('Your browser does not have WebSocket support.' +\n              'Please try Chrome, Safari or Firefox ≥ 6. ' +\n              'Firefox 4 and 5 are also supported but you ' +\n              'have to enable WebSockets in about:config.');\n    };\n}\n\nmpl.figure = function(figure_id, websocket, ondownload, parent_element) {\n    this.id = figure_id;\n\n    this.ws = websocket;\n\n    this.supports_binary = (this.ws.binaryType != undefined);\n\n    if (!this.supports_binary) {\n        var warnings = document.getElementById(\"mpl-warnings\");\n        if (warnings) {\n            warnings.style.display = 'block';\n            warnings.textContent = (\n                \"This browser does not support binary websocket messages. \" +\n                    \"Performance may be slow.\");\n        }\n    }\n\n    this.imageObj = new Image();\n\n    this.context = undefined;\n    this.message = undefined;\n    this.canvas = undefined;\n    this.rubberband_canvas = undefined;\n    this.rubberband_context = undefined;\n    this.format_dropdown = undefined;\n\n    this.image_mode = 'full';\n\n    this.root = $('<div/>');\n    this._root_extra_style(this.root)\n    this.root.attr('style', 'display: inline-block');\n\n    $(parent_element).append(this.root);\n\n    this._init_header(this);\n    this._init_canvas(this);\n    this._init_toolbar(this);\n\n    var fig = this;\n\n    this.waiting = false;\n\n    this.ws.onopen =  function () {\n            fig.send_message(\"supports_binary\", {value: fig.supports_binary});\n            fig.send_message(\"send_image_mode\", {});\n            if (mpl.ratio != 1) {\n                fig.send_message(\"set_dpi_ratio\", {'dpi_ratio': mpl.ratio});\n            }\n            fig.send_message(\"refresh\", {});\n        }\n\n    this.imageObj.onload = function() {\n            if (fig.image_mode == 'full') {\n                // Full images could contain transparency (where diff images\n                // almost always do), so we need to clear the canvas so that\n                // there is no ghosting.\n                fig.context.clearRect(0, 0, fig.canvas.width, fig.canvas.height);\n            }\n            fig.context.drawImage(fig.imageObj, 0, 0);\n        };\n\n    this.imageObj.onunload = function() {\n        fig.ws.close();\n    }\n\n    this.ws.onmessage = this._make_on_message_function(this);\n\n    this.ondownload = ondownload;\n}\n\nmpl.figure.prototype._init_header = function() {\n    var titlebar = $(\n        '<div class=\"ui-dialog-titlebar ui-widget-header ui-corner-all ' +\n        'ui-helper-clearfix\"/>');\n    var titletext = $(\n        '<div class=\"ui-dialog-title\" style=\"width: 100%; ' +\n        'text-align: center; padding: 3px;\"/>');\n    titlebar.append(titletext)\n    this.root.append(titlebar);\n    this.header = titletext[0];\n}\n\n\n\nmpl.figure.prototype._canvas_extra_style = function(canvas_div) {\n\n}\n\n\nmpl.figure.prototype._root_extra_style = function(canvas_div) {\n\n}\n\nmpl.figure.prototype._init_canvas = function() {\n    var fig = this;\n\n    var canvas_div = $('<div/>');\n\n    canvas_div.attr('style', 'position: relative; clear: both; outline: 0');\n\n    function canvas_keyboard_event(event) {\n        return fig.key_event(event, event['data']);\n    }\n\n    canvas_div.keydown('key_press', canvas_keyboard_event);\n    canvas_div.keyup('key_release', canvas_keyboard_event);\n    this.canvas_div = canvas_div\n    this._canvas_extra_style(canvas_div)\n    this.root.append(canvas_div);\n\n    var canvas = $('<canvas/>');\n    canvas.addClass('mpl-canvas');\n    canvas.attr('style', \"left: 0; top: 0; z-index: 0; outline: 0\")\n\n    this.canvas = canvas[0];\n    this.context = canvas[0].getContext(\"2d\");\n\n    var backingStore = this.context.backingStorePixelRatio ||\n\tthis.context.webkitBackingStorePixelRatio ||\n\tthis.context.mozBackingStorePixelRatio ||\n\tthis.context.msBackingStorePixelRatio ||\n\tthis.context.oBackingStorePixelRatio ||\n\tthis.context.backingStorePixelRatio || 1;\n\n    mpl.ratio = (window.devicePixelRatio || 1) / backingStore;\n\n    var rubberband = $('<canvas/>');\n    rubberband.attr('style', \"position: absolute; left: 0; top: 0; z-index: 1;\")\n\n    var pass_mouse_events = true;\n\n    canvas_div.resizable({\n        start: function(event, ui) {\n            pass_mouse_events = false;\n        },\n        resize: function(event, ui) {\n            fig.request_resize(ui.size.width, ui.size.height);\n        },\n        stop: function(event, ui) {\n            pass_mouse_events = true;\n            fig.request_resize(ui.size.width, ui.size.height);\n        },\n    });\n\n    function mouse_event_fn(event) {\n        if (pass_mouse_events)\n            return fig.mouse_event(event, event['data']);\n    }\n\n    rubberband.mousedown('button_press', mouse_event_fn);\n    rubberband.mouseup('button_release', mouse_event_fn);\n    // Throttle sequential mouse events to 1 every 20ms.\n    rubberband.mousemove('motion_notify', mouse_event_fn);\n\n    rubberband.mouseenter('figure_enter', mouse_event_fn);\n    rubberband.mouseleave('figure_leave', mouse_event_fn);\n\n    canvas_div.on(\"wheel\", function (event) {\n        event = event.originalEvent;\n        event['data'] = 'scroll'\n        if (event.deltaY < 0) {\n            event.step = 1;\n        } else {\n            event.step = -1;\n        }\n        mouse_event_fn(event);\n    });\n\n    canvas_div.append(canvas);\n    canvas_div.append(rubberband);\n\n    this.rubberband = rubberband;\n    this.rubberband_canvas = rubberband[0];\n    this.rubberband_context = rubberband[0].getContext(\"2d\");\n    this.rubberband_context.strokeStyle = \"#000000\";\n\n    this._resize_canvas = function(width, height) {\n        // Keep the size of the canvas, canvas container, and rubber band\n        // canvas in synch.\n        canvas_div.css('width', width)\n        canvas_div.css('height', height)\n\n        canvas.attr('width', width * mpl.ratio);\n        canvas.attr('height', height * mpl.ratio);\n        canvas.attr('style', 'width: ' + width + 'px; height: ' + height + 'px;');\n\n        rubberband.attr('width', width);\n        rubberband.attr('height', height);\n    }\n\n    // Set the figure to an initial 600x600px, this will subsequently be updated\n    // upon first draw.\n    this._resize_canvas(600, 600);\n\n    // Disable right mouse context menu.\n    $(this.rubberband_canvas).bind(\"contextmenu\",function(e){\n        return false;\n    });\n\n    function set_focus () {\n        canvas.focus();\n        canvas_div.focus();\n    }\n\n    window.setTimeout(set_focus, 100);\n}\n\nmpl.figure.prototype._init_toolbar = function() {\n    var fig = this;\n\n    var nav_element = $('<div/>')\n    nav_element.attr('style', 'width: 100%');\n    this.root.append(nav_element);\n\n    // Define a callback function for later on.\n    function toolbar_event(event) {\n        return fig.toolbar_button_onclick(event['data']);\n    }\n    function toolbar_mouse_event(event) {\n        return fig.toolbar_button_onmouseover(event['data']);\n    }\n\n    for(var toolbar_ind in mpl.toolbar_items) {\n        var name = mpl.toolbar_items[toolbar_ind][0];\n        var tooltip = mpl.toolbar_items[toolbar_ind][1];\n        var image = mpl.toolbar_items[toolbar_ind][2];\n        var method_name = mpl.toolbar_items[toolbar_ind][3];\n\n        if (!name) {\n            // put a spacer in here.\n            continue;\n        }\n        var button = $('<button/>');\n        button.addClass('ui-button ui-widget ui-state-default ui-corner-all ' +\n                        'ui-button-icon-only');\n        button.attr('role', 'button');\n        button.attr('aria-disabled', 'false');\n        button.click(method_name, toolbar_event);\n        button.mouseover(tooltip, toolbar_mouse_event);\n\n        var icon_img = $('<span/>');\n        icon_img.addClass('ui-button-icon-primary ui-icon');\n        icon_img.addClass(image);\n        icon_img.addClass('ui-corner-all');\n\n        var tooltip_span = $('<span/>');\n        tooltip_span.addClass('ui-button-text');\n        tooltip_span.html(tooltip);\n\n        button.append(icon_img);\n        button.append(tooltip_span);\n\n        nav_element.append(button);\n    }\n\n    var fmt_picker_span = $('<span/>');\n\n    var fmt_picker = $('<select/>');\n    fmt_picker.addClass('mpl-toolbar-option ui-widget ui-widget-content');\n    fmt_picker_span.append(fmt_picker);\n    nav_element.append(fmt_picker_span);\n    this.format_dropdown = fmt_picker[0];\n\n    for (var ind in mpl.extensions) {\n        var fmt = mpl.extensions[ind];\n        var option = $(\n            '<option/>', {selected: fmt === mpl.default_extension}).html(fmt);\n        fmt_picker.append(option)\n    }\n\n    // Add hover states to the ui-buttons\n    $( \".ui-button\" ).hover(\n        function() { $(this).addClass(\"ui-state-hover\");},\n        function() { $(this).removeClass(\"ui-state-hover\");}\n    );\n\n    var status_bar = $('<span class=\"mpl-message\"/>');\n    nav_element.append(status_bar);\n    this.message = status_bar[0];\n}\n\nmpl.figure.prototype.request_resize = function(x_pixels, y_pixels) {\n    // Request matplotlib to resize the figure. Matplotlib will then trigger a resize in the client,\n    // which will in turn request a refresh of the image.\n    this.send_message('resize', {'width': x_pixels, 'height': y_pixels});\n}\n\nmpl.figure.prototype.send_message = function(type, properties) {\n    properties['type'] = type;\n    properties['figure_id'] = this.id;\n    this.ws.send(JSON.stringify(properties));\n}\n\nmpl.figure.prototype.send_draw_message = function() {\n    if (!this.waiting) {\n        this.waiting = true;\n        this.ws.send(JSON.stringify({type: \"draw\", figure_id: this.id}));\n    }\n}\n\n\nmpl.figure.prototype.handle_save = function(fig, msg) {\n    var format_dropdown = fig.format_dropdown;\n    var format = format_dropdown.options[format_dropdown.selectedIndex].value;\n    fig.ondownload(fig, format);\n}\n\n\nmpl.figure.prototype.handle_resize = function(fig, msg) {\n    var size = msg['size'];\n    if (size[0] != fig.canvas.width || size[1] != fig.canvas.height) {\n        fig._resize_canvas(size[0], size[1]);\n        fig.send_message(\"refresh\", {});\n    };\n}\n\nmpl.figure.prototype.handle_rubberband = function(fig, msg) {\n    var x0 = msg['x0'] / mpl.ratio;\n    var y0 = (fig.canvas.height - msg['y0']) / mpl.ratio;\n    var x1 = msg['x1'] / mpl.ratio;\n    var y1 = (fig.canvas.height - msg['y1']) / mpl.ratio;\n    x0 = Math.floor(x0) + 0.5;\n    y0 = Math.floor(y0) + 0.5;\n    x1 = Math.floor(x1) + 0.5;\n    y1 = Math.floor(y1) + 0.5;\n    var min_x = Math.min(x0, x1);\n    var min_y = Math.min(y0, y1);\n    var width = Math.abs(x1 - x0);\n    var height = Math.abs(y1 - y0);\n\n    fig.rubberband_context.clearRect(\n        0, 0, fig.canvas.width, fig.canvas.height);\n\n    fig.rubberband_context.strokeRect(min_x, min_y, width, height);\n}\n\nmpl.figure.prototype.handle_figure_label = function(fig, msg) {\n    // Updates the figure title.\n    fig.header.textContent = msg['label'];\n}\n\nmpl.figure.prototype.handle_cursor = function(fig, msg) {\n    var cursor = msg['cursor'];\n    switch(cursor)\n    {\n    case 0:\n        cursor = 'pointer';\n        break;\n    case 1:\n        cursor = 'default';\n        break;\n    case 2:\n        cursor = 'crosshair';\n        break;\n    case 3:\n        cursor = 'move';\n        break;\n    }\n    fig.rubberband_canvas.style.cursor = cursor;\n}\n\nmpl.figure.prototype.handle_message = function(fig, msg) {\n    fig.message.textContent = msg['message'];\n}\n\nmpl.figure.prototype.handle_draw = function(fig, msg) {\n    // Request the server to send over a new figure.\n    fig.send_draw_message();\n}\n\nmpl.figure.prototype.handle_image_mode = function(fig, msg) {\n    fig.image_mode = msg['mode'];\n}\n\nmpl.figure.prototype.updated_canvas_event = function() {\n    // Called whenever the canvas gets updated.\n    this.send_message(\"ack\", {});\n}\n\n// A function to construct a web socket function for onmessage handling.\n// Called in the figure constructor.\nmpl.figure.prototype._make_on_message_function = function(fig) {\n    return function socket_on_message(evt) {\n        if (evt.data instanceof Blob) {\n            /* FIXME: We get \"Resource interpreted as Image but\n             * transferred with MIME type text/plain:\" errors on\n             * Chrome.  But how to set the MIME type?  It doesn't seem\n             * to be part of the websocket stream */\n            evt.data.type = \"image/png\";\n\n            /* Free the memory for the previous frames */\n            if (fig.imageObj.src) {\n                (window.URL || window.webkitURL).revokeObjectURL(\n                    fig.imageObj.src);\n            }\n\n            fig.imageObj.src = (window.URL || window.webkitURL).createObjectURL(\n                evt.data);\n            fig.updated_canvas_event();\n            fig.waiting = false;\n            return;\n        }\n        else if (typeof evt.data === 'string' && evt.data.slice(0, 21) == \"data:image/png;base64\") {\n            fig.imageObj.src = evt.data;\n            fig.updated_canvas_event();\n            fig.waiting = false;\n            return;\n        }\n\n        var msg = JSON.parse(evt.data);\n        var msg_type = msg['type'];\n\n        // Call the  \"handle_{type}\" callback, which takes\n        // the figure and JSON message as its only arguments.\n        try {\n            var callback = fig[\"handle_\" + msg_type];\n        } catch (e) {\n            console.log(\"No handler for the '\" + msg_type + \"' message type: \", msg);\n            return;\n        }\n\n        if (callback) {\n            try {\n                // console.log(\"Handling '\" + msg_type + \"' message: \", msg);\n                callback(fig, msg);\n            } catch (e) {\n                console.log(\"Exception inside the 'handler_\" + msg_type + \"' callback:\", e, e.stack, msg);\n            }\n        }\n    };\n}\n\n// from http://stackoverflow.com/questions/1114465/getting-mouse-location-in-canvas\nmpl.findpos = function(e) {\n    //this section is from http://www.quirksmode.org/js/events_properties.html\n    var targ;\n    if (!e)\n        e = window.event;\n    if (e.target)\n        targ = e.target;\n    else if (e.srcElement)\n        targ = e.srcElement;\n    if (targ.nodeType == 3) // defeat Safari bug\n        targ = targ.parentNode;\n\n    // jQuery normalizes the pageX and pageY\n    // pageX,Y are the mouse positions relative to the document\n    // offset() returns the position of the element relative to the document\n    var x = e.pageX - $(targ).offset().left;\n    var y = e.pageY - $(targ).offset().top;\n\n    return {\"x\": x, \"y\": y};\n};\n\n/*\n * return a copy of an object with only non-object keys\n * we need this to avoid circular references\n * http://stackoverflow.com/a/24161582/3208463\n */\nfunction simpleKeys (original) {\n  return Object.keys(original).reduce(function (obj, key) {\n    if (typeof original[key] !== 'object')\n        obj[key] = original[key]\n    return obj;\n  }, {});\n}\n\nmpl.figure.prototype.mouse_event = function(event, name) {\n    var canvas_pos = mpl.findpos(event)\n\n    if (name === 'button_press')\n    {\n        this.canvas.focus();\n        this.canvas_div.focus();\n    }\n\n    var x = canvas_pos.x * mpl.ratio;\n    var y = canvas_pos.y * mpl.ratio;\n\n    this.send_message(name, {x: x, y: y, button: event.button,\n                             step: event.step,\n                             guiEvent: simpleKeys(event)});\n\n    /* This prevents the web browser from automatically changing to\n     * the text insertion cursor when the button is pressed.  We want\n     * to control all of the cursor setting manually through the\n     * 'cursor' event from matplotlib */\n    event.preventDefault();\n    return false;\n}\n\nmpl.figure.prototype._key_event_extra = function(event, name) {\n    // Handle any extra behaviour associated with a key event\n}\n\nmpl.figure.prototype.key_event = function(event, name) {\n\n    // Prevent repeat events\n    if (name == 'key_press')\n    {\n        if (event.which === this._key)\n            return;\n        else\n            this._key = event.which;\n    }\n    if (name == 'key_release')\n        this._key = null;\n\n    var value = '';\n    if (event.ctrlKey && event.which != 17)\n        value += \"ctrl+\";\n    if (event.altKey && event.which != 18)\n        value += \"alt+\";\n    if (event.shiftKey && event.which != 16)\n        value += \"shift+\";\n\n    value += 'k';\n    value += event.which.toString();\n\n    this._key_event_extra(event, name);\n\n    this.send_message(name, {key: value,\n                             guiEvent: simpleKeys(event)});\n    return false;\n}\n\nmpl.figure.prototype.toolbar_button_onclick = function(name) {\n    if (name == 'download') {\n        this.handle_save(this, null);\n    } else {\n        this.send_message(\"toolbar_button\", {name: name});\n    }\n};\n\nmpl.figure.prototype.toolbar_button_onmouseover = function(tooltip) {\n    this.message.textContent = tooltip;\n};\nmpl.toolbar_items = [[\"Home\", \"Reset original view\", \"fa fa-home icon-home\", \"home\"], [\"Back\", \"Back to previous view\", \"fa fa-arrow-left icon-arrow-left\", \"back\"], [\"Forward\", \"Forward to next view\", \"fa fa-arrow-right icon-arrow-right\", \"forward\"], [\"\", \"\", \"\", \"\"], [\"Pan\", \"Pan axes with left mouse, zoom with right\", \"fa fa-arrows icon-move\", \"pan\"], [\"Zoom\", \"Zoom to rectangle\", \"fa fa-square-o icon-check-empty\", \"zoom\"], [\"\", \"\", \"\", \"\"], [\"Download\", \"Download plot\", \"fa fa-floppy-o icon-save\", \"download\"]];\n\nmpl.extensions = [\"eps\", \"jpeg\", \"pdf\", \"png\", \"ps\", \"raw\", \"svg\", \"tif\"];\n\nmpl.default_extension = \"png\";var comm_websocket_adapter = function(comm) {\n    // Create a \"websocket\"-like object which calls the given IPython comm\n    // object with the appropriate methods. Currently this is a non binary\n    // socket, so there is still some room for performance tuning.\n    var ws = {};\n\n    ws.close = function() {\n        comm.close()\n    };\n    ws.send = function(m) {\n        //console.log('sending', m);\n        comm.send(m);\n    };\n    // Register the callback with on_msg.\n    comm.on_msg(function(msg) {\n        //console.log('receiving', msg['content']['data'], msg);\n        // Pass the mpl event to the overridden (by mpl) onmessage function.\n        ws.onmessage(msg['content']['data'])\n    });\n    return ws;\n}\n\nmpl.mpl_figure_comm = function(comm, msg) {\n    // This is the function which gets called when the mpl process\n    // starts-up an IPython Comm through the \"matplotlib\" channel.\n\n    var id = msg.content.data.id;\n    // Get hold of the div created by the display call when the Comm\n    // socket was opened in Python.\n    var element = $(\"#\" + id);\n    var ws_proxy = comm_websocket_adapter(comm)\n\n    function ondownload(figure, format) {\n        window.open(figure.imageObj.src);\n    }\n\n    var fig = new mpl.figure(id, ws_proxy,\n                           ondownload,\n                           element.get(0));\n\n    // Call onopen now - mpl needs it, as it is assuming we've passed it a real\n    // web socket which is closed, not our websocket->open comm proxy.\n    ws_proxy.onopen();\n\n    fig.parent_element = element.get(0);\n    fig.cell_info = mpl.find_output_cell(\"<div id='\" + id + \"'></div>\");\n    if (!fig.cell_info) {\n        console.error(\"Failed to find cell for figure\", id, fig);\n        return;\n    }\n\n    var output_index = fig.cell_info[2]\n    var cell = fig.cell_info[0];\n\n};\n\nmpl.figure.prototype.handle_close = function(fig, msg) {\n    var width = fig.canvas.width/mpl.ratio\n    fig.root.unbind('remove')\n\n    // Update the output cell to use the data from the current canvas.\n    fig.push_to_output();\n    var dataURL = fig.canvas.toDataURL();\n    // Re-enable the keyboard manager in IPython - without this line, in FF,\n    // the notebook keyboard shortcuts fail.\n    IPython.keyboard_manager.enable()\n    $(fig.parent_element).html('<img src=\"' + dataURL + '\" width=\"' + width + '\">');\n    fig.close_ws(fig, msg);\n}\n\nmpl.figure.prototype.close_ws = function(fig, msg){\n    fig.send_message('closing', msg);\n    // fig.ws.close()\n}\n\nmpl.figure.prototype.push_to_output = function(remove_interactive) {\n    // Turn the data on the canvas into data in the output cell.\n    var width = this.canvas.width/mpl.ratio\n    var dataURL = this.canvas.toDataURL();\n    this.cell_info[1]['text/html'] = '<img src=\"' + dataURL + '\" width=\"' + width + '\">';\n}\n\nmpl.figure.prototype.updated_canvas_event = function() {\n    // Tell IPython that the notebook contents must change.\n    IPython.notebook.set_dirty(true);\n    this.send_message(\"ack\", {});\n    var fig = this;\n    // Wait a second, then push the new image to the DOM so\n    // that it is saved nicely (might be nice to debounce this).\n    setTimeout(function () { fig.push_to_output() }, 1000);\n}\n\nmpl.figure.prototype._init_toolbar = function() {\n    var fig = this;\n\n    var nav_element = $('<div/>')\n    nav_element.attr('style', 'width: 100%');\n    this.root.append(nav_element);\n\n    // Define a callback function for later on.\n    function toolbar_event(event) {\n        return fig.toolbar_button_onclick(event['data']);\n    }\n    function toolbar_mouse_event(event) {\n        return fig.toolbar_button_onmouseover(event['data']);\n    }\n\n    for(var toolbar_ind in mpl.toolbar_items){\n        var name = mpl.toolbar_items[toolbar_ind][0];\n        var tooltip = mpl.toolbar_items[toolbar_ind][1];\n        var image = mpl.toolbar_items[toolbar_ind][2];\n        var method_name = mpl.toolbar_items[toolbar_ind][3];\n\n        if (!name) { continue; };\n\n        var button = $('<button class=\"btn btn-default\" href=\"#\" title=\"' + name + '\"><i class=\"fa ' + image + ' fa-lg\"></i></button>');\n        button.click(method_name, toolbar_event);\n        button.mouseover(tooltip, toolbar_mouse_event);\n        nav_element.append(button);\n    }\n\n    // Add the status bar.\n    var status_bar = $('<span class=\"mpl-message\" style=\"text-align:right; float: right;\"/>');\n    nav_element.append(status_bar);\n    this.message = status_bar[0];\n\n    // Add the close button to the window.\n    var buttongrp = $('<div class=\"btn-group inline pull-right\"></div>');\n    var button = $('<button class=\"btn btn-mini btn-primary\" href=\"#\" title=\"Stop Interaction\"><i class=\"fa fa-power-off icon-remove icon-large\"></i></button>');\n    button.click(function (evt) { fig.handle_close(fig, {}); } );\n    button.mouseover('Stop Interaction', toolbar_mouse_event);\n    buttongrp.append(button);\n    var titlebar = this.root.find($('.ui-dialog-titlebar'));\n    titlebar.prepend(buttongrp);\n}\n\nmpl.figure.prototype._root_extra_style = function(el){\n    var fig = this\n    el.on(\"remove\", function(){\n\tfig.close_ws(fig, {});\n    });\n}\n\nmpl.figure.prototype._canvas_extra_style = function(el){\n    // this is important to make the div 'focusable\n    el.attr('tabindex', 0)\n    // reach out to IPython and tell the keyboard manager to turn it's self\n    // off when our div gets focus\n\n    // location in version 3\n    if (IPython.notebook.keyboard_manager) {\n        IPython.notebook.keyboard_manager.register_events(el);\n    }\n    else {\n        // location in version 2\n        IPython.keyboard_manager.register_events(el);\n    }\n\n}\n\nmpl.figure.prototype._key_event_extra = function(event, name) {\n    var manager = IPython.notebook.keyboard_manager;\n    if (!manager)\n        manager = IPython.keyboard_manager;\n\n    // Check for shift+enter\n    if (event.shiftKey && event.which == 13) {\n        this.canvas_div.blur();\n        event.shiftKey = false;\n        // Send a \"J\" for go to next cell\n        event.which = 74;\n        event.keyCode = 74;\n        manager.command_mode();\n        manager.handle_keydown(event);\n    }\n}\n\nmpl.figure.prototype.handle_save = function(fig, msg) {\n    fig.ondownload(fig, null);\n}\n\n\nmpl.find_output_cell = function(html_output) {\n    // Return the cell and output element which can be found *uniquely* in the notebook.\n    // Note - this is a bit hacky, but it is done because the \"notebook_saving.Notebook\"\n    // IPython event is triggered only after the cells have been serialised, which for\n    // our purposes (turning an active figure into a static one), is too late.\n    var cells = IPython.notebook.get_cells();\n    var ncells = cells.length;\n    for (var i=0; i<ncells; i++) {\n        var cell = cells[i];\n        if (cell.cell_type === 'code'){\n            for (var j=0; j<cell.output_area.outputs.length; j++) {\n                var data = cell.output_area.outputs[j];\n                if (data.data) {\n                    // IPython >= 3 moved mimebundle to data attribute of output\n                    data = data.data;\n                }\n                if (data['text/html'] == html_output) {\n                    return [cell, data, j];\n                }\n            }\n        }\n    }\n}\n\n// Register the function which deals with the matplotlib target/channel.\n// The kernel may be null if the page has been refreshed.\nif (IPython.notebook.kernel != null) {\n    IPython.notebook.kernel.comm_manager.register_target('matplotlib', mpl.mpl_figure_comm);\n}\n"
                        },
                        "metadata": {}
                    },
                    {
                        "output_type": "display_data",
                        "data": {
                            "text/plain": "<IPython.core.display.HTML object>",
                            "text/html": "<div id='eee8eead-ee22-464f-8171-96b5ecbb06a2'></div>"
                        },
                        "metadata": {}
                    }
                ]
            }
        },
        "1ba7181fee1e4608913f43e9cb380922": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "cde80df6c4ac445b8283f629f3d5c3e5": {
            "model_name": "SliderStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "55ec34b529e041fc81b522111381b42d": {
            "model_name": "IntSliderModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "shift_list",
                "layout": "IPY_MODEL_1ba7181fee1e4608913f43e9cb380922",
                "max": 4,
                "min": -4,
                "style": "IPY_MODEL_cde80df6c4ac445b8283f629f3d5c3e5"
            }
        },
        "937aecdc4b6047e5a6d03ec55f851a1d": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "9a79459d4da54331a20c06d4adc917e6": {
            "model_name": "VBoxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_dom_classes": [
                    "widget-interact"
                ],
                "children": [
                    "IPY_MODEL_55ec34b529e041fc81b522111381b42d",
                    "IPY_MODEL_83075f512d5e4289a496d81fa1e7a1ab"
                ],
                "layout": "IPY_MODEL_937aecdc4b6047e5a6d03ec55f851a1d"
            }
        },
        "32a2c34e8f684e6e8b78e517289a0403": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "83075f512d5e4289a496d81fa1e7a1ab": {
            "model_name": "OutputModel",
            "model_module": "@jupyter-widgets/output",
            "model_module_version": "1.0.0",
            "state": {
                "layout": "IPY_MODEL_32a2c34e8f684e6e8b78e517289a0403"
            }
        },
        "a1fab1a6feda42c1807c6c2fcdd448a2": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "bfd2eb5010fe4715a1ae66ec6249a79f": {
            "model_name": "VBoxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_dom_classes": [
                    "widget-interact"
                ],
                "children": [
                    "IPY_MODEL_ad755f02c45644d4bad3b62103c7f6e2",
                    "IPY_MODEL_6ec6a7dac6c246c088e5ec586535a7f2"
                ],
                "layout": "IPY_MODEL_a1fab1a6feda42c1807c6c2fcdd448a2"
            }
        },
        "a7bbadfaf95d4cabbe145bc9ad3bd61a": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "c4c4634f89cc4a1da458de4e168326bc": {
            "model_name": "SliderStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "ad755f02c45644d4bad3b62103c7f6e2": {
            "model_name": "IntSliderModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "shift_list",
                "layout": "IPY_MODEL_a7bbadfaf95d4cabbe145bc9ad3bd61a",
                "max": 12,
                "min": -4,
                "style": "IPY_MODEL_c4c4634f89cc4a1da458de4e168326bc",
                "value": -1
            }
        },
        "e38c8317cedd46ef9f312d89454c3b3c": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "6ec6a7dac6c246c088e5ec586535a7f2": {
            "model_name": "OutputModel",
            "model_module": "@jupyter-widgets/output",
            "model_module_version": "1.0.0",
            "state": {
                "layout": "IPY_MODEL_e38c8317cedd46ef9f312d89454c3b3c",
                "outputs": [
                    {
                        "output_type": "display_data",
                        "data": {
                            "text/plain": "<IPython.core.display.Javascript object>",
                            "application/javascript": "/* Put everything inside the global mpl namespace */\nwindow.mpl = {};\n\n\nmpl.get_websocket_type = function() {\n    if (typeof(WebSocket) !== 'undefined') {\n        return WebSocket;\n    } else if (typeof(MozWebSocket) !== 'undefined') {\n        return MozWebSocket;\n    } else {\n        alert('Your browser does not have WebSocket support.' +\n              'Please try Chrome, Safari or Firefox ≥ 6. ' +\n              'Firefox 4 and 5 are also supported but you ' +\n              'have to enable WebSockets in about:config.');\n    };\n}\n\nmpl.figure = function(figure_id, websocket, ondownload, parent_element) {\n    this.id = figure_id;\n\n    this.ws = websocket;\n\n    this.supports_binary = (this.ws.binaryType != undefined);\n\n    if (!this.supports_binary) {\n        var warnings = document.getElementById(\"mpl-warnings\");\n        if (warnings) {\n            warnings.style.display = 'block';\n            warnings.textContent = (\n                \"This browser does not support binary websocket messages. \" +\n                    \"Performance may be slow.\");\n        }\n    }\n\n    this.imageObj = new Image();\n\n    this.context = undefined;\n    this.message = undefined;\n    this.canvas = undefined;\n    this.rubberband_canvas = undefined;\n    this.rubberband_context = undefined;\n    this.format_dropdown = undefined;\n\n    this.image_mode = 'full';\n\n    this.root = $('<div/>');\n    this._root_extra_style(this.root)\n    this.root.attr('style', 'display: inline-block');\n\n    $(parent_element).append(this.root);\n\n    this._init_header(this);\n    this._init_canvas(this);\n    this._init_toolbar(this);\n\n    var fig = this;\n\n    this.waiting = false;\n\n    this.ws.onopen =  function () {\n            fig.send_message(\"supports_binary\", {value: fig.supports_binary});\n            fig.send_message(\"send_image_mode\", {});\n            if (mpl.ratio != 1) {\n                fig.send_message(\"set_dpi_ratio\", {'dpi_ratio': mpl.ratio});\n            }\n            fig.send_message(\"refresh\", {});\n        }\n\n    this.imageObj.onload = function() {\n            if (fig.image_mode == 'full') {\n                // Full images could contain transparency (where diff images\n                // almost always do), so we need to clear the canvas so that\n                // there is no ghosting.\n                fig.context.clearRect(0, 0, fig.canvas.width, fig.canvas.height);\n            }\n            fig.context.drawImage(fig.imageObj, 0, 0);\n        };\n\n    this.imageObj.onunload = function() {\n        fig.ws.close();\n    }\n\n    this.ws.onmessage = this._make_on_message_function(this);\n\n    this.ondownload = ondownload;\n}\n\nmpl.figure.prototype._init_header = function() {\n    var titlebar = $(\n        '<div class=\"ui-dialog-titlebar ui-widget-header ui-corner-all ' +\n        'ui-helper-clearfix\"/>');\n    var titletext = $(\n        '<div class=\"ui-dialog-title\" style=\"width: 100%; ' +\n        'text-align: center; padding: 3px;\"/>');\n    titlebar.append(titletext)\n    this.root.append(titlebar);\n    this.header = titletext[0];\n}\n\n\n\nmpl.figure.prototype._canvas_extra_style = function(canvas_div) {\n\n}\n\n\nmpl.figure.prototype._root_extra_style = function(canvas_div) {\n\n}\n\nmpl.figure.prototype._init_canvas = function() {\n    var fig = this;\n\n    var canvas_div = $('<div/>');\n\n    canvas_div.attr('style', 'position: relative; clear: both; outline: 0');\n\n    function canvas_keyboard_event(event) {\n        return fig.key_event(event, event['data']);\n    }\n\n    canvas_div.keydown('key_press', canvas_keyboard_event);\n    canvas_div.keyup('key_release', canvas_keyboard_event);\n    this.canvas_div = canvas_div\n    this._canvas_extra_style(canvas_div)\n    this.root.append(canvas_div);\n\n    var canvas = $('<canvas/>');\n    canvas.addClass('mpl-canvas');\n    canvas.attr('style', \"left: 0; top: 0; z-index: 0; outline: 0\")\n\n    this.canvas = canvas[0];\n    this.context = canvas[0].getContext(\"2d\");\n\n    var backingStore = this.context.backingStorePixelRatio ||\n\tthis.context.webkitBackingStorePixelRatio ||\n\tthis.context.mozBackingStorePixelRatio ||\n\tthis.context.msBackingStorePixelRatio ||\n\tthis.context.oBackingStorePixelRatio ||\n\tthis.context.backingStorePixelRatio || 1;\n\n    mpl.ratio = (window.devicePixelRatio || 1) / backingStore;\n\n    var rubberband = $('<canvas/>');\n    rubberband.attr('style', \"position: absolute; left: 0; top: 0; z-index: 1;\")\n\n    var pass_mouse_events = true;\n\n    canvas_div.resizable({\n        start: function(event, ui) {\n            pass_mouse_events = false;\n        },\n        resize: function(event, ui) {\n            fig.request_resize(ui.size.width, ui.size.height);\n        },\n        stop: function(event, ui) {\n            pass_mouse_events = true;\n            fig.request_resize(ui.size.width, ui.size.height);\n        },\n    });\n\n    function mouse_event_fn(event) {\n        if (pass_mouse_events)\n            return fig.mouse_event(event, event['data']);\n    }\n\n    rubberband.mousedown('button_press', mouse_event_fn);\n    rubberband.mouseup('button_release', mouse_event_fn);\n    // Throttle sequential mouse events to 1 every 20ms.\n    rubberband.mousemove('motion_notify', mouse_event_fn);\n\n    rubberband.mouseenter('figure_enter', mouse_event_fn);\n    rubberband.mouseleave('figure_leave', mouse_event_fn);\n\n    canvas_div.on(\"wheel\", function (event) {\n        event = event.originalEvent;\n        event['data'] = 'scroll'\n        if (event.deltaY < 0) {\n            event.step = 1;\n        } else {\n            event.step = -1;\n        }\n        mouse_event_fn(event);\n    });\n\n    canvas_div.append(canvas);\n    canvas_div.append(rubberband);\n\n    this.rubberband = rubberband;\n    this.rubberband_canvas = rubberband[0];\n    this.rubberband_context = rubberband[0].getContext(\"2d\");\n    this.rubberband_context.strokeStyle = \"#000000\";\n\n    this._resize_canvas = function(width, height) {\n        // Keep the size of the canvas, canvas container, and rubber band\n        // canvas in synch.\n        canvas_div.css('width', width)\n        canvas_div.css('height', height)\n\n        canvas.attr('width', width * mpl.ratio);\n        canvas.attr('height', height * mpl.ratio);\n        canvas.attr('style', 'width: ' + width + 'px; height: ' + height + 'px;');\n\n        rubberband.attr('width', width);\n        rubberband.attr('height', height);\n    }\n\n    // Set the figure to an initial 600x600px, this will subsequently be updated\n    // upon first draw.\n    this._resize_canvas(600, 600);\n\n    // Disable right mouse context menu.\n    $(this.rubberband_canvas).bind(\"contextmenu\",function(e){\n        return false;\n    });\n\n    function set_focus () {\n        canvas.focus();\n        canvas_div.focus();\n    }\n\n    window.setTimeout(set_focus, 100);\n}\n\nmpl.figure.prototype._init_toolbar = function() {\n    var fig = this;\n\n    var nav_element = $('<div/>')\n    nav_element.attr('style', 'width: 100%');\n    this.root.append(nav_element);\n\n    // Define a callback function for later on.\n    function toolbar_event(event) {\n        return fig.toolbar_button_onclick(event['data']);\n    }\n    function toolbar_mouse_event(event) {\n        return fig.toolbar_button_onmouseover(event['data']);\n    }\n\n    for(var toolbar_ind in mpl.toolbar_items) {\n        var name = mpl.toolbar_items[toolbar_ind][0];\n        var tooltip = mpl.toolbar_items[toolbar_ind][1];\n        var image = mpl.toolbar_items[toolbar_ind][2];\n        var method_name = mpl.toolbar_items[toolbar_ind][3];\n\n        if (!name) {\n            // put a spacer in here.\n            continue;\n        }\n        var button = $('<button/>');\n        button.addClass('ui-button ui-widget ui-state-default ui-corner-all ' +\n                        'ui-button-icon-only');\n        button.attr('role', 'button');\n        button.attr('aria-disabled', 'false');\n        button.click(method_name, toolbar_event);\n        button.mouseover(tooltip, toolbar_mouse_event);\n\n        var icon_img = $('<span/>');\n        icon_img.addClass('ui-button-icon-primary ui-icon');\n        icon_img.addClass(image);\n        icon_img.addClass('ui-corner-all');\n\n        var tooltip_span = $('<span/>');\n        tooltip_span.addClass('ui-button-text');\n        tooltip_span.html(tooltip);\n\n        button.append(icon_img);\n        button.append(tooltip_span);\n\n        nav_element.append(button);\n    }\n\n    var fmt_picker_span = $('<span/>');\n\n    var fmt_picker = $('<select/>');\n    fmt_picker.addClass('mpl-toolbar-option ui-widget ui-widget-content');\n    fmt_picker_span.append(fmt_picker);\n    nav_element.append(fmt_picker_span);\n    this.format_dropdown = fmt_picker[0];\n\n    for (var ind in mpl.extensions) {\n        var fmt = mpl.extensions[ind];\n        var option = $(\n            '<option/>', {selected: fmt === mpl.default_extension}).html(fmt);\n        fmt_picker.append(option)\n    }\n\n    // Add hover states to the ui-buttons\n    $( \".ui-button\" ).hover(\n        function() { $(this).addClass(\"ui-state-hover\");},\n        function() { $(this).removeClass(\"ui-state-hover\");}\n    );\n\n    var status_bar = $('<span class=\"mpl-message\"/>');\n    nav_element.append(status_bar);\n    this.message = status_bar[0];\n}\n\nmpl.figure.prototype.request_resize = function(x_pixels, y_pixels) {\n    // Request matplotlib to resize the figure. Matplotlib will then trigger a resize in the client,\n    // which will in turn request a refresh of the image.\n    this.send_message('resize', {'width': x_pixels, 'height': y_pixels});\n}\n\nmpl.figure.prototype.send_message = function(type, properties) {\n    properties['type'] = type;\n    properties['figure_id'] = this.id;\n    this.ws.send(JSON.stringify(properties));\n}\n\nmpl.figure.prototype.send_draw_message = function() {\n    if (!this.waiting) {\n        this.waiting = true;\n        this.ws.send(JSON.stringify({type: \"draw\", figure_id: this.id}));\n    }\n}\n\n\nmpl.figure.prototype.handle_save = function(fig, msg) {\n    var format_dropdown = fig.format_dropdown;\n    var format = format_dropdown.options[format_dropdown.selectedIndex].value;\n    fig.ondownload(fig, format);\n}\n\n\nmpl.figure.prototype.handle_resize = function(fig, msg) {\n    var size = msg['size'];\n    if (size[0] != fig.canvas.width || size[1] != fig.canvas.height) {\n        fig._resize_canvas(size[0], size[1]);\n        fig.send_message(\"refresh\", {});\n    };\n}\n\nmpl.figure.prototype.handle_rubberband = function(fig, msg) {\n    var x0 = msg['x0'] / mpl.ratio;\n    var y0 = (fig.canvas.height - msg['y0']) / mpl.ratio;\n    var x1 = msg['x1'] / mpl.ratio;\n    var y1 = (fig.canvas.height - msg['y1']) / mpl.ratio;\n    x0 = Math.floor(x0) + 0.5;\n    y0 = Math.floor(y0) + 0.5;\n    x1 = Math.floor(x1) + 0.5;\n    y1 = Math.floor(y1) + 0.5;\n    var min_x = Math.min(x0, x1);\n    var min_y = Math.min(y0, y1);\n    var width = Math.abs(x1 - x0);\n    var height = Math.abs(y1 - y0);\n\n    fig.rubberband_context.clearRect(\n        0, 0, fig.canvas.width, fig.canvas.height);\n\n    fig.rubberband_context.strokeRect(min_x, min_y, width, height);\n}\n\nmpl.figure.prototype.handle_figure_label = function(fig, msg) {\n    // Updates the figure title.\n    fig.header.textContent = msg['label'];\n}\n\nmpl.figure.prototype.handle_cursor = function(fig, msg) {\n    var cursor = msg['cursor'];\n    switch(cursor)\n    {\n    case 0:\n        cursor = 'pointer';\n        break;\n    case 1:\n        cursor = 'default';\n        break;\n    case 2:\n        cursor = 'crosshair';\n        break;\n    case 3:\n        cursor = 'move';\n        break;\n    }\n    fig.rubberband_canvas.style.cursor = cursor;\n}\n\nmpl.figure.prototype.handle_message = function(fig, msg) {\n    fig.message.textContent = msg['message'];\n}\n\nmpl.figure.prototype.handle_draw = function(fig, msg) {\n    // Request the server to send over a new figure.\n    fig.send_draw_message();\n}\n\nmpl.figure.prototype.handle_image_mode = function(fig, msg) {\n    fig.image_mode = msg['mode'];\n}\n\nmpl.figure.prototype.updated_canvas_event = function() {\n    // Called whenever the canvas gets updated.\n    this.send_message(\"ack\", {});\n}\n\n// A function to construct a web socket function for onmessage handling.\n// Called in the figure constructor.\nmpl.figure.prototype._make_on_message_function = function(fig) {\n    return function socket_on_message(evt) {\n        if (evt.data instanceof Blob) {\n            /* FIXME: We get \"Resource interpreted as Image but\n             * transferred with MIME type text/plain:\" errors on\n             * Chrome.  But how to set the MIME type?  It doesn't seem\n             * to be part of the websocket stream */\n            evt.data.type = \"image/png\";\n\n            /* Free the memory for the previous frames */\n            if (fig.imageObj.src) {\n                (window.URL || window.webkitURL).revokeObjectURL(\n                    fig.imageObj.src);\n            }\n\n            fig.imageObj.src = (window.URL || window.webkitURL).createObjectURL(\n                evt.data);\n            fig.updated_canvas_event();\n            fig.waiting = false;\n            return;\n        }\n        else if (typeof evt.data === 'string' && evt.data.slice(0, 21) == \"data:image/png;base64\") {\n            fig.imageObj.src = evt.data;\n            fig.updated_canvas_event();\n            fig.waiting = false;\n            return;\n        }\n\n        var msg = JSON.parse(evt.data);\n        var msg_type = msg['type'];\n\n        // Call the  \"handle_{type}\" callback, which takes\n        // the figure and JSON message as its only arguments.\n        try {\n            var callback = fig[\"handle_\" + msg_type];\n        } catch (e) {\n            console.log(\"No handler for the '\" + msg_type + \"' message type: \", msg);\n            return;\n        }\n\n        if (callback) {\n            try {\n                // console.log(\"Handling '\" + msg_type + \"' message: \", msg);\n                callback(fig, msg);\n            } catch (e) {\n                console.log(\"Exception inside the 'handler_\" + msg_type + \"' callback:\", e, e.stack, msg);\n            }\n        }\n    };\n}\n\n// from http://stackoverflow.com/questions/1114465/getting-mouse-location-in-canvas\nmpl.findpos = function(e) {\n    //this section is from http://www.quirksmode.org/js/events_properties.html\n    var targ;\n    if (!e)\n        e = window.event;\n    if (e.target)\n        targ = e.target;\n    else if (e.srcElement)\n        targ = e.srcElement;\n    if (targ.nodeType == 3) // defeat Safari bug\n        targ = targ.parentNode;\n\n    // jQuery normalizes the pageX and pageY\n    // pageX,Y are the mouse positions relative to the document\n    // offset() returns the position of the element relative to the document\n    var x = e.pageX - $(targ).offset().left;\n    var y = e.pageY - $(targ).offset().top;\n\n    return {\"x\": x, \"y\": y};\n};\n\n/*\n * return a copy of an object with only non-object keys\n * we need this to avoid circular references\n * http://stackoverflow.com/a/24161582/3208463\n */\nfunction simpleKeys (original) {\n  return Object.keys(original).reduce(function (obj, key) {\n    if (typeof original[key] !== 'object')\n        obj[key] = original[key]\n    return obj;\n  }, {});\n}\n\nmpl.figure.prototype.mouse_event = function(event, name) {\n    var canvas_pos = mpl.findpos(event)\n\n    if (name === 'button_press')\n    {\n        this.canvas.focus();\n        this.canvas_div.focus();\n    }\n\n    var x = canvas_pos.x * mpl.ratio;\n    var y = canvas_pos.y * mpl.ratio;\n\n    this.send_message(name, {x: x, y: y, button: event.button,\n                             step: event.step,\n                             guiEvent: simpleKeys(event)});\n\n    /* This prevents the web browser from automatically changing to\n     * the text insertion cursor when the button is pressed.  We want\n     * to control all of the cursor setting manually through the\n     * 'cursor' event from matplotlib */\n    event.preventDefault();\n    return false;\n}\n\nmpl.figure.prototype._key_event_extra = function(event, name) {\n    // Handle any extra behaviour associated with a key event\n}\n\nmpl.figure.prototype.key_event = function(event, name) {\n\n    // Prevent repeat events\n    if (name == 'key_press')\n    {\n        if (event.which === this._key)\n            return;\n        else\n            this._key = event.which;\n    }\n    if (name == 'key_release')\n        this._key = null;\n\n    var value = '';\n    if (event.ctrlKey && event.which != 17)\n        value += \"ctrl+\";\n    if (event.altKey && event.which != 18)\n        value += \"alt+\";\n    if (event.shiftKey && event.which != 16)\n        value += \"shift+\";\n\n    value += 'k';\n    value += event.which.toString();\n\n    this._key_event_extra(event, name);\n\n    this.send_message(name, {key: value,\n                             guiEvent: simpleKeys(event)});\n    return false;\n}\n\nmpl.figure.prototype.toolbar_button_onclick = function(name) {\n    if (name == 'download') {\n        this.handle_save(this, null);\n    } else {\n        this.send_message(\"toolbar_button\", {name: name});\n    }\n};\n\nmpl.figure.prototype.toolbar_button_onmouseover = function(tooltip) {\n    this.message.textContent = tooltip;\n};\nmpl.toolbar_items = [[\"Home\", \"Reset original view\", \"fa fa-home icon-home\", \"home\"], [\"Back\", \"Back to previous view\", \"fa fa-arrow-left icon-arrow-left\", \"back\"], [\"Forward\", \"Forward to next view\", \"fa fa-arrow-right icon-arrow-right\", \"forward\"], [\"\", \"\", \"\", \"\"], [\"Pan\", \"Pan axes with left mouse, zoom with right\", \"fa fa-arrows icon-move\", \"pan\"], [\"Zoom\", \"Zoom to rectangle\", \"fa fa-square-o icon-check-empty\", \"zoom\"], [\"\", \"\", \"\", \"\"], [\"Download\", \"Download plot\", \"fa fa-floppy-o icon-save\", \"download\"]];\n\nmpl.extensions = [\"eps\", \"jpeg\", \"pdf\", \"png\", \"ps\", \"raw\", \"svg\", \"tif\"];\n\nmpl.default_extension = \"png\";var comm_websocket_adapter = function(comm) {\n    // Create a \"websocket\"-like object which calls the given IPython comm\n    // object with the appropriate methods. Currently this is a non binary\n    // socket, so there is still some room for performance tuning.\n    var ws = {};\n\n    ws.close = function() {\n        comm.close()\n    };\n    ws.send = function(m) {\n        //console.log('sending', m);\n        comm.send(m);\n    };\n    // Register the callback with on_msg.\n    comm.on_msg(function(msg) {\n        //console.log('receiving', msg['content']['data'], msg);\n        // Pass the mpl event to the overridden (by mpl) onmessage function.\n        ws.onmessage(msg['content']['data'])\n    });\n    return ws;\n}\n\nmpl.mpl_figure_comm = function(comm, msg) {\n    // This is the function which gets called when the mpl process\n    // starts-up an IPython Comm through the \"matplotlib\" channel.\n\n    var id = msg.content.data.id;\n    // Get hold of the div created by the display call when the Comm\n    // socket was opened in Python.\n    var element = $(\"#\" + id);\n    var ws_proxy = comm_websocket_adapter(comm)\n\n    function ondownload(figure, format) {\n        window.open(figure.imageObj.src);\n    }\n\n    var fig = new mpl.figure(id, ws_proxy,\n                           ondownload,\n                           element.get(0));\n\n    // Call onopen now - mpl needs it, as it is assuming we've passed it a real\n    // web socket which is closed, not our websocket->open comm proxy.\n    ws_proxy.onopen();\n\n    fig.parent_element = element.get(0);\n    fig.cell_info = mpl.find_output_cell(\"<div id='\" + id + \"'></div>\");\n    if (!fig.cell_info) {\n        console.error(\"Failed to find cell for figure\", id, fig);\n        return;\n    }\n\n    var output_index = fig.cell_info[2]\n    var cell = fig.cell_info[0];\n\n};\n\nmpl.figure.prototype.handle_close = function(fig, msg) {\n    var width = fig.canvas.width/mpl.ratio\n    fig.root.unbind('remove')\n\n    // Update the output cell to use the data from the current canvas.\n    fig.push_to_output();\n    var dataURL = fig.canvas.toDataURL();\n    // Re-enable the keyboard manager in IPython - without this line, in FF,\n    // the notebook keyboard shortcuts fail.\n    IPython.keyboard_manager.enable()\n    $(fig.parent_element).html('<img src=\"' + dataURL + '\" width=\"' + width + '\">');\n    fig.close_ws(fig, msg);\n}\n\nmpl.figure.prototype.close_ws = function(fig, msg){\n    fig.send_message('closing', msg);\n    // fig.ws.close()\n}\n\nmpl.figure.prototype.push_to_output = function(remove_interactive) {\n    // Turn the data on the canvas into data in the output cell.\n    var width = this.canvas.width/mpl.ratio\n    var dataURL = this.canvas.toDataURL();\n    this.cell_info[1]['text/html'] = '<img src=\"' + dataURL + '\" width=\"' + width + '\">';\n}\n\nmpl.figure.prototype.updated_canvas_event = function() {\n    // Tell IPython that the notebook contents must change.\n    IPython.notebook.set_dirty(true);\n    this.send_message(\"ack\", {});\n    var fig = this;\n    // Wait a second, then push the new image to the DOM so\n    // that it is saved nicely (might be nice to debounce this).\n    setTimeout(function () { fig.push_to_output() }, 1000);\n}\n\nmpl.figure.prototype._init_toolbar = function() {\n    var fig = this;\n\n    var nav_element = $('<div/>')\n    nav_element.attr('style', 'width: 100%');\n    this.root.append(nav_element);\n\n    // Define a callback function for later on.\n    function toolbar_event(event) {\n        return fig.toolbar_button_onclick(event['data']);\n    }\n    function toolbar_mouse_event(event) {\n        return fig.toolbar_button_onmouseover(event['data']);\n    }\n\n    for(var toolbar_ind in mpl.toolbar_items){\n        var name = mpl.toolbar_items[toolbar_ind][0];\n        var tooltip = mpl.toolbar_items[toolbar_ind][1];\n        var image = mpl.toolbar_items[toolbar_ind][2];\n        var method_name = mpl.toolbar_items[toolbar_ind][3];\n\n        if (!name) { continue; };\n\n        var button = $('<button class=\"btn btn-default\" href=\"#\" title=\"' + name + '\"><i class=\"fa ' + image + ' fa-lg\"></i></button>');\n        button.click(method_name, toolbar_event);\n        button.mouseover(tooltip, toolbar_mouse_event);\n        nav_element.append(button);\n    }\n\n    // Add the status bar.\n    var status_bar = $('<span class=\"mpl-message\" style=\"text-align:right; float: right;\"/>');\n    nav_element.append(status_bar);\n    this.message = status_bar[0];\n\n    // Add the close button to the window.\n    var buttongrp = $('<div class=\"btn-group inline pull-right\"></div>');\n    var button = $('<button class=\"btn btn-mini btn-primary\" href=\"#\" title=\"Stop Interaction\"><i class=\"fa fa-power-off icon-remove icon-large\"></i></button>');\n    button.click(function (evt) { fig.handle_close(fig, {}); } );\n    button.mouseover('Stop Interaction', toolbar_mouse_event);\n    buttongrp.append(button);\n    var titlebar = this.root.find($('.ui-dialog-titlebar'));\n    titlebar.prepend(buttongrp);\n}\n\nmpl.figure.prototype._root_extra_style = function(el){\n    var fig = this\n    el.on(\"remove\", function(){\n\tfig.close_ws(fig, {});\n    });\n}\n\nmpl.figure.prototype._canvas_extra_style = function(el){\n    // this is important to make the div 'focusable\n    el.attr('tabindex', 0)\n    // reach out to IPython and tell the keyboard manager to turn it's self\n    // off when our div gets focus\n\n    // location in version 3\n    if (IPython.notebook.keyboard_manager) {\n        IPython.notebook.keyboard_manager.register_events(el);\n    }\n    else {\n        // location in version 2\n        IPython.keyboard_manager.register_events(el);\n    }\n\n}\n\nmpl.figure.prototype._key_event_extra = function(event, name) {\n    var manager = IPython.notebook.keyboard_manager;\n    if (!manager)\n        manager = IPython.keyboard_manager;\n\n    // Check for shift+enter\n    if (event.shiftKey && event.which == 13) {\n        this.canvas_div.blur();\n        event.shiftKey = false;\n        // Send a \"J\" for go to next cell\n        event.which = 74;\n        event.keyCode = 74;\n        manager.command_mode();\n        manager.handle_keydown(event);\n    }\n}\n\nmpl.figure.prototype.handle_save = function(fig, msg) {\n    fig.ondownload(fig, null);\n}\n\n\nmpl.find_output_cell = function(html_output) {\n    // Return the cell and output element which can be found *uniquely* in the notebook.\n    // Note - this is a bit hacky, but it is done because the \"notebook_saving.Notebook\"\n    // IPython event is triggered only after the cells have been serialised, which for\n    // our purposes (turning an active figure into a static one), is too late.\n    var cells = IPython.notebook.get_cells();\n    var ncells = cells.length;\n    for (var i=0; i<ncells; i++) {\n        var cell = cells[i];\n        if (cell.cell_type === 'code'){\n            for (var j=0; j<cell.output_area.outputs.length; j++) {\n                var data = cell.output_area.outputs[j];\n                if (data.data) {\n                    // IPython >= 3 moved mimebundle to data attribute of output\n                    data = data.data;\n                }\n                if (data['text/html'] == html_output) {\n                    return [cell, data, j];\n                }\n            }\n        }\n    }\n}\n\n// Register the function which deals with the matplotlib target/channel.\n// The kernel may be null if the page has been refreshed.\nif (IPython.notebook.kernel != null) {\n    IPython.notebook.kernel.comm_manager.register_target('matplotlib', mpl.mpl_figure_comm);\n}\n"
                        },
                        "metadata": {}
                    },
                    {
                        "output_type": "display_data",
                        "data": {
                            "text/plain": "<IPython.core.display.HTML object>",
                            "text/html": "<div id='a884b14a-2aa4-42df-8a56-a4dc2f58902a'></div>"
                        },
                        "metadata": {}
                    }
                ]
            }
        },
        "39cb5c34fd2d450b8823116273ee943d": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "83a5b4b48bf143c0a48930523b949e09": {
            "model_name": "VBoxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_dom_classes": [
                    "widget-interact"
                ],
                "children": [
                    "IPY_MODEL_66b8d6c986464a1e81ab195c10512f63",
                    "IPY_MODEL_9af97210179b4467b0c8eac50d28de70"
                ],
                "layout": "IPY_MODEL_39cb5c34fd2d450b8823116273ee943d"
            }
        },
        "7ca525e7bac2447a9e1e80e69ac1cbb0": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "969e482329744240956f6ff4f4427e4b": {
            "model_name": "SliderStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "66b8d6c986464a1e81ab195c10512f63": {
            "model_name": "IntSliderModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "shift_list",
                "layout": "IPY_MODEL_7ca525e7bac2447a9e1e80e69ac1cbb0",
                "max": 12,
                "min": -4,
                "style": "IPY_MODEL_969e482329744240956f6ff4f4427e4b",
                "value": -4
            }
        },
        "99379b2fe5044e83b00877bb2d8e36ea": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "9af97210179b4467b0c8eac50d28de70": {
            "model_name": "OutputModel",
            "model_module": "@jupyter-widgets/output",
            "model_module_version": "1.0.0",
            "state": {
                "layout": "IPY_MODEL_99379b2fe5044e83b00877bb2d8e36ea"
            }
        },
        "137928e089084a2c88a172fb15c48bde": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "ae01d7358cc44fd0abdae061d19db504": {
            "model_name": "SliderStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "73151a8b23124f40bcfb4f19e562f738": {
            "model_name": "IntSliderModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "shift_list",
                "layout": "IPY_MODEL_137928e089084a2c88a172fb15c48bde",
                "max": 4,
                "min": -4,
                "style": "IPY_MODEL_ae01d7358cc44fd0abdae061d19db504",
                "value": -4
            }
        },
        "44569bf28824489f8e677dd49af0db88": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "bc986b9e5a874a85a4b8fd7e75b68726": {
            "model_name": "VBoxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_dom_classes": [
                    "widget-interact"
                ],
                "children": [
                    "IPY_MODEL_73151a8b23124f40bcfb4f19e562f738",
                    "IPY_MODEL_e5c5097ac7a0470d8aa697cb7270305c"
                ],
                "layout": "IPY_MODEL_44569bf28824489f8e677dd49af0db88"
            }
        },
        "8426f1fcf6e2418eb5c7578fca803408": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "e5c5097ac7a0470d8aa697cb7270305c": {
            "model_name": "OutputModel",
            "model_module": "@jupyter-widgets/output",
            "model_module_version": "1.0.0",
            "state": {
                "layout": "IPY_MODEL_8426f1fcf6e2418eb5c7578fca803408"
            }
        },
        "bbd06ffc307c4b6e82c1efe1b95d1793": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "959e9b4711e045398c8a70137566bc29": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "542aef4492b04edc8c0d828119f20420": {
            "model_name": "CheckboxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "-4",
                "disabled": false,
                "layout": "IPY_MODEL_bbd06ffc307c4b6e82c1efe1b95d1793",
                "style": "IPY_MODEL_959e9b4711e045398c8a70137566bc29",
                "value": true
            }
        },
        "9e0b8e1287af4cc2b29e8fac88b71fd0": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "36a0124b58e1430d9f8403fe7d324284": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "116f98be6a2c41f9ba6839c8476cf5be": {
            "model_name": "CheckboxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "-3",
                "disabled": false,
                "layout": "IPY_MODEL_9e0b8e1287af4cc2b29e8fac88b71fd0",
                "style": "IPY_MODEL_36a0124b58e1430d9f8403fe7d324284",
                "value": true
            }
        },
        "829af9e672f54fd8a7d302d3718db2d4": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "fa0ba1bad54f4622b073a779a1325c25": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "72832bafbc424d2b8f92ff39627465cf": {
            "model_name": "CheckboxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "-2",
                "disabled": false,
                "layout": "IPY_MODEL_829af9e672f54fd8a7d302d3718db2d4",
                "style": "IPY_MODEL_fa0ba1bad54f4622b073a779a1325c25",
                "value": true
            }
        },
        "beb06c1b242549a7b75eb760f935942c": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "edc8b72b052248959b1ec90c74fbbc54": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "ba76027a59294310abfb97306ea0656f": {
            "model_name": "CheckboxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "-1",
                "disabled": false,
                "layout": "IPY_MODEL_beb06c1b242549a7b75eb760f935942c",
                "style": "IPY_MODEL_edc8b72b052248959b1ec90c74fbbc54",
                "value": true
            }
        },
        "5e6b8e5b0d244849b169cc130f85651f": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "47906265dec04cf19a67f96ec07891a5": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "26f50be8161743ff8bc38ee629cb9055": {
            "model_name": "CheckboxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "0",
                "disabled": false,
                "layout": "IPY_MODEL_5e6b8e5b0d244849b169cc130f85651f",
                "style": "IPY_MODEL_47906265dec04cf19a67f96ec07891a5",
                "value": true
            }
        },
        "990124b97e6c4b02a5a9118bd3db8b52": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "90fb6a1a5a604111b2c2aab3d47ab12b": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "acf5392c44784b889d67eb670e944761": {
            "model_name": "CheckboxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "1",
                "disabled": false,
                "layout": "IPY_MODEL_990124b97e6c4b02a5a9118bd3db8b52",
                "style": "IPY_MODEL_90fb6a1a5a604111b2c2aab3d47ab12b",
                "value": true
            }
        },
        "6d602c3d735f40a2bafc4c8db8fb94aa": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "9651ef1dcc2049a9ae9afe0536bd3ab1": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "d99d88cdac9d47359edc78db3de08d5b": {
            "model_name": "CheckboxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "2",
                "disabled": false,
                "layout": "IPY_MODEL_6d602c3d735f40a2bafc4c8db8fb94aa",
                "style": "IPY_MODEL_9651ef1dcc2049a9ae9afe0536bd3ab1",
                "value": true
            }
        },
        "a253cf11bb0742aa81a5318bc9f7e9a7": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "949451ce37424a65b882b463cfb63a02": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "40e1cb480d024b3ebacd8a7a29eeb806": {
            "model_name": "CheckboxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "3",
                "disabled": false,
                "layout": "IPY_MODEL_a253cf11bb0742aa81a5318bc9f7e9a7",
                "style": "IPY_MODEL_949451ce37424a65b882b463cfb63a02",
                "value": true
            }
        },
        "1c32a510edb045a88b3dd170b78743cf": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "85a4a68252cf4712a9c728de880f293c": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "e6ed286ffb034212a84a85d3c0cb917f": {
            "model_name": "CheckboxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "4",
                "disabled": false,
                "layout": "IPY_MODEL_1c32a510edb045a88b3dd170b78743cf",
                "style": "IPY_MODEL_85a4a68252cf4712a9c728de880f293c",
                "value": true
            }
        },
        "1a37014c427748d7bcc6398308e19bc2": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "eb4472d3abf74b1aa0dd676df3b7c8cc": {
            "model_name": "VBoxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_dom_classes": [
                    "widget-interact"
                ],
                "children": [
                    "IPY_MODEL_da808328d8794d77bc0adc17d8cf4de4",
                    "IPY_MODEL_f39131c8acb84c47bc19b4ca3a245ba0"
                ],
                "layout": "IPY_MODEL_1a37014c427748d7bcc6398308e19bc2"
            }
        },
        "59eeb6d606ba477cbc2867969becf36c": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "94065fab01ff47309c9dc8751de7ca51": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "da808328d8794d77bc0adc17d8cf4de4": {
            "model_name": "DropdownModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_options_labels": [
                    "Checkbox(value=True, description='-4')",
                    "Checkbox(value=True, description='-3')",
                    "Checkbox(value=True, description='-2')",
                    "Checkbox(value=True, description='-1')",
                    "Checkbox(value=True, description='0')",
                    "Checkbox(value=True, description='1')",
                    "Checkbox(value=True, description='2')",
                    "Checkbox(value=True, description='3')",
                    "Checkbox(value=True, description='4')"
                ],
                "description": "shift_list",
                "index": 4,
                "layout": "IPY_MODEL_59eeb6d606ba477cbc2867969becf36c",
                "style": "IPY_MODEL_94065fab01ff47309c9dc8751de7ca51"
            }
        },
        "e1261931cc974cbbbf764165b2f79e34": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "f39131c8acb84c47bc19b4ca3a245ba0": {
            "model_name": "OutputModel",
            "model_module": "@jupyter-widgets/output",
            "model_module_version": "1.0.0",
            "state": {
                "layout": "IPY_MODEL_e1261931cc974cbbbf764165b2f79e34"
            }
        },
        "52dc646588664f958cb909f26b45dadd": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "1659bd1e3aa74866b3e2949e3f30caef": {
            "model_name": "VBoxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_dom_classes": [
                    "widget-interact"
                ],
                "children": [
                    "IPY_MODEL_013e4485d3e5446a8ec3ed11def59689",
                    "IPY_MODEL_bcbb8617bb4b4470a1f74584e0c227fd"
                ],
                "layout": "IPY_MODEL_52dc646588664f958cb909f26b45dadd"
            }
        },
        "bb6548e3ba4e45779f44dc7e9af8adec": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "caf4f608d1214fbe87a0aac30e7dbf8b": {
            "model_name": "SliderStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "013e4485d3e5446a8ec3ed11def59689": {
            "model_name": "IntSliderModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "shift_list",
                "layout": "IPY_MODEL_bb6548e3ba4e45779f44dc7e9af8adec",
                "max": 12,
                "min": -4,
                "style": "IPY_MODEL_caf4f608d1214fbe87a0aac30e7dbf8b",
                "value": -4
            }
        },
        "c6a3379b409444e196359844c64eb9ad": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "bcbb8617bb4b4470a1f74584e0c227fd": {
            "model_name": "OutputModel",
            "model_module": "@jupyter-widgets/output",
            "model_module_version": "1.0.0",
            "state": {
                "layout": "IPY_MODEL_c6a3379b409444e196359844c64eb9ad"
            }
        },
        "9dfe9307bfd9415889f72de3b9ad2756": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "29cd2a56696f48579335e272b5e9a547": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "eaced75b6683407aa91dec995bf486d0": {
            "model_name": "CheckboxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "-4",
                "disabled": false,
                "layout": "IPY_MODEL_9dfe9307bfd9415889f72de3b9ad2756",
                "style": "IPY_MODEL_29cd2a56696f48579335e272b5e9a547",
                "value": true
            }
        },
        "8b021b24d9d94e4b863c1652e26c8f6d": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "40a2516a06944e65b08c3d9b5ed703ea": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "a13c4aa618e04b90bec26869687b367b": {
            "model_name": "CheckboxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "-3",
                "disabled": false,
                "layout": "IPY_MODEL_8b021b24d9d94e4b863c1652e26c8f6d",
                "style": "IPY_MODEL_40a2516a06944e65b08c3d9b5ed703ea",
                "value": true
            }
        },
        "2d7df654668f45cd9303366e0d8a13cd": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "5461ae5b33ab4488868b21486c821d30": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "8b0c64f70d9c460c944ecdd8e1b1a136": {
            "model_name": "CheckboxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "-2",
                "disabled": false,
                "layout": "IPY_MODEL_2d7df654668f45cd9303366e0d8a13cd",
                "style": "IPY_MODEL_5461ae5b33ab4488868b21486c821d30",
                "value": true
            }
        },
        "a5ebf5793f234fbd9d9073addbf3bed2": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "f645d4d98cd54ab4a1f82efdc417a393": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "6ed7015557df43a0869bc57c38d67600": {
            "model_name": "CheckboxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "-1",
                "disabled": false,
                "layout": "IPY_MODEL_a5ebf5793f234fbd9d9073addbf3bed2",
                "style": "IPY_MODEL_f645d4d98cd54ab4a1f82efdc417a393",
                "value": true
            }
        },
        "6b65242b2bff4908bd780ba338134e43": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "94bcd1c065c74026b8e74322a9333fe2": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "6e266c38c3e942209a6bc35e55a64722": {
            "model_name": "CheckboxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "0",
                "disabled": false,
                "layout": "IPY_MODEL_6b65242b2bff4908bd780ba338134e43",
                "style": "IPY_MODEL_94bcd1c065c74026b8e74322a9333fe2",
                "value": true
            }
        },
        "05dcfed1bf6748ab9a43ff7b8998660a": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "c5ab02e37cf04714868239193d889c3e": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "2c29f9c8f1fc444fba6f83650f9ffd0e": {
            "model_name": "CheckboxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "1",
                "disabled": false,
                "layout": "IPY_MODEL_05dcfed1bf6748ab9a43ff7b8998660a",
                "style": "IPY_MODEL_c5ab02e37cf04714868239193d889c3e",
                "value": true
            }
        },
        "c7404734eeeb4db59eaa1ed61d5ec3c8": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "20d7c3cb5da14c24a10a08926f2be67a": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "61ef95df0fb1456a805a5f1b1477d1c2": {
            "model_name": "CheckboxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "2",
                "disabled": false,
                "layout": "IPY_MODEL_c7404734eeeb4db59eaa1ed61d5ec3c8",
                "style": "IPY_MODEL_20d7c3cb5da14c24a10a08926f2be67a",
                "value": true
            }
        },
        "972922d0a8a0406ab159a690c6f48b5c": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "ee2bfce583924fb29f9aba215b6288bd": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "5cec5abf7ee14d22b1389bdc57960400": {
            "model_name": "CheckboxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "3",
                "disabled": false,
                "layout": "IPY_MODEL_972922d0a8a0406ab159a690c6f48b5c",
                "style": "IPY_MODEL_ee2bfce583924fb29f9aba215b6288bd",
                "value": true
            }
        },
        "e1cba03bd67f453bb32485900d57501b": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "d415a44f077a46aea356201e13517323": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "18b4e93678bc4cc7bdb84a4313be9da9": {
            "model_name": "CheckboxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "4",
                "disabled": false,
                "layout": "IPY_MODEL_e1cba03bd67f453bb32485900d57501b",
                "style": "IPY_MODEL_d415a44f077a46aea356201e13517323",
                "value": true
            }
        },
        "1fbf37d03a034336b699ad11f9325c91": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "533b9c3195814d239644666f7d2aa666": {
            "model_name": "VBoxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_dom_classes": [
                    "widget-interact"
                ],
                "children": [
                    "IPY_MODEL_877fc9b0ad474919841e0864195fa429",
                    "IPY_MODEL_f69fcc597d284264bf1133eba7696abb"
                ],
                "layout": "IPY_MODEL_1fbf37d03a034336b699ad11f9325c91"
            }
        },
        "4c100aad93f1465190b6c6c74d3a22b0": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "76c1edd452aa466e9143841b5080489a": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "877fc9b0ad474919841e0864195fa429": {
            "model_name": "DropdownModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_options_labels": [
                    "Checkbox(value=True, description='-4')",
                    "Checkbox(value=True, description='-3')",
                    "Checkbox(value=True, description='-2')",
                    "Checkbox(value=True, description='-1')",
                    "Checkbox(value=True, description='0')",
                    "Checkbox(value=True, description='1')",
                    "Checkbox(value=True, description='2')",
                    "Checkbox(value=True, description='3')",
                    "Checkbox(value=True, description='4')"
                ],
                "description": "shift_list",
                "index": 0,
                "layout": "IPY_MODEL_4c100aad93f1465190b6c6c74d3a22b0",
                "style": "IPY_MODEL_76c1edd452aa466e9143841b5080489a"
            }
        },
        "aa6166fd9eed416a9fcada1138793b0e": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "f69fcc597d284264bf1133eba7696abb": {
            "model_name": "OutputModel",
            "model_module": "@jupyter-widgets/output",
            "model_module_version": "1.0.0",
            "state": {
                "layout": "IPY_MODEL_aa6166fd9eed416a9fcada1138793b0e"
            }
        },
        "efa9eddc2e3948e19de70d683f3fd9ee": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "bea630b9913543f29c9efd08a9d93116": {
            "model_name": "VBoxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_dom_classes": [
                    "widget-interact"
                ],
                "children": [
                    "IPY_MODEL_737db94e1df142bd8541c5cd8268bd96",
                    "IPY_MODEL_5c6d8377e0cc4ed2a816fd5ecee4150b"
                ],
                "layout": "IPY_MODEL_efa9eddc2e3948e19de70d683f3fd9ee"
            }
        },
        "fd32bfe7f7d54f2e9205929dd095793c": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "df0fad66c16e43af95c32ff2fb82eff6": {
            "model_name": "SliderStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "737db94e1df142bd8541c5cd8268bd96": {
            "model_name": "IntSliderModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "shift_list",
                "layout": "IPY_MODEL_fd32bfe7f7d54f2e9205929dd095793c",
                "max": 12,
                "min": -4,
                "style": "IPY_MODEL_df0fad66c16e43af95c32ff2fb82eff6",
                "value": 6
            }
        },
        "e8dd41c1be23483dbed38000a1a523eb": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "5c6d8377e0cc4ed2a816fd5ecee4150b": {
            "model_name": "OutputModel",
            "model_module": "@jupyter-widgets/output",
            "model_module_version": "1.0.0",
            "state": {
                "layout": "IPY_MODEL_e8dd41c1be23483dbed38000a1a523eb"
            }
        },
        "62ec036ec7fc4a4bb722649e0da5dba3": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "50ec115c36a44eed8d2865c5468e7280": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "71a44bd651514995b328cee9288b6e50": {
            "model_name": "CheckboxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "Dog",
                "disabled": false,
                "layout": "IPY_MODEL_62ec036ec7fc4a4bb722649e0da5dba3",
                "style": "IPY_MODEL_50ec115c36a44eed8d2865c5468e7280",
                "value": false
            }
        },
        "7571584d3b044dde8d19147bdc6beffd": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "e7495627e21f45e9b00ef3369aa1699f": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "89a568e8acb14f64ab5fdae746b9f831": {
            "model_name": "CheckboxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "Cat",
                "disabled": false,
                "layout": "IPY_MODEL_7571584d3b044dde8d19147bdc6beffd",
                "style": "IPY_MODEL_e7495627e21f45e9b00ef3369aa1699f",
                "value": false
            }
        },
        "b5dfc88c51444d09b241c8dadb403641": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "eae4a69d14c040acad844671d2a155e4": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "2c0bf735e58042868fb3374cb728f4b7": {
            "model_name": "CheckboxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "Mouse",
                "disabled": false,
                "layout": "IPY_MODEL_b5dfc88c51444d09b241c8dadb403641",
                "style": "IPY_MODEL_eae4a69d14c040acad844671d2a155e4",
                "value": false
            }
        },
        "dd7daf38f6c24a8eaa2dcb82745d570d": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "7206a485867a42c0ab9993208f0d663b": {
            "model_name": "VBoxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_dom_classes": [
                    "widget-interact"
                ],
                "children": [
                    "IPY_MODEL_3728f9fe39a24ca19de912078016b7ee",
                    "IPY_MODEL_9525919a80714c3fae74f1ff691864c5",
                    "IPY_MODEL_a031df6affac4496addc7c33d2ab4e26",
                    "IPY_MODEL_21dfe9a477854bd3ac18aab58f93edc7"
                ],
                "layout": "IPY_MODEL_dd7daf38f6c24a8eaa2dcb82745d570d"
            }
        },
        "c0ac2e4fe2274cd6bc89a329fa6307c1": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "410fd2ee35074c5d80cd1bacff9c8e55": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "3728f9fe39a24ca19de912078016b7ee": {
            "model_name": "CheckboxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "Dog",
                "disabled": false,
                "layout": "IPY_MODEL_c0ac2e4fe2274cd6bc89a329fa6307c1",
                "style": "IPY_MODEL_410fd2ee35074c5d80cd1bacff9c8e55",
                "value": false
            }
        },
        "80642147fb0d4c55ba64316077a4c95d": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "e097878683a7415e8a4c2c7f88d8c7ce": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "9525919a80714c3fae74f1ff691864c5": {
            "model_name": "CheckboxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "Cat",
                "disabled": false,
                "layout": "IPY_MODEL_80642147fb0d4c55ba64316077a4c95d",
                "style": "IPY_MODEL_e097878683a7415e8a4c2c7f88d8c7ce",
                "value": false
            }
        },
        "354d9b85a84b4fcbb2b599755b84753e": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "191d601b14414ff0a39c870cfdef395c": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "a031df6affac4496addc7c33d2ab4e26": {
            "model_name": "CheckboxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "Mouse",
                "disabled": false,
                "layout": "IPY_MODEL_354d9b85a84b4fcbb2b599755b84753e",
                "style": "IPY_MODEL_191d601b14414ff0a39c870cfdef395c",
                "value": false
            }
        },
        "90871f8910bd4df08624cc379652a5cc": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "21dfe9a477854bd3ac18aab58f93edc7": {
            "model_name": "OutputModel",
            "model_module": "@jupyter-widgets/output",
            "model_module_version": "1.0.0",
            "state": {
                "layout": "IPY_MODEL_90871f8910bd4df08624cc379652a5cc",
                "outputs": [
                    {
                        "output_type": "stream",
                        "text": "[('Dog', False), ('Cat', False), ('Mouse', False)]\n",
                        "name": "stdout"
                    }
                ]
            }
        },
        "bf03451ae7aa4c31b0cc658eceb00d5c": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "bcab5f683ddc43be92c855c851b35358": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "4f1222f6e3b647518f56999b462ae5fb": {
            "model_name": "CheckboxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "-4",
                "disabled": false,
                "layout": "IPY_MODEL_bf03451ae7aa4c31b0cc658eceb00d5c",
                "style": "IPY_MODEL_bcab5f683ddc43be92c855c851b35358",
                "value": false
            }
        },
        "fe6cad9ac6024611917f95ab8c5e8c25": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "fc987cd51eb94bcf987510de7d4d31ea": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "f8b790232f6648ff8ffd258bc8727f67": {
            "model_name": "CheckboxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "-3",
                "disabled": false,
                "layout": "IPY_MODEL_fe6cad9ac6024611917f95ab8c5e8c25",
                "style": "IPY_MODEL_fc987cd51eb94bcf987510de7d4d31ea",
                "value": false
            }
        },
        "afb1ee520a414018b61a345457bb60f9": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "de36c8fe32ee486c8ada5ee96aca21d7": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "f6108ebcea414bdca2ca8fe67e49392a": {
            "model_name": "CheckboxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "-2",
                "disabled": false,
                "layout": "IPY_MODEL_afb1ee520a414018b61a345457bb60f9",
                "style": "IPY_MODEL_de36c8fe32ee486c8ada5ee96aca21d7",
                "value": false
            }
        },
        "0564c72bdbea4a29ae8851508e21deab": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "302404f5dd6d464a8b7cef6ed38cb3f6": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "5ab5677e95a742bc882a3e389dc95be6": {
            "model_name": "CheckboxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "-1",
                "disabled": false,
                "layout": "IPY_MODEL_0564c72bdbea4a29ae8851508e21deab",
                "style": "IPY_MODEL_302404f5dd6d464a8b7cef6ed38cb3f6",
                "value": false
            }
        },
        "93699656e4694236a3bc44825ff21ae2": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "42d97e79bbb64a00af42ec2a72e3d547": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "4c0df6146dc94c2a9a95fb258800625f": {
            "model_name": "CheckboxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "0",
                "disabled": false,
                "layout": "IPY_MODEL_93699656e4694236a3bc44825ff21ae2",
                "style": "IPY_MODEL_42d97e79bbb64a00af42ec2a72e3d547",
                "value": false
            }
        },
        "db42599bed0348cd9a05d5e001a383b0": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "e8d5b6728c4b4fd9a6d9a8c7bc7df9a2": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "5b1f1ce0b0b54652b43a3bc07ce68f51": {
            "model_name": "CheckboxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "1",
                "disabled": false,
                "layout": "IPY_MODEL_db42599bed0348cd9a05d5e001a383b0",
                "style": "IPY_MODEL_e8d5b6728c4b4fd9a6d9a8c7bc7df9a2",
                "value": false
            }
        },
        "0ea447ceb0394df7a2c78c697c89212c": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "47bcf0556830460fa0b6a3132eb47de7": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "4496c180812140419cf7582b76d3523e": {
            "model_name": "CheckboxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "2",
                "disabled": false,
                "layout": "IPY_MODEL_0ea447ceb0394df7a2c78c697c89212c",
                "style": "IPY_MODEL_47bcf0556830460fa0b6a3132eb47de7",
                "value": false
            }
        },
        "edde0156b1ce46fcb48b270440cfd30b": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "37e138e0c2974ef68d156a50ed5af8f1": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "d3976f4347e94200a300c61541f875b0": {
            "model_name": "CheckboxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "3",
                "disabled": false,
                "layout": "IPY_MODEL_edde0156b1ce46fcb48b270440cfd30b",
                "style": "IPY_MODEL_37e138e0c2974ef68d156a50ed5af8f1",
                "value": false
            }
        },
        "12e00a539aef4b289ac329653b100da6": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "1517fca00fd142c88883c031f352722f": {
            "model_name": "VBoxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_dom_classes": [
                    "widget-interact"
                ],
                "children": [
                    "IPY_MODEL_1ada4de297934e00b9983315cf6bbe6c",
                    "IPY_MODEL_369f1a48ee4d44f98209fbc946eee9de",
                    "IPY_MODEL_37396cacc68e4d37914bcf8cf508e924",
                    "IPY_MODEL_5770b014ac59499e91684820f72c820d",
                    "IPY_MODEL_8e2b4800104842b2a70a854b84c1564a",
                    "IPY_MODEL_20dfbc97ffba4c889c7128303db44159",
                    "IPY_MODEL_0c4c40c15cb64abb963824d483927495",
                    "IPY_MODEL_a9b5099785ee4007a0b536a6fd7016d3",
                    "IPY_MODEL_fe9217be14b24c81b0ba7361a745f3d9"
                ],
                "layout": "IPY_MODEL_12e00a539aef4b289ac329653b100da6"
            }
        },
        "fddc438dd4ca4be8a38f62488de168e0": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "4f95518d2a75461b87dac55286b794fb": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "1ada4de297934e00b9983315cf6bbe6c": {
            "model_name": "CheckboxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "-4",
                "disabled": false,
                "layout": "IPY_MODEL_fddc438dd4ca4be8a38f62488de168e0",
                "style": "IPY_MODEL_4f95518d2a75461b87dac55286b794fb",
                "value": false
            }
        },
        "392c2183e6dd45f38c0d5a9b162c7190": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "f55852a156ff46088be21462f938b0fe": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "369f1a48ee4d44f98209fbc946eee9de": {
            "model_name": "CheckboxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "-3",
                "disabled": false,
                "layout": "IPY_MODEL_392c2183e6dd45f38c0d5a9b162c7190",
                "style": "IPY_MODEL_f55852a156ff46088be21462f938b0fe",
                "value": true
            }
        },
        "3295d1cef42a4308994ae64a0a18cf61": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "7f098e84aaf64311815844ef6b5fc77a": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "37396cacc68e4d37914bcf8cf508e924": {
            "model_name": "CheckboxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "-2",
                "disabled": false,
                "layout": "IPY_MODEL_3295d1cef42a4308994ae64a0a18cf61",
                "style": "IPY_MODEL_7f098e84aaf64311815844ef6b5fc77a",
                "value": false
            }
        },
        "0ac0d55d50f048e19616fa1e8c20b8d8": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "25ac16a8440d400fa87f4181ea52ccc3": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "5770b014ac59499e91684820f72c820d": {
            "model_name": "CheckboxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "-1",
                "disabled": false,
                "layout": "IPY_MODEL_0ac0d55d50f048e19616fa1e8c20b8d8",
                "style": "IPY_MODEL_25ac16a8440d400fa87f4181ea52ccc3",
                "value": false
            }
        },
        "77b0443221424b3394b49f3f52a19b8d": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "ce7ab16e338f449c913738e7e62517fa": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "8e2b4800104842b2a70a854b84c1564a": {
            "model_name": "CheckboxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "0",
                "disabled": false,
                "layout": "IPY_MODEL_77b0443221424b3394b49f3f52a19b8d",
                "style": "IPY_MODEL_ce7ab16e338f449c913738e7e62517fa",
                "value": false
            }
        },
        "b40d5488dc0e465490f3b5bc2bca1f7a": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "c671f4cfc2c0461ebb47e2aaac0fe57a": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "20dfbc97ffba4c889c7128303db44159": {
            "model_name": "CheckboxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "1",
                "disabled": false,
                "layout": "IPY_MODEL_b40d5488dc0e465490f3b5bc2bca1f7a",
                "style": "IPY_MODEL_c671f4cfc2c0461ebb47e2aaac0fe57a",
                "value": false
            }
        },
        "64c3737ba90349f88b120b094f7df12f": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "f39151edcfb341c1968e82bbcb3ebe50": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "0c4c40c15cb64abb963824d483927495": {
            "model_name": "CheckboxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "2",
                "disabled": false,
                "layout": "IPY_MODEL_64c3737ba90349f88b120b094f7df12f",
                "style": "IPY_MODEL_f39151edcfb341c1968e82bbcb3ebe50",
                "value": false
            }
        },
        "2c7ceba56fc347ebad1dfeacee18e438": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "d0f862d875cb4a608890f57653c0972d": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "a9b5099785ee4007a0b536a6fd7016d3": {
            "model_name": "CheckboxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "3",
                "disabled": false,
                "layout": "IPY_MODEL_2c7ceba56fc347ebad1dfeacee18e438",
                "style": "IPY_MODEL_d0f862d875cb4a608890f57653c0972d",
                "value": false
            }
        },
        "796cba23fefe4543992779256e9fd7b3": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "fe9217be14b24c81b0ba7361a745f3d9": {
            "model_name": "OutputModel",
            "model_module": "@jupyter-widgets/output",
            "model_module_version": "1.0.0",
            "state": {
                "layout": "IPY_MODEL_796cba23fefe4543992779256e9fd7b3",
                "outputs": [
                    {
                        "output_type": "stream",
                        "text": "[('-4', False), ('-3', True), ('-2', False), ('-1', False), ('0', False), ('1', False), ('2', False), ('3', False)]\n",
                        "name": "stdout"
                    }
                ]
            }
        },
        "9565f937aa3e43ebaeb3e7487957d3b3": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "3c9f86a083df4bd2af8f46b1f994549b": {
            "model_name": "ButtonStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {}
        },
        "d872d49ed59f422d818c396078446f24": {
            "model_name": "ButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "correct",
                "layout": "IPY_MODEL_9565f937aa3e43ebaeb3e7487957d3b3",
                "style": "IPY_MODEL_3c9f86a083df4bd2af8f46b1f994549b"
            }
        },
        "08f1d8d970074fed90450f50f6963e2e": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "c7d9a47902c74480a0d4ff331da3b571": {
            "model_name": "ButtonStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {}
        },
        "29cbfef959114282943567822f60bdc2": {
            "model_name": "ButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "horse",
                "layout": "IPY_MODEL_08f1d8d970074fed90450f50f6963e2e",
                "style": "IPY_MODEL_c7d9a47902c74480a0d4ff331da3b571"
            }
        },
        "862016d5abbf4e00963498e895a5a616": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "19efc7c2442741f9925fb1757a8aecd2": {
            "model_name": "ButtonStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {}
        },
        "4088745528a14209b069ccf6a363716c": {
            "model_name": "ButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "battery",
                "layout": "IPY_MODEL_862016d5abbf4e00963498e895a5a616",
                "style": "IPY_MODEL_19efc7c2442741f9925fb1757a8aecd2"
            }
        },
        "e2560c765f074a7bac09e7c25bd29d15": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "2efd6acfd2de4314b409e3650a3186d1": {
            "model_name": "ButtonStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {}
        },
        "f82675ec57c140e19f4950d9101fd504": {
            "model_name": "ButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "staple",
                "layout": "IPY_MODEL_e2560c765f074a7bac09e7c25bd29d15",
                "style": "IPY_MODEL_2efd6acfd2de4314b409e3650a3186d1"
            }
        },
        "2d1587e2b7e54f3eac2fb5290aa133c8": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "1b0a6df3aa92486fb4d83124c05b8539": {
            "model_name": "VBoxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "children": [
                    "IPY_MODEL_d872d49ed59f422d818c396078446f24",
                    "IPY_MODEL_29cbfef959114282943567822f60bdc2"
                ],
                "layout": "IPY_MODEL_2d1587e2b7e54f3eac2fb5290aa133c8"
            }
        },
        "ea37721cccd34d1288489e803b65ddf5": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "a194fa2b01d1406d8200b3ef20f23fc0": {
            "model_name": "VBoxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "children": [
                    "IPY_MODEL_4088745528a14209b069ccf6a363716c",
                    "IPY_MODEL_f82675ec57c140e19f4950d9101fd504"
                ],
                "layout": "IPY_MODEL_ea37721cccd34d1288489e803b65ddf5"
            }
        },
        "30360a54d76f4be796c2513a4dd84ba1": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "5fa4996234e948cbacd9c095a9f4e427": {
            "model_name": "ButtonStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {}
        },
        "343be2151a8d44029ebbd5053f4d3653": {
            "model_name": "ButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "correct",
                "layout": "IPY_MODEL_30360a54d76f4be796c2513a4dd84ba1",
                "style": "IPY_MODEL_5fa4996234e948cbacd9c095a9f4e427"
            }
        },
        "6a92a2c5bcd845aba6f3ca6eb650c521": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "a36302cbeb7543fba260a8f577158a99": {
            "model_name": "ButtonStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {}
        },
        "f99dbdbd5b93469f9747b2a9e8069696": {
            "model_name": "ButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "horse",
                "layout": "IPY_MODEL_6a92a2c5bcd845aba6f3ca6eb650c521",
                "style": "IPY_MODEL_a36302cbeb7543fba260a8f577158a99"
            }
        },
        "e224e130b6ea40d1a6a225558b8993cc": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "4f6f42b038a84b569d9fe618b0026ec1": {
            "model_name": "ButtonStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {}
        },
        "0259326712374c5094a12bfec4de2a81": {
            "model_name": "ButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "battery",
                "layout": "IPY_MODEL_e224e130b6ea40d1a6a225558b8993cc",
                "style": "IPY_MODEL_4f6f42b038a84b569d9fe618b0026ec1"
            }
        },
        "7af75c144d0e4e618f3ac23f1585bb49": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "34609d6c8da747419da7ed2600c56e7a": {
            "model_name": "ButtonStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {}
        },
        "7db5502c6d8846c09b32be8dfd9419b4": {
            "model_name": "ButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "staple",
                "layout": "IPY_MODEL_7af75c144d0e4e618f3ac23f1585bb49",
                "style": "IPY_MODEL_34609d6c8da747419da7ed2600c56e7a"
            }
        },
        "bf1cc7c7fab34e0780a4ea28b0c38498": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "2765395d0b5448e1aff62698051202ce": {
            "model_name": "VBoxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "children": [
                    "IPY_MODEL_343be2151a8d44029ebbd5053f4d3653",
                    "IPY_MODEL_f99dbdbd5b93469f9747b2a9e8069696"
                ],
                "layout": "IPY_MODEL_bf1cc7c7fab34e0780a4ea28b0c38498"
            }
        },
        "56e5f0e014a04727890f812e9dc52e1a": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "04cc22241c57455389369d9678f59570": {
            "model_name": "VBoxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "children": [
                    "IPY_MODEL_0259326712374c5094a12bfec4de2a81",
                    "IPY_MODEL_7db5502c6d8846c09b32be8dfd9419b4"
                ],
                "layout": "IPY_MODEL_56e5f0e014a04727890f812e9dc52e1a"
            }
        },
        "8c13462f2ab34a42ab44d9242efd7e3a": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "eadb2eae9f084ac6a12f65b486d35bdd": {
            "model_name": "HBoxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "children": [
                    "IPY_MODEL_2765395d0b5448e1aff62698051202ce",
                    "IPY_MODEL_04cc22241c57455389369d9678f59570"
                ],
                "layout": "IPY_MODEL_8c13462f2ab34a42ab44d9242efd7e3a"
            }
        },
        "eb312426021c4a08bd74fbbea291a636": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "8436dc7630054e9c8ea63d3fa5adddc2": {
            "model_name": "ButtonStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {}
        },
        "079600d7059a49cfb957356bbca1945a": {
            "model_name": "ButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "-4",
                "layout": "IPY_MODEL_eb312426021c4a08bd74fbbea291a636",
                "style": "IPY_MODEL_8436dc7630054e9c8ea63d3fa5adddc2"
            }
        },
        "2ce842698fce44d28266dc3495cd6877": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "b188124918d24cc0aad65ef022411ed8": {
            "model_name": "ButtonStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {}
        },
        "aeba837c3758484f852126801d80ff54": {
            "model_name": "ButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "-3",
                "layout": "IPY_MODEL_2ce842698fce44d28266dc3495cd6877",
                "style": "IPY_MODEL_b188124918d24cc0aad65ef022411ed8"
            }
        },
        "9745fb1828f94a25a11b3202019c90e9": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "a3e5d202cb42487db154caf2e84809bb": {
            "model_name": "ButtonStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {}
        },
        "2f0bead22e7b4523b032322618204044": {
            "model_name": "ButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "-2",
                "layout": "IPY_MODEL_9745fb1828f94a25a11b3202019c90e9",
                "style": "IPY_MODEL_a3e5d202cb42487db154caf2e84809bb"
            }
        },
        "2857c3418d8c492f82084bb1b0f087d6": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "0ad37f10ca0f4bb68430b9a4886770ec": {
            "model_name": "ButtonStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {}
        },
        "c16751d4abbd40ac9ee03707e2a10f4d": {
            "model_name": "ButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "-1",
                "layout": "IPY_MODEL_2857c3418d8c492f82084bb1b0f087d6",
                "style": "IPY_MODEL_0ad37f10ca0f4bb68430b9a4886770ec"
            }
        },
        "9e148134ea7a4a5bb8ec1eb211bddc6a": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "3464712c09d642e6bc4df845ab09dedd": {
            "model_name": "ButtonStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {}
        },
        "5e0329ddbea14c55ac2d3250a1054136": {
            "model_name": "ButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "0",
                "layout": "IPY_MODEL_9e148134ea7a4a5bb8ec1eb211bddc6a",
                "style": "IPY_MODEL_3464712c09d642e6bc4df845ab09dedd"
            }
        },
        "f4f78da60b5841358ff85614f344a147": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "a233b137f0ca42389e34c75456489927": {
            "model_name": "ButtonStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {}
        },
        "a26e007e20a34b038fa4c83bda51394f": {
            "model_name": "ButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "1",
                "layout": "IPY_MODEL_f4f78da60b5841358ff85614f344a147",
                "style": "IPY_MODEL_a233b137f0ca42389e34c75456489927"
            }
        },
        "692f9417fea44c999ca4b43c4baced86": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "d2deda9f05ba40aea71fa2c5a6e96220": {
            "model_name": "ButtonStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {}
        },
        "ae0d77eb022241098cf7bf27707f4b55": {
            "model_name": "ButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "2",
                "layout": "IPY_MODEL_692f9417fea44c999ca4b43c4baced86",
                "style": "IPY_MODEL_d2deda9f05ba40aea71fa2c5a6e96220"
            }
        },
        "72e9e199053f4b1299dada9df6b5983f": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "92dda95f9965467bb05cd974a93375cf": {
            "model_name": "ButtonStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {}
        },
        "405baae1857c487696840313b204fc9d": {
            "model_name": "ButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "3",
                "layout": "IPY_MODEL_72e9e199053f4b1299dada9df6b5983f",
                "style": "IPY_MODEL_92dda95f9965467bb05cd974a93375cf"
            }
        },
        "88201471c7884fe08766ebe1d4ca57a6": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "59d3478a206f4283b4292a8a8ba9b39d": {
            "model_name": "VBoxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "children": [
                    "IPY_MODEL_079600d7059a49cfb957356bbca1945a",
                    "IPY_MODEL_aeba837c3758484f852126801d80ff54"
                ],
                "layout": "IPY_MODEL_88201471c7884fe08766ebe1d4ca57a6"
            }
        },
        "492e0f802e934e7a876d9f9935f9b1ed": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "3e22ec487069495d9bee1e08401c1454": {
            "model_name": "VBoxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "children": [
                    "IPY_MODEL_2f0bead22e7b4523b032322618204044",
                    "IPY_MODEL_c16751d4abbd40ac9ee03707e2a10f4d"
                ],
                "layout": "IPY_MODEL_492e0f802e934e7a876d9f9935f9b1ed"
            }
        },
        "8ce2c3c7a8d64242b2d959a1b2630441": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "4684d1a46fe34aa6a321b6c9cb0fd985": {
            "model_name": "HBoxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "children": [
                    "IPY_MODEL_59d3478a206f4283b4292a8a8ba9b39d",
                    "IPY_MODEL_3e22ec487069495d9bee1e08401c1454"
                ],
                "layout": "IPY_MODEL_8ce2c3c7a8d64242b2d959a1b2630441"
            }
        },
        "85e20b76a32c45e6af2ff25445bc61ed": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "76eb4b314b3b432a91cbe3c0afa9c4bf": {
            "model_name": "ButtonStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {}
        },
        "88469feddc5b4609899ac008c428175f": {
            "model_name": "ButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "-4",
                "layout": "IPY_MODEL_85e20b76a32c45e6af2ff25445bc61ed",
                "style": "IPY_MODEL_76eb4b314b3b432a91cbe3c0afa9c4bf"
            }
        },
        "30f0543483014b6e9add43bed0537d45": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "e8de80c025bb4b5abcfd08de00073e58": {
            "model_name": "ButtonStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {}
        },
        "5fd43e859b75413f88fb897f74e6afc2": {
            "model_name": "ButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "-3",
                "layout": "IPY_MODEL_30f0543483014b6e9add43bed0537d45",
                "style": "IPY_MODEL_e8de80c025bb4b5abcfd08de00073e58"
            }
        },
        "01bb9232b6bc40248f9b657dd2c16b60": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "13417ffa7aee4e44b4699ee918940e9e": {
            "model_name": "ButtonStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {}
        },
        "ffe44e4efae140a1be223c61a0d25de6": {
            "model_name": "ButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "-2",
                "layout": "IPY_MODEL_01bb9232b6bc40248f9b657dd2c16b60",
                "style": "IPY_MODEL_13417ffa7aee4e44b4699ee918940e9e"
            }
        },
        "7ee808371dac4c179adac02f56fe3992": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "def51f886b3b42818ccf3c70e9c3519a": {
            "model_name": "ButtonStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {}
        },
        "2dc2c083c69d4027b97ddee91352e3f2": {
            "model_name": "ButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "-1",
                "layout": "IPY_MODEL_7ee808371dac4c179adac02f56fe3992",
                "style": "IPY_MODEL_def51f886b3b42818ccf3c70e9c3519a"
            }
        },
        "5ac5f1a73a79455a8d29372cbb93d993": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "d109f61f220948978519c704d50b4d4d": {
            "model_name": "ButtonStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {}
        },
        "27410c8d410445a9a82bd175c7859c89": {
            "model_name": "ButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "0",
                "layout": "IPY_MODEL_5ac5f1a73a79455a8d29372cbb93d993",
                "style": "IPY_MODEL_d109f61f220948978519c704d50b4d4d"
            }
        },
        "89ac7b58ecb14e2a9555d77373e5d740": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "e7bc01aad6854b4bb14bc957ae96773b": {
            "model_name": "ButtonStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {}
        },
        "8c33605e3d454854a9332e4d50c4747a": {
            "model_name": "ButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "1",
                "layout": "IPY_MODEL_89ac7b58ecb14e2a9555d77373e5d740",
                "style": "IPY_MODEL_e7bc01aad6854b4bb14bc957ae96773b"
            }
        },
        "359b1c0fdbb2477d9940bb388d01e410": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "58324486f5084cbd885d0217c7baa134": {
            "model_name": "ButtonStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {}
        },
        "37ff2e406b4a44fd90af7be44fc08503": {
            "model_name": "ButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "2",
                "layout": "IPY_MODEL_359b1c0fdbb2477d9940bb388d01e410",
                "style": "IPY_MODEL_58324486f5084cbd885d0217c7baa134"
            }
        },
        "02c7b2ef7987421092ceaec2d459cc6f": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "5d306d24daea4e47abdc32157a83abd5": {
            "model_name": "ButtonStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {}
        },
        "6e7c1066ff0747f1a8a9faebee9ee618": {
            "model_name": "ButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "3",
                "layout": "IPY_MODEL_02c7b2ef7987421092ceaec2d459cc6f",
                "style": "IPY_MODEL_5d306d24daea4e47abdc32157a83abd5"
            }
        },
        "e41ea8bd1084434986531642aa56073f": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "b4365cf425fa4072a9a3f9af1425ee59": {
            "model_name": "ButtonStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {}
        },
        "0eafbd3a10624c29a0c87b86869e7c2e": {
            "model_name": "ButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "-4",
                "layout": "IPY_MODEL_e41ea8bd1084434986531642aa56073f",
                "style": "IPY_MODEL_b4365cf425fa4072a9a3f9af1425ee59"
            }
        },
        "b2ae1bae1b4e4e9b948d5976652d1042": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "5318e2d67ad3497494d3e51b24a72001": {
            "model_name": "ButtonStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {}
        },
        "e88aeec147384af594b7276ecffd1269": {
            "model_name": "ButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "-3",
                "layout": "IPY_MODEL_b2ae1bae1b4e4e9b948d5976652d1042",
                "style": "IPY_MODEL_5318e2d67ad3497494d3e51b24a72001"
            }
        },
        "dddd9b93eb59440aac887e27c318bfbe": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "57158dbaae684065ad00c7577545784e": {
            "model_name": "ButtonStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {}
        },
        "91bb22ff0632467199c449076734825d": {
            "model_name": "ButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "-2",
                "layout": "IPY_MODEL_dddd9b93eb59440aac887e27c318bfbe",
                "style": "IPY_MODEL_57158dbaae684065ad00c7577545784e"
            }
        },
        "91711c3912894b6bb190db3685c233ad": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "bc4d64877d0e4fc88c5cc06c03abc4a8": {
            "model_name": "ButtonStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {}
        },
        "2e69dd75933448019f0023266fed0b1d": {
            "model_name": "ButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "-1",
                "layout": "IPY_MODEL_91711c3912894b6bb190db3685c233ad",
                "style": "IPY_MODEL_bc4d64877d0e4fc88c5cc06c03abc4a8"
            }
        },
        "4027ab0d188a4960914ca13d98c45be9": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "21b7195926a644a2b701cab347e0cf0d": {
            "model_name": "ButtonStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {}
        },
        "0ec9ae5b450c48f882b6565bd9522f63": {
            "model_name": "ButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "0",
                "layout": "IPY_MODEL_4027ab0d188a4960914ca13d98c45be9",
                "style": "IPY_MODEL_21b7195926a644a2b701cab347e0cf0d"
            }
        },
        "3281ea8d626d4c3184fdbc7d490e9ad2": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "bd5b1b045abd4f8589933cc8e9962419": {
            "model_name": "ButtonStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {}
        },
        "adb3d3664979478d8e98b35cb7c11f85": {
            "model_name": "ButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "1",
                "layout": "IPY_MODEL_3281ea8d626d4c3184fdbc7d490e9ad2",
                "style": "IPY_MODEL_bd5b1b045abd4f8589933cc8e9962419"
            }
        },
        "997493ef1e5f489093b350f38cd01f5d": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "89fecc0bdb39434a862b98b914db21ad": {
            "model_name": "ButtonStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {}
        },
        "8917d3772f7442ac892e09a077ff00b4": {
            "model_name": "ButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "2",
                "layout": "IPY_MODEL_997493ef1e5f489093b350f38cd01f5d",
                "style": "IPY_MODEL_89fecc0bdb39434a862b98b914db21ad"
            }
        },
        "3c149991e4e54a7da6d25aa288e79138": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "112111b3985d46a0a876a33f5f1ac2d1": {
            "model_name": "ButtonStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {}
        },
        "a9bffe8a2ac5400c80e388c56394dbbd": {
            "model_name": "ButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "3",
                "layout": "IPY_MODEL_3c149991e4e54a7da6d25aa288e79138",
                "style": "IPY_MODEL_112111b3985d46a0a876a33f5f1ac2d1"
            }
        },
        "32042b1458b94c81aeb405c797bf6dcb": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "666ff42017e14ce38d577af6f21bbc8e": {
            "model_name": "ButtonStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {}
        },
        "a89c7214379d4141aff483120e629fd9": {
            "model_name": "ButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "-4",
                "layout": "IPY_MODEL_32042b1458b94c81aeb405c797bf6dcb",
                "style": "IPY_MODEL_666ff42017e14ce38d577af6f21bbc8e"
            }
        },
        "83c43f5e3db54540b61be69bf04892f2": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "e65009cf783448cf9ff4f433b6d35a07": {
            "model_name": "ButtonStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {}
        },
        "cc8d8ce6aca8430dbcb74379fee7dea6": {
            "model_name": "ButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "-3",
                "layout": "IPY_MODEL_83c43f5e3db54540b61be69bf04892f2",
                "style": "IPY_MODEL_e65009cf783448cf9ff4f433b6d35a07"
            }
        },
        "2644cc61b82041879673f873d0d874e2": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "5d0571f7d15d4f228b34fa5a737f794b": {
            "model_name": "ButtonStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {}
        },
        "49fb1af3d672409da54b53e143846222": {
            "model_name": "ButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "-2",
                "layout": "IPY_MODEL_2644cc61b82041879673f873d0d874e2",
                "style": "IPY_MODEL_5d0571f7d15d4f228b34fa5a737f794b"
            }
        },
        "d1ce587e44e140178b46aca30c3842d0": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "1b4af2ae0887453d833963fd6da082ff": {
            "model_name": "ButtonStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {}
        },
        "8bfbc039b4e74a2ba6e4d59ecce78fe4": {
            "model_name": "ButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "-1",
                "layout": "IPY_MODEL_d1ce587e44e140178b46aca30c3842d0",
                "style": "IPY_MODEL_1b4af2ae0887453d833963fd6da082ff"
            }
        },
        "f8c9fb08085a4949883e081b7e60cd23": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "46bd19bacbbe440d9104e6493aad84ef": {
            "model_name": "ButtonStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {}
        },
        "6605e6f775534f99a25f40831a7cc736": {
            "model_name": "ButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "0",
                "layout": "IPY_MODEL_f8c9fb08085a4949883e081b7e60cd23",
                "style": "IPY_MODEL_46bd19bacbbe440d9104e6493aad84ef"
            }
        },
        "6316d790347a4980b24a47aac795a748": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "952ff477f04843b9b2867d9f564f8e99": {
            "model_name": "ButtonStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {}
        },
        "86fa9fd27a744368acc2ee944b6a3da9": {
            "model_name": "ButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "1",
                "layout": "IPY_MODEL_6316d790347a4980b24a47aac795a748",
                "style": "IPY_MODEL_952ff477f04843b9b2867d9f564f8e99"
            }
        },
        "e59a8385d91d4fbc8518d5ee9a7d2a60": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "896abf5147424a018556b72237ddcd9b": {
            "model_name": "ButtonStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {}
        },
        "533f0d6404ce4b43af630efe9c97d0da": {
            "model_name": "ButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "2",
                "layout": "IPY_MODEL_e59a8385d91d4fbc8518d5ee9a7d2a60",
                "style": "IPY_MODEL_896abf5147424a018556b72237ddcd9b"
            }
        },
        "83a9071baf804fbcaae9ae057afb00cc": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "c269f19a30b44b2fa7724d4c576e2ad7": {
            "model_name": "ButtonStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {}
        },
        "a5ff9ac0cb734d10b23164fe590b0862": {
            "model_name": "ButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "3",
                "layout": "IPY_MODEL_83a9071baf804fbcaae9ae057afb00cc",
                "style": "IPY_MODEL_c269f19a30b44b2fa7724d4c576e2ad7"
            }
        },
        "9dd3faceae534a2395a7640a63368123": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "29a96808d62a40998402fa981cdffbf5": {
            "model_name": "HBoxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "children": [
                    "IPY_MODEL_a89c7214379d4141aff483120e629fd9",
                    "IPY_MODEL_cc8d8ce6aca8430dbcb74379fee7dea6",
                    "IPY_MODEL_49fb1af3d672409da54b53e143846222",
                    "IPY_MODEL_8bfbc039b4e74a2ba6e4d59ecce78fe4"
                ],
                "layout": "IPY_MODEL_9dd3faceae534a2395a7640a63368123"
            }
        },
        "5e77103f4160463fb73369cb1cf723bc": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "5eaf49d46db5411da65ecb774a983f41": {
            "model_name": "ButtonStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {}
        },
        "674eef03b7944f21a2b244c915d4726a": {
            "model_name": "ButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "-4",
                "layout": "IPY_MODEL_5e77103f4160463fb73369cb1cf723bc",
                "style": "IPY_MODEL_5eaf49d46db5411da65ecb774a983f41"
            }
        },
        "905ff3830191449fa7d15ca6631ea1a2": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "2fc849c3a90e487790e26d488de6366e": {
            "model_name": "ButtonStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {}
        },
        "e6b253c09cd34068a8093c911fab012c": {
            "model_name": "ButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "-3",
                "layout": "IPY_MODEL_905ff3830191449fa7d15ca6631ea1a2",
                "style": "IPY_MODEL_2fc849c3a90e487790e26d488de6366e"
            }
        },
        "c6e3624301ea420f8e77097d64360e74": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "5dc461522a0343e8ac5acc9f214acf6c": {
            "model_name": "ButtonStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {}
        },
        "b214eb94f746460aa442c3bbc1d110dd": {
            "model_name": "ButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "-2",
                "layout": "IPY_MODEL_c6e3624301ea420f8e77097d64360e74",
                "style": "IPY_MODEL_5dc461522a0343e8ac5acc9f214acf6c"
            }
        },
        "364a7b6f3b544c2f8a732da7719b725e": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "2d7726ab2c1048b7bbce2459f5a0150f": {
            "model_name": "ButtonStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {}
        },
        "eea8fdb4bf0b44d89ec374741cfcb985": {
            "model_name": "ButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "-1",
                "layout": "IPY_MODEL_364a7b6f3b544c2f8a732da7719b725e",
                "style": "IPY_MODEL_2d7726ab2c1048b7bbce2459f5a0150f"
            }
        },
        "7a41340c91824606977e8d0b2691f0ad": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "990ea021f60146e490b72aa130cabf3e": {
            "model_name": "ButtonStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {}
        },
        "53a02698c2064ee084955da268c2f87f": {
            "model_name": "ButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "0",
                "layout": "IPY_MODEL_7a41340c91824606977e8d0b2691f0ad",
                "style": "IPY_MODEL_990ea021f60146e490b72aa130cabf3e"
            }
        },
        "6d8080f799fd4eaab2b2e31ddf34b147": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "82908fc9197b426f9afa1be905cdc98c": {
            "model_name": "ButtonStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {}
        },
        "0d031cda19044d7e9381573fc5eb1c1b": {
            "model_name": "ButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "1",
                "layout": "IPY_MODEL_6d8080f799fd4eaab2b2e31ddf34b147",
                "style": "IPY_MODEL_82908fc9197b426f9afa1be905cdc98c"
            }
        },
        "869a8ef66d55419283e49d56868e0004": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "2c1185ff6bc54867b8604d48b298d538": {
            "model_name": "ButtonStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {}
        },
        "8ead7878e58c4bbc9de290564cb72ca3": {
            "model_name": "ButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "2",
                "layout": "IPY_MODEL_869a8ef66d55419283e49d56868e0004",
                "style": "IPY_MODEL_2c1185ff6bc54867b8604d48b298d538"
            }
        },
        "4d44a89c2771462ba0f01e4120865af9": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "0b81dfff43114621be946afd9ffc8569": {
            "model_name": "ButtonStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {}
        },
        "a0cf7c93868f400f8fb3e930913312d8": {
            "model_name": "ButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "3",
                "layout": "IPY_MODEL_4d44a89c2771462ba0f01e4120865af9",
                "style": "IPY_MODEL_0b81dfff43114621be946afd9ffc8569"
            }
        },
        "a29d4406c4d241619521949a6e97e681": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "349dbdd3911a43e5a34ba86468a75955": {
            "model_name": "HBoxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "children": [
                    "IPY_MODEL_674eef03b7944f21a2b244c915d4726a",
                    "IPY_MODEL_e6b253c09cd34068a8093c911fab012c",
                    "IPY_MODEL_b214eb94f746460aa442c3bbc1d110dd",
                    "IPY_MODEL_eea8fdb4bf0b44d89ec374741cfcb985"
                ],
                "layout": "IPY_MODEL_a29d4406c4d241619521949a6e97e681"
            }
        },
        "230c0869420b492aa287a1d74f9a1076": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "0fb7cff2ec6b4a36aa3ff82778b7e050": {
            "model_name": "HBoxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "children": [
                    "IPY_MODEL_53a02698c2064ee084955da268c2f87f",
                    "IPY_MODEL_0d031cda19044d7e9381573fc5eb1c1b",
                    "IPY_MODEL_8ead7878e58c4bbc9de290564cb72ca3",
                    "IPY_MODEL_a0cf7c93868f400f8fb3e930913312d8"
                ],
                "layout": "IPY_MODEL_230c0869420b492aa287a1d74f9a1076"
            }
        },
        "a375d0eb552a4278becbfb265ca30279": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "57f873822c094e93884052e2eba0c665": {
            "model_name": "ButtonStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {}
        },
        "5d35c58c5fee4dd39e81f758af5e62f5": {
            "model_name": "ButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "-4",
                "layout": "IPY_MODEL_a375d0eb552a4278becbfb265ca30279",
                "style": "IPY_MODEL_57f873822c094e93884052e2eba0c665"
            }
        },
        "2c06504f795c413aa7f2dcb24bfbc573": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "935e9afeabf549b18ececbce9b4f66e9": {
            "model_name": "ButtonStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {}
        },
        "e72f4f27c5054a54b39fd44a35bd739d": {
            "model_name": "ButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "-3",
                "layout": "IPY_MODEL_2c06504f795c413aa7f2dcb24bfbc573",
                "style": "IPY_MODEL_935e9afeabf549b18ececbce9b4f66e9"
            }
        },
        "b5ef076917f34a48a80c0b2803ddac36": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "2316fb7097c74b1d9329690562f7f5b8": {
            "model_name": "ButtonStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {}
        },
        "d9667537d0d84ba2b57478bdd5a175e2": {
            "model_name": "ButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "-2",
                "layout": "IPY_MODEL_b5ef076917f34a48a80c0b2803ddac36",
                "style": "IPY_MODEL_2316fb7097c74b1d9329690562f7f5b8"
            }
        },
        "36c2675200ce41eaa8ccd4d2b17a5355": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "d53a4b6731964f3b835d90c370b6e2b6": {
            "model_name": "ButtonStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {}
        },
        "2833595e1c094b8ab88f5008e4557bb3": {
            "model_name": "ButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "-1",
                "layout": "IPY_MODEL_36c2675200ce41eaa8ccd4d2b17a5355",
                "style": "IPY_MODEL_d53a4b6731964f3b835d90c370b6e2b6"
            }
        },
        "366c0cd954474baa929d7c86eebcc43f": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "9df65269c2f94b3bbe7448f9648b52cc": {
            "model_name": "ButtonStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {}
        },
        "05acf846d2404fb9b3401422267332ed": {
            "model_name": "ButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "0",
                "layout": "IPY_MODEL_366c0cd954474baa929d7c86eebcc43f",
                "style": "IPY_MODEL_9df65269c2f94b3bbe7448f9648b52cc"
            }
        },
        "8bea419bbccd4a21aa5d58af17a0c400": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "989ed81f7a3d4e618f1a4dd62a9f0a00": {
            "model_name": "ButtonStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {}
        },
        "eef289e808974be393db64d95302210d": {
            "model_name": "ButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "1",
                "layout": "IPY_MODEL_8bea419bbccd4a21aa5d58af17a0c400",
                "style": "IPY_MODEL_989ed81f7a3d4e618f1a4dd62a9f0a00"
            }
        },
        "84ba00ec1ee54741b0f66b98f724ae87": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "864a9acef6df414abfc3b0f0c1703102": {
            "model_name": "ButtonStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {}
        },
        "cd34a5cb3bed4ffeae9e4c3b0456d176": {
            "model_name": "ButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "2",
                "layout": "IPY_MODEL_84ba00ec1ee54741b0f66b98f724ae87",
                "style": "IPY_MODEL_864a9acef6df414abfc3b0f0c1703102"
            }
        },
        "f52b9e338965427c9cf91b71e09b321d": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "524cc6d9fc024c3c9cf2a464d0c485d6": {
            "model_name": "ButtonStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {}
        },
        "b879ba86006347e9af90915a99535a8f": {
            "model_name": "ButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "3",
                "layout": "IPY_MODEL_f52b9e338965427c9cf91b71e09b321d",
                "style": "IPY_MODEL_524cc6d9fc024c3c9cf2a464d0c485d6"
            }
        },
        "066f9d4287c64ed89c8bf8d4c0c89b7b": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "ef14f1303ebb4575a3654beef1e55dea": {
            "model_name": "HBoxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "children": [
                    "IPY_MODEL_5d35c58c5fee4dd39e81f758af5e62f5",
                    "IPY_MODEL_e72f4f27c5054a54b39fd44a35bd739d",
                    "IPY_MODEL_d9667537d0d84ba2b57478bdd5a175e2",
                    "IPY_MODEL_2833595e1c094b8ab88f5008e4557bb3"
                ],
                "layout": "IPY_MODEL_066f9d4287c64ed89c8bf8d4c0c89b7b"
            }
        },
        "2983d2c3ceee4a29b3d4602219c9cd3c": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "59365cafc2d24d23b30e26b30ba818e7": {
            "model_name": "HBoxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "children": [
                    "IPY_MODEL_05acf846d2404fb9b3401422267332ed",
                    "IPY_MODEL_eef289e808974be393db64d95302210d",
                    "IPY_MODEL_cd34a5cb3bed4ffeae9e4c3b0456d176",
                    "IPY_MODEL_b879ba86006347e9af90915a99535a8f"
                ],
                "layout": "IPY_MODEL_2983d2c3ceee4a29b3d4602219c9cd3c"
            }
        },
        "405462ecd5e94fcd8140b4a13a4da9d2": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "ed79c2557b8144e4830e5e5b8d434af9": {
            "model_name": "ButtonStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {}
        },
        "ac32921a097448c795bc00fb2a154751": {
            "model_name": "ButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "-4",
                "layout": "IPY_MODEL_405462ecd5e94fcd8140b4a13a4da9d2",
                "style": "IPY_MODEL_ed79c2557b8144e4830e5e5b8d434af9"
            }
        },
        "8f41438178e14106ad085ac845720715": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "32d5d65910de4f138fa803218def972e": {
            "model_name": "ButtonStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {}
        },
        "5ac6f63c3fcc482f805b72c1b15d665e": {
            "model_name": "ButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "-3",
                "layout": "IPY_MODEL_8f41438178e14106ad085ac845720715",
                "style": "IPY_MODEL_32d5d65910de4f138fa803218def972e"
            }
        },
        "c56bfec728794feeb36d323703f1b9be": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "e722d71792f5460aaaea01e4aad6e763": {
            "model_name": "ButtonStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {}
        },
        "99f5437329684176a763ef09d668e5aa": {
            "model_name": "ButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "-2",
                "layout": "IPY_MODEL_c56bfec728794feeb36d323703f1b9be",
                "style": "IPY_MODEL_e722d71792f5460aaaea01e4aad6e763"
            }
        },
        "9dccd326595a47c38ce029e689a014f0": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "48f255ecdeff4c46ba119c3eb098aafe": {
            "model_name": "ButtonStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {}
        },
        "a67719eeafae48529df9156fdcd8bb3d": {
            "model_name": "ButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "-1",
                "layout": "IPY_MODEL_9dccd326595a47c38ce029e689a014f0",
                "style": "IPY_MODEL_48f255ecdeff4c46ba119c3eb098aafe"
            }
        },
        "5af115a6be684bf299e5cae939227452": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "c77333b3d17242bf9ad9dd2a5bb1147d": {
            "model_name": "ButtonStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {}
        },
        "570fa10374fb4993a94f9be4aaeaebda": {
            "model_name": "ButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "0",
                "layout": "IPY_MODEL_5af115a6be684bf299e5cae939227452",
                "style": "IPY_MODEL_c77333b3d17242bf9ad9dd2a5bb1147d"
            }
        },
        "da1425ca64e24a46b788ea43cd5ee234": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "680bc483b63d463083c506e2ddead3b2": {
            "model_name": "ButtonStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {}
        },
        "5929cb44e0ee486abdae796333f616e6": {
            "model_name": "ButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "1",
                "layout": "IPY_MODEL_da1425ca64e24a46b788ea43cd5ee234",
                "style": "IPY_MODEL_680bc483b63d463083c506e2ddead3b2"
            }
        },
        "a02d3a9ba7074a07af4f87dca7dc5e5d": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "3493b3344c6d46fa9c1431f2e5409fef": {
            "model_name": "ButtonStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {}
        },
        "824f20163b884f4fb07ee42f11235726": {
            "model_name": "ButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "2",
                "layout": "IPY_MODEL_a02d3a9ba7074a07af4f87dca7dc5e5d",
                "style": "IPY_MODEL_3493b3344c6d46fa9c1431f2e5409fef"
            }
        },
        "ed1a29efd280465aa8d22d8f29e3e897": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "fbca2661c6874365aeb80252e2bc53a2": {
            "model_name": "ButtonStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {}
        },
        "ef489bf9963648fcbda190c5ab439203": {
            "model_name": "ButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "3",
                "layout": "IPY_MODEL_ed1a29efd280465aa8d22d8f29e3e897",
                "style": "IPY_MODEL_fbca2661c6874365aeb80252e2bc53a2"
            }
        },
        "663152379fb74cd5ba5256fd4aa8b70e": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "c9042988fac543aaa445f6aae1fed8d9": {
            "model_name": "HBoxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "children": [
                    "IPY_MODEL_ac32921a097448c795bc00fb2a154751",
                    "IPY_MODEL_5ac6f63c3fcc482f805b72c1b15d665e",
                    "IPY_MODEL_99f5437329684176a763ef09d668e5aa",
                    "IPY_MODEL_a67719eeafae48529df9156fdcd8bb3d"
                ],
                "layout": "IPY_MODEL_663152379fb74cd5ba5256fd4aa8b70e"
            }
        },
        "bae9bf3985534076ba3848ca1aceb165": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "2944f82d7cfd4a17849c59564a8b5362": {
            "model_name": "HBoxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "children": [
                    "IPY_MODEL_570fa10374fb4993a94f9be4aaeaebda",
                    "IPY_MODEL_5929cb44e0ee486abdae796333f616e6",
                    "IPY_MODEL_824f20163b884f4fb07ee42f11235726",
                    "IPY_MODEL_ef489bf9963648fcbda190c5ab439203"
                ],
                "layout": "IPY_MODEL_bae9bf3985534076ba3848ca1aceb165"
            }
        },
        "87ad2b3760524a5cbab736b97bd21210": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "4b3d22e31a534b968f7336384bfd2018": {
            "model_name": "ButtonStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {}
        },
        "1fc8198bc2404d8ca7ba384833facb14": {
            "model_name": "ButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "-4",
                "layout": "IPY_MODEL_87ad2b3760524a5cbab736b97bd21210",
                "style": "IPY_MODEL_4b3d22e31a534b968f7336384bfd2018"
            }
        },
        "a6a4bac719d644c6b6fd5f686c2a26d6": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "a2410ca72fab4b1d94a72e3cf38ec7d3": {
            "model_name": "ButtonStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {}
        },
        "4d4c936030914512a4dc679c14c2bda7": {
            "model_name": "ButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "-3",
                "layout": "IPY_MODEL_a6a4bac719d644c6b6fd5f686c2a26d6",
                "style": "IPY_MODEL_a2410ca72fab4b1d94a72e3cf38ec7d3"
            }
        },
        "a7cef4bae26f4a67b763f8b32cfbe2b8": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "0c5595eb9f0847a8968830c49626ab95": {
            "model_name": "ButtonStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {}
        },
        "6a1c7f6789fc442e901c63baa31f678c": {
            "model_name": "ButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "-2",
                "layout": "IPY_MODEL_a7cef4bae26f4a67b763f8b32cfbe2b8",
                "style": "IPY_MODEL_0c5595eb9f0847a8968830c49626ab95"
            }
        },
        "822fd1cbff1a4b8ca33b2c77eb50f5e6": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "8d8991b3c77641fe910b9900d6af7d43": {
            "model_name": "ButtonStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {}
        },
        "cd14fd15f2644f41bedc5d44dfe7d352": {
            "model_name": "ButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "-1",
                "layout": "IPY_MODEL_822fd1cbff1a4b8ca33b2c77eb50f5e6",
                "style": "IPY_MODEL_8d8991b3c77641fe910b9900d6af7d43"
            }
        },
        "aa406d95be64470a858b462d4ff5bd36": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "ca982ae6c0b746318e7780feebc48dd1": {
            "model_name": "ButtonStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {}
        },
        "cfccc37643c94c948d09718d9dbb619d": {
            "model_name": "ButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "0",
                "layout": "IPY_MODEL_aa406d95be64470a858b462d4ff5bd36",
                "style": "IPY_MODEL_ca982ae6c0b746318e7780feebc48dd1"
            }
        },
        "2701f716136a412cac8df0714c009205": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "c5019b44e13944ea9b1253aba2859bdc": {
            "model_name": "ButtonStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {}
        },
        "831b1beb46dd4935b5319f8003ac5658": {
            "model_name": "ButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "1",
                "layout": "IPY_MODEL_2701f716136a412cac8df0714c009205",
                "style": "IPY_MODEL_c5019b44e13944ea9b1253aba2859bdc"
            }
        },
        "325ee0c44ea14bfea7ae09cd2926aa16": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "a0534cc49ac543a3b67e4c72dd256531": {
            "model_name": "ButtonStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {}
        },
        "59ed3061daee43fa890743fbafe6f60a": {
            "model_name": "ButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "2",
                "layout": "IPY_MODEL_325ee0c44ea14bfea7ae09cd2926aa16",
                "style": "IPY_MODEL_a0534cc49ac543a3b67e4c72dd256531"
            }
        },
        "521c73cebca5436382835c153323f659": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "3af1cf5f61f7435aa0ec27e202335fda": {
            "model_name": "ButtonStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {}
        },
        "e4e58481280249d994ca5b7f7e98a7ca": {
            "model_name": "ButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "3",
                "layout": "IPY_MODEL_521c73cebca5436382835c153323f659",
                "style": "IPY_MODEL_3af1cf5f61f7435aa0ec27e202335fda"
            }
        },
        "e805036c313e4e759d0d912ebb579057": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "c0fb70c44a1f46c19deef56bc4066c24": {
            "model_name": "HBoxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "children": [
                    "IPY_MODEL_1fc8198bc2404d8ca7ba384833facb14",
                    "IPY_MODEL_4d4c936030914512a4dc679c14c2bda7",
                    "IPY_MODEL_6a1c7f6789fc442e901c63baa31f678c",
                    "IPY_MODEL_cd14fd15f2644f41bedc5d44dfe7d352"
                ],
                "layout": "IPY_MODEL_e805036c313e4e759d0d912ebb579057"
            }
        },
        "f1b48597c83a48e59c9cfedc7868aea6": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "23221c1802d44d2db5705cdaacaf3baa": {
            "model_name": "HBoxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "children": [
                    "IPY_MODEL_cfccc37643c94c948d09718d9dbb619d",
                    "IPY_MODEL_831b1beb46dd4935b5319f8003ac5658",
                    "IPY_MODEL_59ed3061daee43fa890743fbafe6f60a",
                    "IPY_MODEL_e4e58481280249d994ca5b7f7e98a7ca"
                ],
                "layout": "IPY_MODEL_f1b48597c83a48e59c9cfedc7868aea6"
            }
        },
        "4f175c2dc7f545038891a13d985c47f8": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "9d27492c35db44e49f1fe1c6d4602f7b": {
            "model_name": "ButtonStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {}
        },
        "b4c2ed3628d348228efe128a32f54314": {
            "model_name": "ButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "-4",
                "layout": "IPY_MODEL_4f175c2dc7f545038891a13d985c47f8",
                "style": "IPY_MODEL_9d27492c35db44e49f1fe1c6d4602f7b"
            }
        },
        "4e8a7e9399f746dab964b3d726d1f596": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "fa20d3d4d5c6420282c294472b1eea26": {
            "model_name": "ButtonStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {}
        },
        "ab64a6f6a41e43c99af46b4f81de67fa": {
            "model_name": "ButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "-3",
                "layout": "IPY_MODEL_4e8a7e9399f746dab964b3d726d1f596",
                "style": "IPY_MODEL_fa20d3d4d5c6420282c294472b1eea26"
            }
        },
        "c84eaf4ffb94460dadfc2cf4207f576d": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "7373151701064b339c8550e2870bb893": {
            "model_name": "ButtonStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {}
        },
        "96e97ac25c32487da625fbe4fbd07fed": {
            "model_name": "ButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "-2",
                "layout": "IPY_MODEL_c84eaf4ffb94460dadfc2cf4207f576d",
                "style": "IPY_MODEL_7373151701064b339c8550e2870bb893"
            }
        },
        "55ef4c5579904fb8b746fe266a8ef793": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "42a7ca0635f44f9cb171ff1344ffd206": {
            "model_name": "ButtonStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {}
        },
        "cc4fe1afa3b14facbbdf3390640441a2": {
            "model_name": "ButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "-1",
                "layout": "IPY_MODEL_55ef4c5579904fb8b746fe266a8ef793",
                "style": "IPY_MODEL_42a7ca0635f44f9cb171ff1344ffd206"
            }
        },
        "f44c0ddcc9a94b42a8bd9bceba9abef1": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "a5ff8a06e84145039b45b695290ed878": {
            "model_name": "ButtonStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {}
        },
        "abbc6697c4ab4701bf222deae9d14179": {
            "model_name": "ButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "0",
                "layout": "IPY_MODEL_f44c0ddcc9a94b42a8bd9bceba9abef1",
                "style": "IPY_MODEL_a5ff8a06e84145039b45b695290ed878"
            }
        },
        "1b3f342f9c52493ea52a8352dd8dcfab": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "b5ed3dd6b66e4257a3218b846ad37ba6": {
            "model_name": "ButtonStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {}
        },
        "2edc3b28def742c69a894d3f8d285e3b": {
            "model_name": "ButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "1",
                "layout": "IPY_MODEL_1b3f342f9c52493ea52a8352dd8dcfab",
                "style": "IPY_MODEL_b5ed3dd6b66e4257a3218b846ad37ba6"
            }
        },
        "9a816052584446f2afb76e85a043ee87": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "21b0a3eb1ff84175859ccb5623539471": {
            "model_name": "ButtonStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {}
        },
        "83d6bc93bec2499595fbf7e7a5c37606": {
            "model_name": "ButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "2",
                "layout": "IPY_MODEL_9a816052584446f2afb76e85a043ee87",
                "style": "IPY_MODEL_21b0a3eb1ff84175859ccb5623539471"
            }
        },
        "8c3177d56daa4b01832c2e9b8bbd19a4": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "d29442bfdf554dc9bd42e4de7ece52e1": {
            "model_name": "ButtonStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {}
        },
        "fa719cb6515b4e7db0995a57047451de": {
            "model_name": "ButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "3",
                "layout": "IPY_MODEL_8c3177d56daa4b01832c2e9b8bbd19a4",
                "style": "IPY_MODEL_d29442bfdf554dc9bd42e4de7ece52e1"
            }
        },
        "4f8e2fe31d52490da268a37ad8e91028": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "ad6f053d8e8e43dda81fc0cd83f6085f": {
            "model_name": "ButtonStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {}
        },
        "5f944659ec9c423d874b2045a02f8936": {
            "model_name": "ButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "4",
                "layout": "IPY_MODEL_4f8e2fe31d52490da268a37ad8e91028",
                "style": "IPY_MODEL_ad6f053d8e8e43dda81fc0cd83f6085f"
            }
        },
        "3309331c21324fb2a16a6dd22453b371": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "1095d77a66b547b0ae9378f8396392c2": {
            "model_name": "HBoxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "children": [
                    "IPY_MODEL_b4c2ed3628d348228efe128a32f54314",
                    "IPY_MODEL_ab64a6f6a41e43c99af46b4f81de67fa",
                    "IPY_MODEL_96e97ac25c32487da625fbe4fbd07fed",
                    "IPY_MODEL_cc4fe1afa3b14facbbdf3390640441a2"
                ],
                "layout": "IPY_MODEL_3309331c21324fb2a16a6dd22453b371"
            }
        },
        "d1691bf4bb0d4392bea3337beba43cc6": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "6d67800aeeec40dabddbb952ee15fab3": {
            "model_name": "HBoxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "children": [
                    "IPY_MODEL_abbc6697c4ab4701bf222deae9d14179",
                    "IPY_MODEL_2edc3b28def742c69a894d3f8d285e3b",
                    "IPY_MODEL_83d6bc93bec2499595fbf7e7a5c37606",
                    "IPY_MODEL_fa719cb6515b4e7db0995a57047451de",
                    "IPY_MODEL_5f944659ec9c423d874b2045a02f8936"
                ],
                "layout": "IPY_MODEL_d1691bf4bb0d4392bea3337beba43cc6"
            }
        },
        "104dded4d13d40b5ae17b4ab919f054d": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "94c2557e86c848f4b21cf3a57e63c2f9": {
            "model_name": "ButtonStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {}
        },
        "ff4ef78e50fe4dc599068d95f8275c98": {
            "model_name": "ButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "-4",
                "layout": "IPY_MODEL_104dded4d13d40b5ae17b4ab919f054d",
                "style": "IPY_MODEL_94c2557e86c848f4b21cf3a57e63c2f9"
            }
        },
        "16c93cbb50cb4b89ad52b73cc6868de5": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "951ab886205c4e2db857e6d2d3809b15": {
            "model_name": "ButtonStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {}
        },
        "439707a4739a4494b94ddb9a1964eaf8": {
            "model_name": "ButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "-3",
                "layout": "IPY_MODEL_16c93cbb50cb4b89ad52b73cc6868de5",
                "style": "IPY_MODEL_951ab886205c4e2db857e6d2d3809b15"
            }
        },
        "6ef49ed822624c4bae3caad75ccc61de": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "a5e9aab5e69d46a6be3d45801cc7afff": {
            "model_name": "ButtonStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {}
        },
        "f839d55be8ba42df9c4de3c97ae4f9d0": {
            "model_name": "ButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "-2",
                "layout": "IPY_MODEL_6ef49ed822624c4bae3caad75ccc61de",
                "style": "IPY_MODEL_a5e9aab5e69d46a6be3d45801cc7afff"
            }
        },
        "801abb70d1c1425daefc628aca70cd0e": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "467ac74dd73a40beac507a9c26635a38": {
            "model_name": "ButtonStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {}
        },
        "2f7c9aba417b48eda9e49bdc24aace0e": {
            "model_name": "ButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "-1",
                "layout": "IPY_MODEL_801abb70d1c1425daefc628aca70cd0e",
                "style": "IPY_MODEL_467ac74dd73a40beac507a9c26635a38"
            }
        },
        "aa97adfd3dd14a77a91ac14c359547f4": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "c895e53269b44ab492515ca2f7458a72": {
            "model_name": "ButtonStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {}
        },
        "535c3746a06a4f6a8bf5b4c4868dc5de": {
            "model_name": "ButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "0",
                "layout": "IPY_MODEL_aa97adfd3dd14a77a91ac14c359547f4",
                "style": "IPY_MODEL_c895e53269b44ab492515ca2f7458a72"
            }
        },
        "1d4faf37e02f4e36b3c7bfe94232c98d": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "721f7a93e6af4e0497c282744d75f1a6": {
            "model_name": "ButtonStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {}
        },
        "5100ec9962bd4449a96c57e349abb48a": {
            "model_name": "ButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "1",
                "layout": "IPY_MODEL_1d4faf37e02f4e36b3c7bfe94232c98d",
                "style": "IPY_MODEL_721f7a93e6af4e0497c282744d75f1a6"
            }
        },
        "a49db2d44a3e494c86cddb590964166d": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "33c890e9ad9f458d9f8f02742f3c23b8": {
            "model_name": "ButtonStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {}
        },
        "0ab56ca4511946b194dc0cf759ecd79c": {
            "model_name": "ButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "2",
                "layout": "IPY_MODEL_a49db2d44a3e494c86cddb590964166d",
                "style": "IPY_MODEL_33c890e9ad9f458d9f8f02742f3c23b8"
            }
        },
        "d22f0e1508664d56aa150854da2c1798": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "f528984aee6046e4bdf8949a7c96b5b6": {
            "model_name": "ButtonStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {}
        },
        "1839acae31c24740a880f892d5f1e8a6": {
            "model_name": "ButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "3",
                "layout": "IPY_MODEL_d22f0e1508664d56aa150854da2c1798",
                "style": "IPY_MODEL_f528984aee6046e4bdf8949a7c96b5b6"
            }
        },
        "d79c196e3c794a28b626d62b467464b7": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "c9bd05ac688d4abe9a0b50ed74955d4f": {
            "model_name": "ButtonStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {}
        },
        "326ea23de4984fc8821532fe698e13f6": {
            "model_name": "ButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "4",
                "layout": "IPY_MODEL_d79c196e3c794a28b626d62b467464b7",
                "style": "IPY_MODEL_c9bd05ac688d4abe9a0b50ed74955d4f"
            }
        },
        "0ecf58261e2940f2a24891be49e268f2": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "1b723b6a345942a0bbb0138dba268489": {
            "model_name": "HBoxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "children": [
                    "IPY_MODEL_ff4ef78e50fe4dc599068d95f8275c98",
                    "IPY_MODEL_439707a4739a4494b94ddb9a1964eaf8",
                    "IPY_MODEL_f839d55be8ba42df9c4de3c97ae4f9d0",
                    "IPY_MODEL_2f7c9aba417b48eda9e49bdc24aace0e"
                ],
                "layout": "IPY_MODEL_0ecf58261e2940f2a24891be49e268f2"
            }
        },
        "0e1785a773f84509a7d19de147b9fb62": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "0e8df300794c4dbd864d15fb559708c2": {
            "model_name": "HBoxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "children": [
                    "IPY_MODEL_535c3746a06a4f6a8bf5b4c4868dc5de",
                    "IPY_MODEL_5100ec9962bd4449a96c57e349abb48a",
                    "IPY_MODEL_0ab56ca4511946b194dc0cf759ecd79c",
                    "IPY_MODEL_1839acae31c24740a880f892d5f1e8a6",
                    "IPY_MODEL_326ea23de4984fc8821532fe698e13f6"
                ],
                "layout": "IPY_MODEL_0e1785a773f84509a7d19de147b9fb62"
            }
        },
        "850b0e27ba2c42bfb9377af3ee64a380": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "514f37df89254dc68520ca125daf75e6": {
            "model_name": "ButtonStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {}
        },
        "eb569e9fa9fb4d2fb3a687efdbd4fc17": {
            "model_name": "ButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "-4",
                "layout": "IPY_MODEL_850b0e27ba2c42bfb9377af3ee64a380",
                "style": "IPY_MODEL_514f37df89254dc68520ca125daf75e6"
            }
        },
        "81f0caf778c3436ea7d42e9663df78ff": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "a50c1d0a077d4009ac13adaa9ee98fd6": {
            "model_name": "ButtonStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {}
        },
        "fe8286cf15454636896a2edeb1735b25": {
            "model_name": "ButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "-3",
                "layout": "IPY_MODEL_81f0caf778c3436ea7d42e9663df78ff",
                "style": "IPY_MODEL_a50c1d0a077d4009ac13adaa9ee98fd6"
            }
        },
        "d4dcfd9bb2ae4407ad21069f7e662134": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "f24a16af6d1843aba2790f6e1746474c": {
            "model_name": "ButtonStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {}
        },
        "b10d0167d1c74b26843775128fc4b21d": {
            "model_name": "ButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "-2",
                "layout": "IPY_MODEL_d4dcfd9bb2ae4407ad21069f7e662134",
                "style": "IPY_MODEL_f24a16af6d1843aba2790f6e1746474c"
            }
        },
        "277d4b3c07d94e5cae53c7c12e8fdb0d": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "d15b8d53d5314013a47611209dc402c9": {
            "model_name": "ButtonStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {}
        },
        "f7afc31fe4d44578862f901bfcedc3b6": {
            "model_name": "ButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "-1",
                "layout": "IPY_MODEL_277d4b3c07d94e5cae53c7c12e8fdb0d",
                "style": "IPY_MODEL_d15b8d53d5314013a47611209dc402c9"
            }
        },
        "9edc563742dc4a9ab7853a9a90dd86d8": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "c6061310268f4b0a8cea46036de9634c": {
            "model_name": "ButtonStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {}
        },
        "14d16edfe00a48b9b8b9af4f738a94c7": {
            "model_name": "ButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "0",
                "layout": "IPY_MODEL_9edc563742dc4a9ab7853a9a90dd86d8",
                "style": "IPY_MODEL_c6061310268f4b0a8cea46036de9634c"
            }
        },
        "bd59fe9702a74215a090cc9c0ac59b9d": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "79d6707cea5e43e4b5c69e72b2b0510d": {
            "model_name": "ButtonStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {}
        },
        "121e9f4c18834f85b66d73fc1e973f0d": {
            "model_name": "ButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "1",
                "layout": "IPY_MODEL_bd59fe9702a74215a090cc9c0ac59b9d",
                "style": "IPY_MODEL_79d6707cea5e43e4b5c69e72b2b0510d"
            }
        },
        "c8d0a480b9234ff9b94463e0b321a301": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "fd9f334407a34a008076ffdd6c37c7ad": {
            "model_name": "ButtonStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {}
        },
        "bf2b8b48b91448548b1a66fbc8896491": {
            "model_name": "ButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "2",
                "layout": "IPY_MODEL_c8d0a480b9234ff9b94463e0b321a301",
                "style": "IPY_MODEL_fd9f334407a34a008076ffdd6c37c7ad"
            }
        },
        "22dc4c0f9b6741428bb0b1876107e0d1": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "212c5b89fc064c0892b0f043dbf9296e": {
            "model_name": "ButtonStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {}
        },
        "a725b1f2c6e94d45a2736c220059055c": {
            "model_name": "ButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "3",
                "layout": "IPY_MODEL_22dc4c0f9b6741428bb0b1876107e0d1",
                "style": "IPY_MODEL_212c5b89fc064c0892b0f043dbf9296e"
            }
        },
        "46e1875f0c69469ab06d3576a904976a": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "345e071549274f26ab7dde2e6c78422e": {
            "model_name": "ButtonStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {}
        },
        "da4737ce27d74dc59c024786b134df1b": {
            "model_name": "ButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "4",
                "layout": "IPY_MODEL_46e1875f0c69469ab06d3576a904976a",
                "style": "IPY_MODEL_345e071549274f26ab7dde2e6c78422e"
            }
        },
        "cec54e20d2154aa4ab2b74e861f38a5a": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "1b8ce1a9c3b1418ea6e2a4cc79d09feb": {
            "model_name": "HBoxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "children": [
                    "IPY_MODEL_eb569e9fa9fb4d2fb3a687efdbd4fc17",
                    "IPY_MODEL_fe8286cf15454636896a2edeb1735b25",
                    "IPY_MODEL_b10d0167d1c74b26843775128fc4b21d",
                    "IPY_MODEL_f7afc31fe4d44578862f901bfcedc3b6"
                ],
                "layout": "IPY_MODEL_cec54e20d2154aa4ab2b74e861f38a5a"
            }
        },
        "70dac47f1045409ea46746ae869c7ead": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "877453534f33455abf4ce2cfb39325a7": {
            "model_name": "HBoxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "children": [
                    "IPY_MODEL_14d16edfe00a48b9b8b9af4f738a94c7",
                    "IPY_MODEL_121e9f4c18834f85b66d73fc1e973f0d",
                    "IPY_MODEL_bf2b8b48b91448548b1a66fbc8896491",
                    "IPY_MODEL_a725b1f2c6e94d45a2736c220059055c",
                    "IPY_MODEL_da4737ce27d74dc59c024786b134df1b"
                ],
                "layout": "IPY_MODEL_70dac47f1045409ea46746ae869c7ead"
            }
        },
        "010c5ed4ddc447bdbc6cdee19ae96d0a": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "e5efde1c300843a7b5f5d3465473abf0": {
            "model_name": "ButtonStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {}
        },
        "6dead4ce4a9d494d8c6a8756656d3ca6": {
            "model_name": "ButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "-4",
                "layout": "IPY_MODEL_010c5ed4ddc447bdbc6cdee19ae96d0a",
                "style": "IPY_MODEL_e5efde1c300843a7b5f5d3465473abf0"
            }
        },
        "4201301562dc4c95a95034f035ddc17f": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "da68d1bb80b547fdaa155389fe1abec9": {
            "model_name": "ButtonStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {}
        },
        "1d1e5332253b419b9bd4c8002bb5f529": {
            "model_name": "ButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "-3",
                "layout": "IPY_MODEL_4201301562dc4c95a95034f035ddc17f",
                "style": "IPY_MODEL_da68d1bb80b547fdaa155389fe1abec9"
            }
        },
        "e052b4d3e7ed4b13904bd3121f2a7aad": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "722b10c989ca4c50bf7b617dc16b90a5": {
            "model_name": "ButtonStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {}
        },
        "627f71b241fa4e19a2afcba97fd6077b": {
            "model_name": "ButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "-2",
                "layout": "IPY_MODEL_e052b4d3e7ed4b13904bd3121f2a7aad",
                "style": "IPY_MODEL_722b10c989ca4c50bf7b617dc16b90a5"
            }
        },
        "0b237850f5914ba49bdb9a26fdf6658c": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "51a982699e8b4a90bcf48d8686ce6652": {
            "model_name": "ButtonStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {}
        },
        "347567594cd34f46aec2a7222f9e48e5": {
            "model_name": "ButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "-1",
                "layout": "IPY_MODEL_0b237850f5914ba49bdb9a26fdf6658c",
                "style": "IPY_MODEL_51a982699e8b4a90bcf48d8686ce6652"
            }
        },
        "f2c63b03043e43729a9721e8dc3ec08a": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "df6aeadf826d4782b94d9cf4eada0a77": {
            "model_name": "ButtonStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {}
        },
        "f8a08d142fcc41d18a3ae682445e0e2f": {
            "model_name": "ButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "0",
                "layout": "IPY_MODEL_f2c63b03043e43729a9721e8dc3ec08a",
                "style": "IPY_MODEL_df6aeadf826d4782b94d9cf4eada0a77"
            }
        },
        "f61ccb3b31074c7a901b0ca8e7acc8ba": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "73aeaca4cb95468182cc301bbdd2f9c9": {
            "model_name": "ButtonStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {}
        },
        "4d68d93a3327481daf36017bb7d9b127": {
            "model_name": "ButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "1",
                "layout": "IPY_MODEL_f61ccb3b31074c7a901b0ca8e7acc8ba",
                "style": "IPY_MODEL_73aeaca4cb95468182cc301bbdd2f9c9"
            }
        },
        "ef65c5f2dbd641f581acca14d7d4282b": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "2863d0e15a5c4a62a70aa57f94dd00ac": {
            "model_name": "ButtonStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {}
        },
        "9ab9289b9a744ebdbf54d77b140af044": {
            "model_name": "ButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "2",
                "layout": "IPY_MODEL_ef65c5f2dbd641f581acca14d7d4282b",
                "style": "IPY_MODEL_2863d0e15a5c4a62a70aa57f94dd00ac"
            }
        },
        "23ee1cec3617491d96672aa466a388a3": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "3eafcde651a44e2580b454568337de97": {
            "model_name": "ButtonStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {}
        },
        "8100361fdc004fcab70299e7995affba": {
            "model_name": "ButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "3",
                "layout": "IPY_MODEL_23ee1cec3617491d96672aa466a388a3",
                "style": "IPY_MODEL_3eafcde651a44e2580b454568337de97"
            }
        },
        "90d1881b626643f3a203067416bd53e9": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "9cbf7141f451441884d2246990e95967": {
            "model_name": "ButtonStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {}
        },
        "dbbe5a4bc47942f6b7d14c7eb724bbf4": {
            "model_name": "ButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "4",
                "layout": "IPY_MODEL_90d1881b626643f3a203067416bd53e9",
                "style": "IPY_MODEL_9cbf7141f451441884d2246990e95967"
            }
        },
        "6b1283beaee44d248888c10acf6b444a": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "22dc6830fc8345a28f24bb1428295631": {
            "model_name": "HBoxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "children": [
                    "IPY_MODEL_6dead4ce4a9d494d8c6a8756656d3ca6",
                    "IPY_MODEL_1d1e5332253b419b9bd4c8002bb5f529",
                    "IPY_MODEL_627f71b241fa4e19a2afcba97fd6077b",
                    "IPY_MODEL_347567594cd34f46aec2a7222f9e48e5"
                ],
                "layout": "IPY_MODEL_6b1283beaee44d248888c10acf6b444a"
            }
        },
        "e9a9a494df8c4f5faeefe52a61230b4a": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "6b64ec964a324f84abe35eae204504a4": {
            "model_name": "HBoxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "children": [
                    "IPY_MODEL_f8a08d142fcc41d18a3ae682445e0e2f",
                    "IPY_MODEL_4d68d93a3327481daf36017bb7d9b127",
                    "IPY_MODEL_9ab9289b9a744ebdbf54d77b140af044",
                    "IPY_MODEL_8100361fdc004fcab70299e7995affba",
                    "IPY_MODEL_dbbe5a4bc47942f6b7d14c7eb724bbf4"
                ],
                "layout": "IPY_MODEL_e9a9a494df8c4f5faeefe52a61230b4a"
            }
        },
        "1cda68750e5e45d99a1949b63d863b88": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "73ef44da6a404d13ac0dbd52cc9df0c2": {
            "model_name": "ButtonStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {}
        },
        "e79d130825dd495ea4136fca440be0ac": {
            "model_name": "ButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "-4",
                "layout": "IPY_MODEL_1cda68750e5e45d99a1949b63d863b88",
                "style": "IPY_MODEL_73ef44da6a404d13ac0dbd52cc9df0c2"
            }
        },
        "de85766abcec4e10bd68dbf4cb6e1047": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "a14936b96e854ba183d4a0af9c79290a": {
            "model_name": "ButtonStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {}
        },
        "b9cee45708ef400a9531baae78339442": {
            "model_name": "ButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "-3",
                "layout": "IPY_MODEL_de85766abcec4e10bd68dbf4cb6e1047",
                "style": "IPY_MODEL_a14936b96e854ba183d4a0af9c79290a"
            }
        },
        "a06c1c4cdd394235a658738aaf102fe4": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "e2a97739e1a74abfb219cef8e446f4f1": {
            "model_name": "ButtonStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {}
        },
        "25a03f40a9984314806bdb7147dcca27": {
            "model_name": "ButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "-2",
                "layout": "IPY_MODEL_a06c1c4cdd394235a658738aaf102fe4",
                "style": "IPY_MODEL_e2a97739e1a74abfb219cef8e446f4f1"
            }
        },
        "d88c2c0355b0476f89c4bc565431b6a0": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "842a3045e36842a08f57397a126dba9a": {
            "model_name": "ButtonStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {}
        },
        "de31e0b27ee54932a47bfdda1e2be26d": {
            "model_name": "ButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "-1",
                "layout": "IPY_MODEL_d88c2c0355b0476f89c4bc565431b6a0",
                "style": "IPY_MODEL_842a3045e36842a08f57397a126dba9a"
            }
        },
        "3de85b6239e1418c8a27651e1c309e79": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "0a78164d18b34bffb66f35bbd9542b34": {
            "model_name": "ButtonStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {}
        },
        "69ca738d35274d149e9ee7b17c2a0856": {
            "model_name": "ButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "0",
                "layout": "IPY_MODEL_3de85b6239e1418c8a27651e1c309e79",
                "style": "IPY_MODEL_0a78164d18b34bffb66f35bbd9542b34"
            }
        },
        "84d46c4b71044a459284a216f570d1c0": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "b6f37a5e7fad426480da1ba7d5cdf08d": {
            "model_name": "ButtonStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {}
        },
        "c1d15311be0148e196c635799310248a": {
            "model_name": "ButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "1",
                "layout": "IPY_MODEL_84d46c4b71044a459284a216f570d1c0",
                "style": "IPY_MODEL_b6f37a5e7fad426480da1ba7d5cdf08d"
            }
        },
        "e0f0cde9e6c643539f506bb43c617e0b": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "e3c2638c25014f97a4dcfb706580f6d7": {
            "model_name": "ButtonStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {}
        },
        "5d63b0fe574244f48e9c56542f724565": {
            "model_name": "ButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "2",
                "layout": "IPY_MODEL_e0f0cde9e6c643539f506bb43c617e0b",
                "style": "IPY_MODEL_e3c2638c25014f97a4dcfb706580f6d7"
            }
        },
        "f210c1b4e9854b348aaf4e6b76d05ae0": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "dc41a02d1a4c4da6b82ff38c5733cfc4": {
            "model_name": "ButtonStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {}
        },
        "da54cc1738f34a93b1d6384a742f1e2a": {
            "model_name": "ButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "3",
                "layout": "IPY_MODEL_f210c1b4e9854b348aaf4e6b76d05ae0",
                "style": "IPY_MODEL_dc41a02d1a4c4da6b82ff38c5733cfc4"
            }
        },
        "a7ad65a7fc98495c8085cde2f59efbb3": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "605109c919a34091bf9a85154ccc89eb": {
            "model_name": "ButtonStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {}
        },
        "aa7fbde580a94dc6a6a74d686529573f": {
            "model_name": "ButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "4",
                "layout": "IPY_MODEL_a7ad65a7fc98495c8085cde2f59efbb3",
                "style": "IPY_MODEL_605109c919a34091bf9a85154ccc89eb"
            }
        },
        "74ffca119f654d0596d7a6177c4dd728": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "2ec44c805b0f402c8405733b7fb697f0": {
            "model_name": "HBoxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "children": [
                    "IPY_MODEL_e79d130825dd495ea4136fca440be0ac",
                    "IPY_MODEL_b9cee45708ef400a9531baae78339442",
                    "IPY_MODEL_25a03f40a9984314806bdb7147dcca27",
                    "IPY_MODEL_de31e0b27ee54932a47bfdda1e2be26d"
                ],
                "layout": "IPY_MODEL_74ffca119f654d0596d7a6177c4dd728"
            }
        },
        "5771574260814b0486962b6e424316b8": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "78e83c1845dc43328d9012042389ddd0": {
            "model_name": "HBoxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "children": [
                    "IPY_MODEL_69ca738d35274d149e9ee7b17c2a0856",
                    "IPY_MODEL_c1d15311be0148e196c635799310248a",
                    "IPY_MODEL_5d63b0fe574244f48e9c56542f724565",
                    "IPY_MODEL_da54cc1738f34a93b1d6384a742f1e2a",
                    "IPY_MODEL_aa7fbde580a94dc6a6a74d686529573f"
                ],
                "layout": "IPY_MODEL_5771574260814b0486962b6e424316b8"
            }
        },
        "64634abb35ca44508488f80d63dfb22c": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "f90605c7fffe40fbb1c8f4f2fa51b93f": {
            "model_name": "ButtonStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {}
        },
        "acb0dd93b438458e9035ea0468014b35": {
            "model_name": "ButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "-4",
                "layout": "IPY_MODEL_64634abb35ca44508488f80d63dfb22c",
                "style": "IPY_MODEL_f90605c7fffe40fbb1c8f4f2fa51b93f"
            }
        },
        "27f30acce44548eca3243d5659660c8e": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "e2291c0cf8984070908216a72886625d": {
            "model_name": "ButtonStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {}
        },
        "883b6de5c2874793b48a3847ed64662d": {
            "model_name": "ButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "-3",
                "layout": "IPY_MODEL_27f30acce44548eca3243d5659660c8e",
                "style": "IPY_MODEL_e2291c0cf8984070908216a72886625d"
            }
        },
        "e06c3d5410864ddda3e629421de2f25a": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "a74b921f8957405db3dd9f08cf0773b6": {
            "model_name": "ButtonStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {}
        },
        "7a65ee5dc895453cb703cf89c6befc77": {
            "model_name": "ButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "-2",
                "layout": "IPY_MODEL_e06c3d5410864ddda3e629421de2f25a",
                "style": "IPY_MODEL_a74b921f8957405db3dd9f08cf0773b6"
            }
        },
        "dfd4e13333c54601b9a7309a21d67e65": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "dd33a999414b465ebb81700a3d9b5521": {
            "model_name": "ButtonStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {}
        },
        "418d141805234ccf8d7fa72d9d2fbf04": {
            "model_name": "ButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "-1",
                "layout": "IPY_MODEL_dfd4e13333c54601b9a7309a21d67e65",
                "style": "IPY_MODEL_dd33a999414b465ebb81700a3d9b5521"
            }
        },
        "34db3098da2046b9a8ee9da9419b9c90": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "0599f950d01a4c0eb633ee873776537b": {
            "model_name": "ButtonStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {}
        },
        "20d48af8c1e84a4b803213daddd2cbc2": {
            "model_name": "ButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "0",
                "layout": "IPY_MODEL_34db3098da2046b9a8ee9da9419b9c90",
                "style": "IPY_MODEL_0599f950d01a4c0eb633ee873776537b"
            }
        },
        "e084bf83228a498bba6e269d479648cc": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "58234e82552b41478931d1535910ef7f": {
            "model_name": "ButtonStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {}
        },
        "8c06c2d5a4a048c5bc1dce77a9c45373": {
            "model_name": "ButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "1",
                "layout": "IPY_MODEL_e084bf83228a498bba6e269d479648cc",
                "style": "IPY_MODEL_58234e82552b41478931d1535910ef7f"
            }
        },
        "d423482ec0c3430f841f21a1ce5a5f8d": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "3cb18920d1794d9c856f6972a58727f6": {
            "model_name": "ButtonStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {}
        },
        "b0b342f42fcc4bc59e95040ee99ad8d9": {
            "model_name": "ButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "2",
                "layout": "IPY_MODEL_d423482ec0c3430f841f21a1ce5a5f8d",
                "style": "IPY_MODEL_3cb18920d1794d9c856f6972a58727f6"
            }
        },
        "181e74c7dba744a6830527011a7a1090": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "fa793cf0f10441dbb746996ff7c6d2fa": {
            "model_name": "ButtonStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {}
        },
        "3799ed11a2364b56bae5707390610cdc": {
            "model_name": "ButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "3",
                "layout": "IPY_MODEL_181e74c7dba744a6830527011a7a1090",
                "style": "IPY_MODEL_fa793cf0f10441dbb746996ff7c6d2fa"
            }
        },
        "c8ae9f103a8848d2a26701ea903a3bb9": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "2e87b2ca8aca43b89c3601a9652d40df": {
            "model_name": "ButtonStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {}
        },
        "2b746a90556a41efaa943a5e70d053bb": {
            "model_name": "ButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "4",
                "layout": "IPY_MODEL_c8ae9f103a8848d2a26701ea903a3bb9",
                "style": "IPY_MODEL_2e87b2ca8aca43b89c3601a9652d40df"
            }
        },
        "bf89b68b22a24070bb647d54a9b7b012": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "72144c8f600446a8a4ee087fc6e15d46": {
            "model_name": "HBoxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "children": [
                    "IPY_MODEL_acb0dd93b438458e9035ea0468014b35",
                    "IPY_MODEL_883b6de5c2874793b48a3847ed64662d",
                    "IPY_MODEL_7a65ee5dc895453cb703cf89c6befc77",
                    "IPY_MODEL_418d141805234ccf8d7fa72d9d2fbf04",
                    "IPY_MODEL_20d48af8c1e84a4b803213daddd2cbc2"
                ],
                "layout": "IPY_MODEL_bf89b68b22a24070bb647d54a9b7b012"
            }
        },
        "fc417af2d9b6426f8683a5ef4cc1305e": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "024eb8862ddc4b2894e227568f14016d": {
            "model_name": "HBoxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "children": [
                    "IPY_MODEL_20d48af8c1e84a4b803213daddd2cbc2",
                    "IPY_MODEL_8c06c2d5a4a048c5bc1dce77a9c45373",
                    "IPY_MODEL_b0b342f42fcc4bc59e95040ee99ad8d9",
                    "IPY_MODEL_3799ed11a2364b56bae5707390610cdc",
                    "IPY_MODEL_2b746a90556a41efaa943a5e70d053bb"
                ],
                "layout": "IPY_MODEL_fc417af2d9b6426f8683a5ef4cc1305e"
            }
        },
        "b5c53f03c4f04993b84911accca94e60": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "18a4332d26e64471b089e10056930ffd": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "11106b717ffa43d59530774896da48c6": {
            "model_name": "ToggleButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "Grid",
                "icon": "check",
                "layout": "IPY_MODEL_b5c53f03c4f04993b84911accca94e60",
                "style": "IPY_MODEL_18a4332d26e64471b089e10056930ffd"
            }
        },
        "ed1565fadb1946a8be7154265ee66778": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "0ddb52944c014d70b241e07f5d115356": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "1de5fd00681e4fb3b332038f012deb50": {
            "model_name": "ToggleButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "Grid",
                "icon": "check",
                "layout": "IPY_MODEL_ed1565fadb1946a8be7154265ee66778",
                "style": "IPY_MODEL_0ddb52944c014d70b241e07f5d115356"
            }
        },
        "82fbc566c0e6458fba00525ce152919e": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "4992e16f5e414be78aba1cee7e15694c": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "2db0a12d058140868b864b9b53713970": {
            "model_name": "ToggleButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "Grid",
                "icon": "check",
                "layout": "IPY_MODEL_82fbc566c0e6458fba00525ce152919e",
                "style": "IPY_MODEL_4992e16f5e414be78aba1cee7e15694c",
                "value": true
            }
        },
        "2c4eda35b48f49ea8b91b8a35ecedd2b": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "ac75a106ec134ca585313d63c1e75881": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "b51125542eb44a3fa42d043f575c5bae": {
            "model_name": "ToggleButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "Grid",
                "icon": "check",
                "layout": "IPY_MODEL_2c4eda35b48f49ea8b91b8a35ecedd2b",
                "style": "IPY_MODEL_ac75a106ec134ca585313d63c1e75881"
            }
        },
        "212d1e463a584313bb7e5e378e23f6d4": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "e5166f2cbb744c1c8fbf8ddc1b23d805": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "057c3d90f2744a4bb4859040bc12b6a6": {
            "model_name": "ToggleButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "Grid",
                "icon": "check",
                "layout": "IPY_MODEL_212d1e463a584313bb7e5e378e23f6d4",
                "style": "IPY_MODEL_e5166f2cbb744c1c8fbf8ddc1b23d805"
            }
        },
        "f761a35eeb3440ee95d6b8da2b2e4564": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "ab81fd357c7346a2955fceb5317cc696": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "f17768b6507c418483d6af1c9853c218": {
            "model_name": "ToggleButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "Grid",
                "icon": "check",
                "layout": "IPY_MODEL_f761a35eeb3440ee95d6b8da2b2e4564",
                "style": "IPY_MODEL_ab81fd357c7346a2955fceb5317cc696"
            }
        },
        "136a3a0e994e47bf9a210b43a1934be5": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "67471f4aeb7346a4b043f4312949e8bd": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "b60d4a38381748a3a0ec030ee9093fdb": {
            "model_name": "ToggleButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "Grid",
                "icon": "check",
                "layout": "IPY_MODEL_136a3a0e994e47bf9a210b43a1934be5",
                "style": "IPY_MODEL_67471f4aeb7346a4b043f4312949e8bd"
            }
        },
        "82f1735f53ad445caf854076733a650f": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "f11fc10da52646d4a1cd1b39e121b2d3": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "055f502083de458ea42ec83bb90eb3fd": {
            "model_name": "ToggleButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "Grid",
                "icon": "check",
                "layout": "IPY_MODEL_82f1735f53ad445caf854076733a650f",
                "style": "IPY_MODEL_f11fc10da52646d4a1cd1b39e121b2d3"
            }
        },
        "1894d9602ff24cd5816063300a69f310": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "8b042b4dcfef4be7a3057d9502ba2e02": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "61b0cdfa707e4c8caec50f634aa6e051": {
            "model_name": "ToggleButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "Grid",
                "icon": "check",
                "layout": "IPY_MODEL_1894d9602ff24cd5816063300a69f310",
                "style": "IPY_MODEL_8b042b4dcfef4be7a3057d9502ba2e02"
            }
        },
        "6f47c73f3c1f449c81ac13aa23d1eada": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "23437e784b784e949233b004f2d769c0": {
            "model_name": "HBoxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "children": [
                    "IPY_MODEL_1de5fd00681e4fb3b332038f012deb50",
                    "IPY_MODEL_2db0a12d058140868b864b9b53713970",
                    "IPY_MODEL_b51125542eb44a3fa42d043f575c5bae",
                    "IPY_MODEL_057c3d90f2744a4bb4859040bc12b6a6",
                    "IPY_MODEL_f17768b6507c418483d6af1c9853c218",
                    "IPY_MODEL_b60d4a38381748a3a0ec030ee9093fdb",
                    "IPY_MODEL_055f502083de458ea42ec83bb90eb3fd",
                    "IPY_MODEL_61b0cdfa707e4c8caec50f634aa6e051"
                ],
                "layout": "IPY_MODEL_6f47c73f3c1f449c81ac13aa23d1eada"
            }
        },
        "959abb6b1b65458fb437743f9aa29570": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "f7a9e297af2b42d6afc926058ccfd7f8": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "18c6b2fc61e84c089224cbced123dc40": {
            "model_name": "ToggleButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "-4",
                "icon": "check",
                "layout": "IPY_MODEL_959abb6b1b65458fb437743f9aa29570",
                "style": "IPY_MODEL_f7a9e297af2b42d6afc926058ccfd7f8",
                "value": true
            }
        },
        "4f536de779714a338be6205cf48636a6": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "0df763b9b9de4056be5dbd7197a64155": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "bf978db3ac4f4575b6122cd42c3016e2": {
            "model_name": "ToggleButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "-3",
                "icon": "check",
                "layout": "IPY_MODEL_4f536de779714a338be6205cf48636a6",
                "style": "IPY_MODEL_0df763b9b9de4056be5dbd7197a64155",
                "value": true
            }
        },
        "40900774761442d9b193d3a8d7f9c631": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "fc9aa60ae41f48c7a96105cbd402fc90": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "65376abe3ff04bbeb59ae84b71f2b003": {
            "model_name": "ToggleButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "-2",
                "icon": "check",
                "layout": "IPY_MODEL_40900774761442d9b193d3a8d7f9c631",
                "style": "IPY_MODEL_fc9aa60ae41f48c7a96105cbd402fc90",
                "value": true
            }
        },
        "ac69d150ae064ec89cc01cdc293d6ddc": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "2220f615603349cd96a65b45c4368325": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "8b8bb9b342914304a0c03d6113dddbec": {
            "model_name": "ToggleButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "-1",
                "icon": "check",
                "layout": "IPY_MODEL_ac69d150ae064ec89cc01cdc293d6ddc",
                "style": "IPY_MODEL_2220f615603349cd96a65b45c4368325",
                "value": true
            }
        },
        "58f5684d56174bdea64afbb0ec98e94d": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "1372cd829a484c8f9232b552252d18b3": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "5750d8bc20074e41bff95932727b791b": {
            "model_name": "ToggleButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "0",
                "icon": "check",
                "layout": "IPY_MODEL_58f5684d56174bdea64afbb0ec98e94d",
                "style": "IPY_MODEL_1372cd829a484c8f9232b552252d18b3",
                "value": true
            }
        },
        "91bdd12677f3492f96abd5d1f4fe85fd": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "0294c9eb984c4dccbe26a1bd907ff4f1": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "35b8d4d8fe334f86ba7918328a6dedba": {
            "model_name": "ToggleButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "1",
                "icon": "check",
                "layout": "IPY_MODEL_91bdd12677f3492f96abd5d1f4fe85fd",
                "style": "IPY_MODEL_0294c9eb984c4dccbe26a1bd907ff4f1",
                "value": true
            }
        },
        "09d4f72100d544ca9cce58d795a67cab": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "2fc1c011928142418b6b9aa868a20dda": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "5ed6dc3c31cf4ec48edef46b4b53a2a4": {
            "model_name": "ToggleButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "2",
                "icon": "check",
                "layout": "IPY_MODEL_09d4f72100d544ca9cce58d795a67cab",
                "style": "IPY_MODEL_2fc1c011928142418b6b9aa868a20dda",
                "value": true
            }
        },
        "c91036c978324ecbb615db0787c7d8bd": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "242770bc63d9477686301df3de485557": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "b7e9994224c9410ba6f7a714cc666c8d": {
            "model_name": "ToggleButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "3",
                "icon": "check",
                "layout": "IPY_MODEL_c91036c978324ecbb615db0787c7d8bd",
                "style": "IPY_MODEL_242770bc63d9477686301df3de485557",
                "value": true
            }
        },
        "613b5284e7b94a26885ae8c4238fd2b1": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "07798b12086647aab2829cb9b6fdefc0": {
            "model_name": "HBoxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "children": [
                    "IPY_MODEL_18c6b2fc61e84c089224cbced123dc40",
                    "IPY_MODEL_bf978db3ac4f4575b6122cd42c3016e2",
                    "IPY_MODEL_65376abe3ff04bbeb59ae84b71f2b003",
                    "IPY_MODEL_8b8bb9b342914304a0c03d6113dddbec",
                    "IPY_MODEL_5750d8bc20074e41bff95932727b791b",
                    "IPY_MODEL_35b8d4d8fe334f86ba7918328a6dedba",
                    "IPY_MODEL_5ed6dc3c31cf4ec48edef46b4b53a2a4",
                    "IPY_MODEL_b7e9994224c9410ba6f7a714cc666c8d"
                ],
                "layout": "IPY_MODEL_613b5284e7b94a26885ae8c4238fd2b1"
            }
        },
        "6d1489c55a97491a827c54e10457a670": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "b0db7bc365354002a36ff68af44d4b1a": {
            "model_name": "VBoxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_dom_classes": [
                    "widget-interact"
                ],
                "children": [
                    "IPY_MODEL_e03b1c697ba64b3588dd212634c528c8"
                ],
                "layout": "IPY_MODEL_6d1489c55a97491a827c54e10457a670"
            }
        },
        "a664e2fe7924449893a0ab41e321b42a": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "e03b1c697ba64b3588dd212634c528c8": {
            "model_name": "OutputModel",
            "model_module": "@jupyter-widgets/output",
            "model_module_version": "1.0.0",
            "state": {
                "layout": "IPY_MODEL_a664e2fe7924449893a0ab41e321b42a",
                "outputs": [
                    {
                        "output_type": "display_data",
                        "data": {
                            "text/plain": "<Figure size 720x720 with 1 Axes>",
                            "image/png": "\n"
                        },
                        "metadata": {
                            "needs_background": "light"
                        }
                    }
                ]
            }
        },
        "9cbafa578d604e65ba4a12c9e8237c30": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "1eb0ff90a228481ca17b9e387b0dace3": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "97020118f73e40d188d878645720f7b2": {
            "model_name": "ToggleButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "-4",
                "icon": "check",
                "layout": "IPY_MODEL_9cbafa578d604e65ba4a12c9e8237c30",
                "style": "IPY_MODEL_1eb0ff90a228481ca17b9e387b0dace3",
                "value": true
            }
        },
        "d6e417372d5741148c529eda8f1142cb": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "ef7b873f90fe4ee78462c82dd1d465e9": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "caaabf05ebfe4f7eb8447c0d01f9d3bf": {
            "model_name": "ToggleButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "-3",
                "icon": "check",
                "layout": "IPY_MODEL_d6e417372d5741148c529eda8f1142cb",
                "style": "IPY_MODEL_ef7b873f90fe4ee78462c82dd1d465e9",
                "value": true
            }
        },
        "a02fd846e5af4169b186fa2b471d8e26": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "7b88097a8c4d43abaf895d290d693a43": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "6f43ecf80e954e098031ea34bd29dbc2": {
            "model_name": "ToggleButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "-2",
                "icon": "check",
                "layout": "IPY_MODEL_a02fd846e5af4169b186fa2b471d8e26",
                "style": "IPY_MODEL_7b88097a8c4d43abaf895d290d693a43",
                "value": true
            }
        },
        "9b6e751f3ba44014a375b4a9296bcb51": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "b0f73f1f2fff40e9bb3af7f4eaf76828": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "91b41c3c8c2347e7814a4afc787e4da7": {
            "model_name": "ToggleButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "-1",
                "icon": "check",
                "layout": "IPY_MODEL_9b6e751f3ba44014a375b4a9296bcb51",
                "style": "IPY_MODEL_b0f73f1f2fff40e9bb3af7f4eaf76828",
                "value": true
            }
        },
        "2849fe72fb4043cc9e5667ad9baa048d": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "be7357aa359e48799465e72b29313f8d": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "aa3187e62b0e4d58a948e5143f973de5": {
            "model_name": "ToggleButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "0",
                "icon": "check",
                "layout": "IPY_MODEL_2849fe72fb4043cc9e5667ad9baa048d",
                "style": "IPY_MODEL_be7357aa359e48799465e72b29313f8d",
                "value": true
            }
        },
        "d61dd1d1fadd44eebd15f7f0ecebbb72": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "3b900dc7631a4012a44a094eafd7814c": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "be4835283a6744d687aa53e54003c96b": {
            "model_name": "ToggleButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "1",
                "icon": "check",
                "layout": "IPY_MODEL_d61dd1d1fadd44eebd15f7f0ecebbb72",
                "style": "IPY_MODEL_3b900dc7631a4012a44a094eafd7814c",
                "value": true
            }
        },
        "f789e5d2731847738ee6388c122571f2": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "e074360f287b43fab8eaf55251402b85": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "00fe0961f14a4352839a311a5b694099": {
            "model_name": "ToggleButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "2",
                "icon": "check",
                "layout": "IPY_MODEL_f789e5d2731847738ee6388c122571f2",
                "style": "IPY_MODEL_e074360f287b43fab8eaf55251402b85",
                "value": true
            }
        },
        "1f3dd6e7116c4176b81577dba1b82445": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "97d796ffda004b71928f06bfaa86c804": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "1545346e3c74484280192c490254f5cf": {
            "model_name": "ToggleButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "3",
                "icon": "check",
                "layout": "IPY_MODEL_1f3dd6e7116c4176b81577dba1b82445",
                "style": "IPY_MODEL_97d796ffda004b71928f06bfaa86c804",
                "value": true
            }
        },
        "ca50291fae054aa896fc4fa1ba81f47b": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "1c3b486152c1489d80c65495c5ca6eed": {
            "model_name": "HBoxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "children": [
                    "IPY_MODEL_97020118f73e40d188d878645720f7b2",
                    "IPY_MODEL_caaabf05ebfe4f7eb8447c0d01f9d3bf",
                    "IPY_MODEL_6f43ecf80e954e098031ea34bd29dbc2",
                    "IPY_MODEL_91b41c3c8c2347e7814a4afc787e4da7",
                    "IPY_MODEL_aa3187e62b0e4d58a948e5143f973de5",
                    "IPY_MODEL_be4835283a6744d687aa53e54003c96b",
                    "IPY_MODEL_00fe0961f14a4352839a311a5b694099",
                    "IPY_MODEL_1545346e3c74484280192c490254f5cf"
                ],
                "layout": "IPY_MODEL_ca50291fae054aa896fc4fa1ba81f47b"
            }
        },
        "80997dce51444a3eba5ce28c22b4fb76": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "3b669902594946f894e2c1c785c6b292": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "bb93a84a9c2e4fd78efee9280103e94d": {
            "model_name": "ToggleButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "-4",
                "icon": "check",
                "layout": "IPY_MODEL_80997dce51444a3eba5ce28c22b4fb76",
                "style": "IPY_MODEL_3b669902594946f894e2c1c785c6b292",
                "value": true
            }
        },
        "13653e14f1d14bd38b8b657cfef0a79a": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "abf1cbc3e2db4b968494447d58ca82e3": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "330b812c85644f56b7841e3e3a38b6fb": {
            "model_name": "ToggleButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "-3",
                "icon": "check",
                "layout": "IPY_MODEL_13653e14f1d14bd38b8b657cfef0a79a",
                "style": "IPY_MODEL_abf1cbc3e2db4b968494447d58ca82e3",
                "value": true
            }
        },
        "41d35b8a54114eef80c9c5d190d685a6": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "b911018fdf2844c6bdc67d7ce98ff3d7": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "24724a56f2214f9bb51e094e8480659f": {
            "model_name": "ToggleButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "-2",
                "icon": "check",
                "layout": "IPY_MODEL_41d35b8a54114eef80c9c5d190d685a6",
                "style": "IPY_MODEL_b911018fdf2844c6bdc67d7ce98ff3d7",
                "value": true
            }
        },
        "d66c3b9bcd5d42f9b0eec296d531ef04": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "f5ee662f5cac407b9792451b4e1f9a40": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "218cc0ca04f447139104572b6d025983": {
            "model_name": "ToggleButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "-1",
                "icon": "check",
                "layout": "IPY_MODEL_d66c3b9bcd5d42f9b0eec296d531ef04",
                "style": "IPY_MODEL_f5ee662f5cac407b9792451b4e1f9a40",
                "value": true
            }
        },
        "6ae63bc99d4a4ce490664aec40779945": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "a52305705e6a43e2bc5af8349710b31d": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "0ea340a600484b4383ef706a47689216": {
            "model_name": "ToggleButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "0",
                "icon": "check",
                "layout": "IPY_MODEL_6ae63bc99d4a4ce490664aec40779945",
                "style": "IPY_MODEL_a52305705e6a43e2bc5af8349710b31d",
                "value": true
            }
        },
        "0f124a4766254797ae6b61754f7a39f9": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "44b6c32fa1664e9880f44d2d62ce9fcd": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "853920b2289d4ccebed2571c9312b637": {
            "model_name": "ToggleButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "1",
                "icon": "check",
                "layout": "IPY_MODEL_0f124a4766254797ae6b61754f7a39f9",
                "style": "IPY_MODEL_44b6c32fa1664e9880f44d2d62ce9fcd",
                "value": true
            }
        },
        "1db0c3b8f34443e5bc13e84dad625ce8": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "3d990b1b7505424ca398a6573c1aa49b": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "525ef0781aa747f79b001b64e2f62b2b": {
            "model_name": "ToggleButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "2",
                "icon": "check",
                "layout": "IPY_MODEL_1db0c3b8f34443e5bc13e84dad625ce8",
                "style": "IPY_MODEL_3d990b1b7505424ca398a6573c1aa49b",
                "value": true
            }
        },
        "31378a8f78364a9d88089a07484c7160": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "927720df3aa14757ab6d60186fef0543": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "c797d1f910c647bb95be58ae702fd7ae": {
            "model_name": "ToggleButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "3",
                "icon": "check",
                "layout": "IPY_MODEL_31378a8f78364a9d88089a07484c7160",
                "style": "IPY_MODEL_927720df3aa14757ab6d60186fef0543",
                "value": true
            }
        },
        "2f0221623b764829bc4d215943f1c9d2": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "38d428116d2a4ce7baa1b3c8e0cd2135": {
            "model_name": "HBoxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "children": [
                    "IPY_MODEL_bb93a84a9c2e4fd78efee9280103e94d",
                    "IPY_MODEL_330b812c85644f56b7841e3e3a38b6fb",
                    "IPY_MODEL_24724a56f2214f9bb51e094e8480659f",
                    "IPY_MODEL_218cc0ca04f447139104572b6d025983",
                    "IPY_MODEL_0ea340a600484b4383ef706a47689216",
                    "IPY_MODEL_853920b2289d4ccebed2571c9312b637",
                    "IPY_MODEL_525ef0781aa747f79b001b64e2f62b2b",
                    "IPY_MODEL_c797d1f910c647bb95be58ae702fd7ae"
                ],
                "layout": "IPY_MODEL_2f0221623b764829bc4d215943f1c9d2"
            }
        },
        "979737c553ce4e2fa2628b45fe6aefba": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "7cde842a51c04e8b9d5676bc4535f100": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "8a411b88f0e1408a9273a6b314e69446": {
            "model_name": "ToggleButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "-4",
                "icon": "check",
                "layout": "IPY_MODEL_979737c553ce4e2fa2628b45fe6aefba",
                "style": "IPY_MODEL_7cde842a51c04e8b9d5676bc4535f100",
                "value": true
            }
        },
        "03fcdd7aa84d4c8f91ea54eef9c206ce": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "046f6781f7cd40bc9aaa9c03d73f3c63": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "1dc267dc66694c1cb5862914a81fd44a": {
            "model_name": "ToggleButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "-3",
                "icon": "check",
                "layout": "IPY_MODEL_03fcdd7aa84d4c8f91ea54eef9c206ce",
                "style": "IPY_MODEL_046f6781f7cd40bc9aaa9c03d73f3c63",
                "value": true
            }
        },
        "8e520a806b7b470eb1a85b9c4cfea4a7": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "79f4e9ac9a8c42e0b7f5b342b3c30a0f": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "a8e84348d00c4dec92f5144d9797db6a": {
            "model_name": "ToggleButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "-2",
                "icon": "check",
                "layout": "IPY_MODEL_8e520a806b7b470eb1a85b9c4cfea4a7",
                "style": "IPY_MODEL_79f4e9ac9a8c42e0b7f5b342b3c30a0f",
                "value": true
            }
        },
        "6799edb8f3a94c009bdf2d628f818cfb": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "1a76aa566beb40279481572cc1cf28b5": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "d6bbd51487c74d83ac86ee23682a04a4": {
            "model_name": "ToggleButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "-1",
                "icon": "check",
                "layout": "IPY_MODEL_6799edb8f3a94c009bdf2d628f818cfb",
                "style": "IPY_MODEL_1a76aa566beb40279481572cc1cf28b5",
                "value": true
            }
        },
        "b9d56e077a6a434481834967018b7846": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "288ed6f605e84cb8ac6434da391312d7": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "3d31ac4c77954578bea98e92f1cf4534": {
            "model_name": "ToggleButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "0",
                "icon": "check",
                "layout": "IPY_MODEL_b9d56e077a6a434481834967018b7846",
                "style": "IPY_MODEL_288ed6f605e84cb8ac6434da391312d7",
                "value": true
            }
        },
        "5bc9f4790772407f94149f287d3928ef": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "cad4b9721fa6435bb4cd50e3a36b8f30": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "c308a9b2d7dd47b4a417e332d9a11c97": {
            "model_name": "ToggleButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "1",
                "icon": "check",
                "layout": "IPY_MODEL_5bc9f4790772407f94149f287d3928ef",
                "style": "IPY_MODEL_cad4b9721fa6435bb4cd50e3a36b8f30",
                "value": true
            }
        },
        "f0a4db7b546e4f81bbb9a0bce9b6dd7f": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "bfbb99fa09cb407cab7b05411acc9a6a": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "672d1fde23cd4221aa7d1dd4368efa71": {
            "model_name": "ToggleButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "2",
                "icon": "check",
                "layout": "IPY_MODEL_f0a4db7b546e4f81bbb9a0bce9b6dd7f",
                "style": "IPY_MODEL_bfbb99fa09cb407cab7b05411acc9a6a",
                "value": true
            }
        },
        "96b66da4f4664acd8b77efcdfe4bc674": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "f9a08c7ff8e74a3aa9e32b0240d1bdd2": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "f80453b0e6d8418fa272e9e92583019a": {
            "model_name": "ToggleButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "3",
                "icon": "check",
                "layout": "IPY_MODEL_96b66da4f4664acd8b77efcdfe4bc674",
                "style": "IPY_MODEL_f9a08c7ff8e74a3aa9e32b0240d1bdd2",
                "value": true
            }
        },
        "0abad3e408cc482fab04be636df60eb4": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "8134c91fc5c84bd6af691cafe0e6b758": {
            "model_name": "HBoxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "children": [
                    "IPY_MODEL_8a411b88f0e1408a9273a6b314e69446",
                    "IPY_MODEL_1dc267dc66694c1cb5862914a81fd44a",
                    "IPY_MODEL_a8e84348d00c4dec92f5144d9797db6a",
                    "IPY_MODEL_d6bbd51487c74d83ac86ee23682a04a4",
                    "IPY_MODEL_3d31ac4c77954578bea98e92f1cf4534",
                    "IPY_MODEL_c308a9b2d7dd47b4a417e332d9a11c97",
                    "IPY_MODEL_672d1fde23cd4221aa7d1dd4368efa71",
                    "IPY_MODEL_f80453b0e6d8418fa272e9e92583019a"
                ],
                "layout": "IPY_MODEL_0abad3e408cc482fab04be636df60eb4"
            }
        },
        "15b78ef7d05644fbb4bf99c2e9456e4b": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "a0707331a7b74022ad534532270ae3d3": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "aaa756ceb1de434aa7b149c5fde0eb9d": {
            "model_name": "ToggleButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "-4",
                "icon": "check",
                "layout": "IPY_MODEL_15b78ef7d05644fbb4bf99c2e9456e4b",
                "style": "IPY_MODEL_a0707331a7b74022ad534532270ae3d3",
                "value": true
            }
        },
        "ce6b31f1e8d941ee839e97af8b5ffb4f": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "cc46b2a235414a08bb34a7b6e238812e": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "c16a6c52c0394697a13843adf1d8000b": {
            "model_name": "ToggleButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "-3",
                "icon": "check",
                "layout": "IPY_MODEL_ce6b31f1e8d941ee839e97af8b5ffb4f",
                "style": "IPY_MODEL_cc46b2a235414a08bb34a7b6e238812e",
                "value": true
            }
        },
        "a72a5d5cd4ed43f8b7dd261b7ef4ec7c": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "99050468908a43b1aef022f376c4bdbb": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "726bd1f26d834ce881b310a3e4a1aa5c": {
            "model_name": "ToggleButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "-2",
                "icon": "check",
                "layout": "IPY_MODEL_a72a5d5cd4ed43f8b7dd261b7ef4ec7c",
                "style": "IPY_MODEL_99050468908a43b1aef022f376c4bdbb",
                "value": true
            }
        },
        "59462343c2b240809b0aa1cf9b01ee6f": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "73b6fefcc3464fef888e6b0308bdd10d": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "dc9a6b2bed764e96a9fd2e4f26a13ee1": {
            "model_name": "ToggleButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "-1",
                "icon": "check",
                "layout": "IPY_MODEL_59462343c2b240809b0aa1cf9b01ee6f",
                "style": "IPY_MODEL_73b6fefcc3464fef888e6b0308bdd10d",
                "value": true
            }
        },
        "8bff45a1b46e4365a8b2140929b8d81c": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "c2e26a2e36434569accf8a170d7bf2c2": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "87257ddbe60b4dedbe9ad0048fd75adb": {
            "model_name": "ToggleButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "0",
                "icon": "check",
                "layout": "IPY_MODEL_8bff45a1b46e4365a8b2140929b8d81c",
                "style": "IPY_MODEL_c2e26a2e36434569accf8a170d7bf2c2",
                "value": true
            }
        },
        "cc2584712d944e45ae04b1d29df72c39": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "3fa326986f864f0e958f5a93f036fd5d": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "8b2619fd55fd450cbc6c6f139e5d9d18": {
            "model_name": "ToggleButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "1",
                "icon": "check",
                "layout": "IPY_MODEL_cc2584712d944e45ae04b1d29df72c39",
                "style": "IPY_MODEL_3fa326986f864f0e958f5a93f036fd5d",
                "value": true
            }
        },
        "8368b8b3c62b44c2ac264a8c5ffa319b": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "e4993e138e36416fb072eec6ee6137ae": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "0c012711bc054da3ab8643feb85338c6": {
            "model_name": "ToggleButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "2",
                "icon": "check",
                "layout": "IPY_MODEL_8368b8b3c62b44c2ac264a8c5ffa319b",
                "style": "IPY_MODEL_e4993e138e36416fb072eec6ee6137ae",
                "value": true
            }
        },
        "03a0ff7dcdb94e46bcb1cd8625168df4": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "a1281280df624fc8a86e48430989bdc6": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "5710df53c086418c9ef2de1e3be16e70": {
            "model_name": "ToggleButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "3",
                "icon": "check",
                "layout": "IPY_MODEL_03a0ff7dcdb94e46bcb1cd8625168df4",
                "style": "IPY_MODEL_a1281280df624fc8a86e48430989bdc6",
                "value": true
            }
        },
        "2d37ca2ff295451eb102a0f3ab6001d9": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "ff9e343d312b455681681c9ec7fa01f7": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "0bf52206980246b6aed3f01334991909": {
            "model_name": "ToggleButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "4",
                "icon": "check",
                "layout": "IPY_MODEL_2d37ca2ff295451eb102a0f3ab6001d9",
                "style": "IPY_MODEL_ff9e343d312b455681681c9ec7fa01f7",
                "value": true
            }
        },
        "0cfa480832ad42c986860f4d74935cf3": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "4bcc7a65cb1f491aaf144b82a7dd7f62": {
            "model_name": "HBoxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "children": [
                    "IPY_MODEL_aaa756ceb1de434aa7b149c5fde0eb9d",
                    "IPY_MODEL_c16a6c52c0394697a13843adf1d8000b",
                    "IPY_MODEL_726bd1f26d834ce881b310a3e4a1aa5c",
                    "IPY_MODEL_dc9a6b2bed764e96a9fd2e4f26a13ee1",
                    "IPY_MODEL_87257ddbe60b4dedbe9ad0048fd75adb",
                    "IPY_MODEL_8b2619fd55fd450cbc6c6f139e5d9d18",
                    "IPY_MODEL_0c012711bc054da3ab8643feb85338c6",
                    "IPY_MODEL_5710df53c086418c9ef2de1e3be16e70",
                    "IPY_MODEL_0bf52206980246b6aed3f01334991909"
                ],
                "layout": "IPY_MODEL_0cfa480832ad42c986860f4d74935cf3"
            }
        },
        "7ad75821d2c84888bd2b4e68e8d26c52": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "13c27139ec9d4852b3ef53fb2c601f29": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "85e0387979e34d85ac79a02d6eabc9a2": {
            "model_name": "ToggleButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "-4",
                "icon": "check",
                "layout": "IPY_MODEL_7ad75821d2c84888bd2b4e68e8d26c52",
                "style": "IPY_MODEL_13c27139ec9d4852b3ef53fb2c601f29",
                "value": true
            }
        },
        "88e642b16c9847489ea35df5d31e6862": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "454f3415c2bd41abac6f0154864965f7": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "e380cd52df2e4b1db7099778a7166c63": {
            "model_name": "ToggleButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "-3",
                "icon": "check",
                "layout": "IPY_MODEL_88e642b16c9847489ea35df5d31e6862",
                "style": "IPY_MODEL_454f3415c2bd41abac6f0154864965f7",
                "value": true
            }
        },
        "f0545e93e84d478b956f275167eee787": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "6218e7b0b2b940f5ae46499ec39c674c": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "215fb7bddb4f4a98a4d292980b4cf871": {
            "model_name": "ToggleButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "-2",
                "icon": "check",
                "layout": "IPY_MODEL_f0545e93e84d478b956f275167eee787",
                "style": "IPY_MODEL_6218e7b0b2b940f5ae46499ec39c674c",
                "value": true
            }
        },
        "7ecde698289a4c839522ff6b8ff5a315": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "877aec1a49164ff8b586eff454a1b434": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "d9bbcef4f9af47f6a45e09f7df76ee17": {
            "model_name": "ToggleButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "-1",
                "icon": "check",
                "layout": "IPY_MODEL_7ecde698289a4c839522ff6b8ff5a315",
                "style": "IPY_MODEL_877aec1a49164ff8b586eff454a1b434",
                "value": true
            }
        },
        "d4ae87807771480a9be6a1877dc5e446": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "2ab1a3f798e24671b50ba44e52f3d838": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "e112fa306b0a4690b7464671e3c87eb8": {
            "model_name": "ToggleButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "0",
                "icon": "check",
                "layout": "IPY_MODEL_d4ae87807771480a9be6a1877dc5e446",
                "style": "IPY_MODEL_2ab1a3f798e24671b50ba44e52f3d838",
                "value": true
            }
        },
        "d15d1ae452b64375a6d6196e3cfd7c2c": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "823490fac3b24cf99a0238066c86ee46": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "4cbfc637a2374dadaf403061fa41fe7f": {
            "model_name": "ToggleButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "1",
                "icon": "check",
                "layout": "IPY_MODEL_d15d1ae452b64375a6d6196e3cfd7c2c",
                "style": "IPY_MODEL_823490fac3b24cf99a0238066c86ee46",
                "value": true
            }
        },
        "ce18ed46f483470a8ad0d6ccf7f9a462": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "dcf66cf482344d14a635dc8dea88645e": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "ccd4bdc12904483d818c0166068ad5a1": {
            "model_name": "ToggleButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "2",
                "icon": "check",
                "layout": "IPY_MODEL_ce18ed46f483470a8ad0d6ccf7f9a462",
                "style": "IPY_MODEL_dcf66cf482344d14a635dc8dea88645e",
                "value": true
            }
        },
        "0f0c92208a73460cb3c70120f23b206e": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "4e13ed6182af46f3839e242cc49088f8": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "22449d2554c74234865eaa58f35b8dd2": {
            "model_name": "ToggleButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "3",
                "icon": "check",
                "layout": "IPY_MODEL_0f0c92208a73460cb3c70120f23b206e",
                "style": "IPY_MODEL_4e13ed6182af46f3839e242cc49088f8",
                "value": true
            }
        },
        "a351e98d3b20410e910859d685b14b75": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "2a01005a19c84b2fba1b199edd938044": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "8809488c3ca642dfa2badc25d110868f": {
            "model_name": "ToggleButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "4",
                "icon": "check",
                "layout": "IPY_MODEL_a351e98d3b20410e910859d685b14b75",
                "style": "IPY_MODEL_2a01005a19c84b2fba1b199edd938044",
                "value": true
            }
        },
        "3532719549734ab788a7e80607c8d690": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "b955fa753c7b4320be070b1a0df7ba5c": {
            "model_name": "HBoxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "children": [
                    "IPY_MODEL_85e0387979e34d85ac79a02d6eabc9a2",
                    "IPY_MODEL_e380cd52df2e4b1db7099778a7166c63",
                    "IPY_MODEL_215fb7bddb4f4a98a4d292980b4cf871",
                    "IPY_MODEL_d9bbcef4f9af47f6a45e09f7df76ee17",
                    "IPY_MODEL_e112fa306b0a4690b7464671e3c87eb8",
                    "IPY_MODEL_4cbfc637a2374dadaf403061fa41fe7f",
                    "IPY_MODEL_ccd4bdc12904483d818c0166068ad5a1",
                    "IPY_MODEL_22449d2554c74234865eaa58f35b8dd2",
                    "IPY_MODEL_8809488c3ca642dfa2badc25d110868f"
                ],
                "layout": "IPY_MODEL_3532719549734ab788a7e80607c8d690"
            }
        },
        "2ed295203c7e48a097564bf163aae777": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "2b8af40f22c14d72a61f521b8aae01f6": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "76ec545aff5e418385bec4e21ea29f42": {
            "model_name": "ToggleButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "-4",
                "icon": "check",
                "layout": "IPY_MODEL_2ed295203c7e48a097564bf163aae777",
                "style": "IPY_MODEL_2b8af40f22c14d72a61f521b8aae01f6",
                "value": true
            }
        },
        "5d1858e3ab0c40dba7700155b3f5d60b": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "f6aae11eef004331a3720da33c98433d": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "7c9ab47c18414edda19e247f6cb904f0": {
            "model_name": "ToggleButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "-3",
                "icon": "check",
                "layout": "IPY_MODEL_5d1858e3ab0c40dba7700155b3f5d60b",
                "style": "IPY_MODEL_f6aae11eef004331a3720da33c98433d",
                "value": true
            }
        },
        "4527501f17ac4a42966f50b61aaed4b6": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "04f53597d3344231bdd5c782f35cf9f8": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "ba20971ec4f540ad984e9301a66f2826": {
            "model_name": "ToggleButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "-2",
                "icon": "check",
                "layout": "IPY_MODEL_4527501f17ac4a42966f50b61aaed4b6",
                "style": "IPY_MODEL_04f53597d3344231bdd5c782f35cf9f8",
                "value": true
            }
        },
        "76a77492fe424ac7a8f162e80559e291": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "1837fb650cfb45f7a6268347c6322b4c": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "aa17a5c91b524aa896c86699720d8dd0": {
            "model_name": "ToggleButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "-1",
                "icon": "check",
                "layout": "IPY_MODEL_76a77492fe424ac7a8f162e80559e291",
                "style": "IPY_MODEL_1837fb650cfb45f7a6268347c6322b4c",
                "value": true
            }
        },
        "6d199024d9254059919d4d4a3e32e300": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "0b781c290b3b4aec999606405bac41fb": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "706dac031e16435692b54cc9d056e814": {
            "model_name": "ToggleButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "0",
                "icon": "check",
                "layout": "IPY_MODEL_6d199024d9254059919d4d4a3e32e300",
                "style": "IPY_MODEL_0b781c290b3b4aec999606405bac41fb",
                "value": true
            }
        },
        "e2d72966911d4435b2986d9d80780655": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "70796aaecda64bee87e5a86d333db511": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "f7bea34cf13a49f6b65e0a7d4c6333f5": {
            "model_name": "ToggleButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "1",
                "icon": "check",
                "layout": "IPY_MODEL_e2d72966911d4435b2986d9d80780655",
                "style": "IPY_MODEL_70796aaecda64bee87e5a86d333db511",
                "value": true
            }
        },
        "867969b14e6348ec8a0eabaf5eccd9f2": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "0b0a89008d8440bb89fec76ed052eb5c": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "fc2b4b1e94454c188962537048c1dc01": {
            "model_name": "ToggleButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "2",
                "icon": "check",
                "layout": "IPY_MODEL_867969b14e6348ec8a0eabaf5eccd9f2",
                "style": "IPY_MODEL_0b0a89008d8440bb89fec76ed052eb5c",
                "value": true
            }
        },
        "ef075da1667f40679d74b962d8eba954": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "7850d627707240a9903bcbfcdd63eae9": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "4c3f6d1f626c4e2abf80520b8ccb6287": {
            "model_name": "ToggleButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "3",
                "icon": "check",
                "layout": "IPY_MODEL_ef075da1667f40679d74b962d8eba954",
                "style": "IPY_MODEL_7850d627707240a9903bcbfcdd63eae9",
                "value": true
            }
        },
        "d728c52a79444fd5b6a155acfb58908c": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "c2406e9907b140f4a1da4dc262549f4e": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "4207196d205f4a20a75b94e47f41026b": {
            "model_name": "ToggleButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "4",
                "icon": "check",
                "layout": "IPY_MODEL_d728c52a79444fd5b6a155acfb58908c",
                "style": "IPY_MODEL_c2406e9907b140f4a1da4dc262549f4e",
                "value": true
            }
        },
        "e24075b4157841399794ce2b3f10db8c": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "a763e480ce0540c1ae956520b6788205": {
            "model_name": "HBoxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "children": [
                    "IPY_MODEL_76ec545aff5e418385bec4e21ea29f42",
                    "IPY_MODEL_7c9ab47c18414edda19e247f6cb904f0",
                    "IPY_MODEL_ba20971ec4f540ad984e9301a66f2826",
                    "IPY_MODEL_aa17a5c91b524aa896c86699720d8dd0",
                    "IPY_MODEL_706dac031e16435692b54cc9d056e814",
                    "IPY_MODEL_f7bea34cf13a49f6b65e0a7d4c6333f5",
                    "IPY_MODEL_fc2b4b1e94454c188962537048c1dc01",
                    "IPY_MODEL_4c3f6d1f626c4e2abf80520b8ccb6287",
                    "IPY_MODEL_4207196d205f4a20a75b94e47f41026b"
                ],
                "layout": "IPY_MODEL_e24075b4157841399794ce2b3f10db8c"
            }
        },
        "5884e8f483ce4423ace08481eea3192f": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "045282695a684a96a6c570b76540ef2d": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "32d8c377f5844cdc8071495d5e5fa6a7": {
            "model_name": "ToggleButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "-4",
                "icon": "check",
                "layout": "IPY_MODEL_5884e8f483ce4423ace08481eea3192f",
                "style": "IPY_MODEL_045282695a684a96a6c570b76540ef2d",
                "value": true
            }
        },
        "c9f531296b1144afa3928db14a6e5653": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "c10572bf50de44c095c3b44c172c2aa4": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "3ba48042d98641a5815c29594f6664f6": {
            "model_name": "ToggleButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "-3",
                "icon": "check",
                "layout": "IPY_MODEL_c9f531296b1144afa3928db14a6e5653",
                "style": "IPY_MODEL_c10572bf50de44c095c3b44c172c2aa4",
                "value": true
            }
        },
        "943fcd11a7d34d09b85f8571a892a274": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "56b2926fad4745b4871784063900a15a": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "5b756d1e355f4a05b71fc655ee9b62c4": {
            "model_name": "ToggleButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "-2",
                "icon": "check",
                "layout": "IPY_MODEL_943fcd11a7d34d09b85f8571a892a274",
                "style": "IPY_MODEL_56b2926fad4745b4871784063900a15a",
                "value": true
            }
        },
        "1f33607379e64bb1b7cedc7d500be8bb": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "6328060c78f3417db108277ec10a043b": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "4f2d33297448430d847b585b4c6b5a02": {
            "model_name": "ToggleButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "-1",
                "icon": "check",
                "layout": "IPY_MODEL_1f33607379e64bb1b7cedc7d500be8bb",
                "style": "IPY_MODEL_6328060c78f3417db108277ec10a043b",
                "value": true
            }
        },
        "a047767b86ec49eebaf42c84c985436f": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "fca679ca79ad4f35a0bb2a24d59ec31e": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "bb6b2bdce18d46f380de81abc8cf4998": {
            "model_name": "ToggleButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "0",
                "icon": "check",
                "layout": "IPY_MODEL_a047767b86ec49eebaf42c84c985436f",
                "style": "IPY_MODEL_fca679ca79ad4f35a0bb2a24d59ec31e",
                "value": true
            }
        },
        "64600b0417234564af40567483200307": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "1e3248a0cc0d482bb5f07a47f8700a3f": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "cf9220562b1b4db581ec92f52efa753d": {
            "model_name": "ToggleButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "1",
                "icon": "check",
                "layout": "IPY_MODEL_64600b0417234564af40567483200307",
                "style": "IPY_MODEL_1e3248a0cc0d482bb5f07a47f8700a3f",
                "value": true
            }
        },
        "4106b13128384afeae4f1618ea6531aa": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "19a5150c4ec946f6be3022eb622adb41": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "6dfd65f1d7e4435b9edea7b90b785ce5": {
            "model_name": "ToggleButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "2",
                "icon": "check",
                "layout": "IPY_MODEL_4106b13128384afeae4f1618ea6531aa",
                "style": "IPY_MODEL_19a5150c4ec946f6be3022eb622adb41",
                "value": true
            }
        },
        "db5478a173a043cfb5d01cae17aafb4a": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "a86b7e89f9fb4a1ebe5d990632520c54": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "d94a02975db842458450ddbe1a80628b": {
            "model_name": "ToggleButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "3",
                "icon": "check",
                "layout": "IPY_MODEL_db5478a173a043cfb5d01cae17aafb4a",
                "style": "IPY_MODEL_a86b7e89f9fb4a1ebe5d990632520c54",
                "value": true
            }
        },
        "61fef494b1e14909bdaf18e10eb1d512": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "daeb536e1aba4baabefd879babd349bd": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "75e2a42adb334fe48f622280494bc306": {
            "model_name": "ToggleButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "4",
                "icon": "check",
                "layout": "IPY_MODEL_61fef494b1e14909bdaf18e10eb1d512",
                "style": "IPY_MODEL_daeb536e1aba4baabefd879babd349bd",
                "value": true
            }
        },
        "3b2203cd61eb4ecbb3e6991937a8412c": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "7ba1b544baa54f02af645dcbd75f09ab": {
            "model_name": "HBoxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "children": [
                    "IPY_MODEL_32d8c377f5844cdc8071495d5e5fa6a7",
                    "IPY_MODEL_3ba48042d98641a5815c29594f6664f6",
                    "IPY_MODEL_5b756d1e355f4a05b71fc655ee9b62c4",
                    "IPY_MODEL_4f2d33297448430d847b585b4c6b5a02",
                    "IPY_MODEL_bb6b2bdce18d46f380de81abc8cf4998",
                    "IPY_MODEL_cf9220562b1b4db581ec92f52efa753d",
                    "IPY_MODEL_6dfd65f1d7e4435b9edea7b90b785ce5",
                    "IPY_MODEL_d94a02975db842458450ddbe1a80628b",
                    "IPY_MODEL_75e2a42adb334fe48f622280494bc306"
                ],
                "layout": "IPY_MODEL_3b2203cd61eb4ecbb3e6991937a8412c"
            }
        },
        "df0a88c6926a44b28ab62a0ef4969582": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "20efcd0c404f4f0289d916289e0e6fa3": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "8aebd6abc2cf4283a1e036d42ff670d5": {
            "model_name": "ToggleButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "-4",
                "icon": "check",
                "layout": "IPY_MODEL_df0a88c6926a44b28ab62a0ef4969582",
                "style": "IPY_MODEL_20efcd0c404f4f0289d916289e0e6fa3",
                "value": true
            }
        },
        "55678628348644ef86adc972c015bc3e": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "3d3a5f6996304fbfad38a241acc46d18": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "03e3f24fd7bb48e3b9058175961a3b8b": {
            "model_name": "ToggleButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "-3",
                "icon": "check",
                "layout": "IPY_MODEL_55678628348644ef86adc972c015bc3e",
                "style": "IPY_MODEL_3d3a5f6996304fbfad38a241acc46d18",
                "value": true
            }
        },
        "91f89d45e629422494cff38a57e982f0": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "a7ec6dbdeb104262a7f640aab272926e": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "9c9f9ebf75b74fbbb5f56715a25356a0": {
            "model_name": "ToggleButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "-2",
                "icon": "check",
                "layout": "IPY_MODEL_91f89d45e629422494cff38a57e982f0",
                "style": "IPY_MODEL_a7ec6dbdeb104262a7f640aab272926e",
                "value": true
            }
        },
        "e2bd2d2b735e47ab83dbd6062b563e42": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "cebc8b01d2e4434099b10b62ecb83699": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "7f73f4c194694d1e9d7ca0a3f9922fb3": {
            "model_name": "ToggleButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "-1",
                "icon": "check",
                "layout": "IPY_MODEL_e2bd2d2b735e47ab83dbd6062b563e42",
                "style": "IPY_MODEL_cebc8b01d2e4434099b10b62ecb83699",
                "value": true
            }
        },
        "39a9de562fef4d5cbc2d5ef33fb50bd3": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "598ba1a2c8ae4c6893e0c2ddaaa54238": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "a9f9529ef6904d4b8060caafd374e879": {
            "model_name": "ToggleButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "0",
                "icon": "check",
                "layout": "IPY_MODEL_39a9de562fef4d5cbc2d5ef33fb50bd3",
                "style": "IPY_MODEL_598ba1a2c8ae4c6893e0c2ddaaa54238",
                "value": true
            }
        },
        "a56beba393f44042a202f170cdb32fac": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "48d102f3d5cd4b2c9f20363ef112bb8d": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "6fe248e760024508a1d3c6d85d5a87b0": {
            "model_name": "ToggleButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "1",
                "icon": "check",
                "layout": "IPY_MODEL_a56beba393f44042a202f170cdb32fac",
                "style": "IPY_MODEL_48d102f3d5cd4b2c9f20363ef112bb8d",
                "value": true
            }
        },
        "ecc6880e68474923ac3b2fb26dc9f8b5": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "c572896001534da091a406fee41673e0": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "1106c88a34e340189413cf60e7ce1334": {
            "model_name": "ToggleButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "2",
                "icon": "check",
                "layout": "IPY_MODEL_ecc6880e68474923ac3b2fb26dc9f8b5",
                "style": "IPY_MODEL_c572896001534da091a406fee41673e0",
                "value": true
            }
        },
        "fbe9cca01b83481faf41cb71313a38e2": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "e9f3bf7fc4764eda8b002251e873ce37": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "a4b8f0404a974d1fa098482d5f28caab": {
            "model_name": "ToggleButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "3",
                "icon": "check",
                "layout": "IPY_MODEL_fbe9cca01b83481faf41cb71313a38e2",
                "style": "IPY_MODEL_e9f3bf7fc4764eda8b002251e873ce37",
                "value": true
            }
        },
        "e73d4b843a4d496d91ecdeffb6853d0e": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "37b47482d2bd4dd48c270bebf20f81b9": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "eb815b1a35f644bab65df2bcbe13f7e0": {
            "model_name": "ToggleButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "4",
                "icon": "check",
                "layout": "IPY_MODEL_e73d4b843a4d496d91ecdeffb6853d0e",
                "style": "IPY_MODEL_37b47482d2bd4dd48c270bebf20f81b9",
                "value": true
            }
        },
        "ef08b481e983493ea3ea0912e5faf74c": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "d04ed5a7ef0a4302b4556783c5b771f8": {
            "model_name": "HBoxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "children": [
                    "IPY_MODEL_8aebd6abc2cf4283a1e036d42ff670d5",
                    "IPY_MODEL_03e3f24fd7bb48e3b9058175961a3b8b",
                    "IPY_MODEL_9c9f9ebf75b74fbbb5f56715a25356a0",
                    "IPY_MODEL_7f73f4c194694d1e9d7ca0a3f9922fb3",
                    "IPY_MODEL_a9f9529ef6904d4b8060caafd374e879",
                    "IPY_MODEL_6fe248e760024508a1d3c6d85d5a87b0",
                    "IPY_MODEL_1106c88a34e340189413cf60e7ce1334",
                    "IPY_MODEL_a4b8f0404a974d1fa098482d5f28caab",
                    "IPY_MODEL_eb815b1a35f644bab65df2bcbe13f7e0"
                ],
                "layout": "IPY_MODEL_ef08b481e983493ea3ea0912e5faf74c"
            }
        },
        "23f675cc11e94a409488570897b8fe31": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "3c568b90360743daa4d77365405ca402": {
            "model_name": "VBoxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_dom_classes": [
                    "widget-interact"
                ],
                "layout": "IPY_MODEL_23f675cc11e94a409488570897b8fe31"
            }
        },
        "761de92544344e61817d123bbaa8c517": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "2e9ef9cedd734467bf28f098e0a1f9ac": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "dea7e4e5ebda4728aec0076e441f1907": {
            "model_name": "ToggleButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "-4",
                "icon": "check",
                "layout": "IPY_MODEL_761de92544344e61817d123bbaa8c517",
                "style": "IPY_MODEL_2e9ef9cedd734467bf28f098e0a1f9ac",
                "value": true
            }
        },
        "189e935514f6447c9af6980118ec7b89": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "22194964500d4805a6ad691c068e5930": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "d9b8bffa0a0742108deb97d22847403e": {
            "model_name": "ToggleButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "-3",
                "icon": "check",
                "layout": "IPY_MODEL_189e935514f6447c9af6980118ec7b89",
                "style": "IPY_MODEL_22194964500d4805a6ad691c068e5930",
                "value": true
            }
        },
        "25e8dc0091294e78bff8ec44c108dd1e": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "501de670006541c7a3050a5ce362011a": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "20d0fc40148f4da091bb19cd316611a3": {
            "model_name": "ToggleButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "-2",
                "icon": "check",
                "layout": "IPY_MODEL_25e8dc0091294e78bff8ec44c108dd1e",
                "style": "IPY_MODEL_501de670006541c7a3050a5ce362011a",
                "value": true
            }
        },
        "cfbe06434c3d47b1aefdd35d90fc2d06": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "a70f5ae304804715a414c3cc405aea3e": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "e06b03a6dfd14075be93d3ad3022027c": {
            "model_name": "ToggleButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "-1",
                "icon": "check",
                "layout": "IPY_MODEL_cfbe06434c3d47b1aefdd35d90fc2d06",
                "style": "IPY_MODEL_a70f5ae304804715a414c3cc405aea3e",
                "value": true
            }
        },
        "d77dc7b1444f4a5698c87c70e79ffbb2": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "348ec11377d646d7849a75aae652ee7d": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "9221e1f206974f7ab5f5300fe3db143e": {
            "model_name": "ToggleButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "0",
                "icon": "check",
                "layout": "IPY_MODEL_d77dc7b1444f4a5698c87c70e79ffbb2",
                "style": "IPY_MODEL_348ec11377d646d7849a75aae652ee7d",
                "value": true
            }
        },
        "16e5057aa12443559c85716b980573bc": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "fa231e5812a64347b86a806ae84230d9": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "6e46b48edd3f4c6989cda7fad234a815": {
            "model_name": "ToggleButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "1",
                "icon": "check",
                "layout": "IPY_MODEL_16e5057aa12443559c85716b980573bc",
                "style": "IPY_MODEL_fa231e5812a64347b86a806ae84230d9",
                "value": true
            }
        },
        "8ff17eb70b0d4a88ae462f6acbe634b9": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "564fd172f084472e92f3b50f78646026": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "fd34817f07064915800b4aabece6916f": {
            "model_name": "ToggleButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "2",
                "icon": "check",
                "layout": "IPY_MODEL_8ff17eb70b0d4a88ae462f6acbe634b9",
                "style": "IPY_MODEL_564fd172f084472e92f3b50f78646026",
                "value": true
            }
        },
        "001dad12c3a6450db81c08fc97b84d78": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "e2ddaf523a3a453394fe4ad31df39eb5": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "d22088a66d234f0cac5678718f4e4d31": {
            "model_name": "ToggleButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "3",
                "icon": "check",
                "layout": "IPY_MODEL_001dad12c3a6450db81c08fc97b84d78",
                "style": "IPY_MODEL_e2ddaf523a3a453394fe4ad31df39eb5",
                "value": true
            }
        },
        "864059dffb74483eaa1f6e9f47610d5d": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "1c38d31f491c400685ddbb82ea451565": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "999cf1a9c4484e2ab8cd09eac43177fb": {
            "model_name": "ToggleButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "4",
                "icon": "check",
                "layout": "IPY_MODEL_864059dffb74483eaa1f6e9f47610d5d",
                "style": "IPY_MODEL_1c38d31f491c400685ddbb82ea451565",
                "value": true
            }
        },
        "c4bc662a28d3493895f218abeb919703": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "49fa4a1ec5634570a564fa4e5b8d5757": {
            "model_name": "HBoxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "children": [
                    "IPY_MODEL_dea7e4e5ebda4728aec0076e441f1907",
                    "IPY_MODEL_d9b8bffa0a0742108deb97d22847403e",
                    "IPY_MODEL_20d0fc40148f4da091bb19cd316611a3",
                    "IPY_MODEL_e06b03a6dfd14075be93d3ad3022027c",
                    "IPY_MODEL_9221e1f206974f7ab5f5300fe3db143e",
                    "IPY_MODEL_6e46b48edd3f4c6989cda7fad234a815",
                    "IPY_MODEL_fd34817f07064915800b4aabece6916f",
                    "IPY_MODEL_d22088a66d234f0cac5678718f4e4d31",
                    "IPY_MODEL_999cf1a9c4484e2ab8cd09eac43177fb"
                ],
                "layout": "IPY_MODEL_c4bc662a28d3493895f218abeb919703"
            }
        },
        "0af12dd5fae945d6ad6c24e42d053541": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "d4ffbd7cd3bd4569afd4df10a6e94e00": {
            "model_name": "VBoxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_dom_classes": [
                    "widget-interact"
                ],
                "layout": "IPY_MODEL_0af12dd5fae945d6ad6c24e42d053541"
            }
        },
        "7743ef0dfcf447e7851dd305cff3f7fe": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "50142bf9f83e4ccfbd3b72ca7ff88182": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "e56f67f5246149f48b95bc589e2f12bb": {
            "model_name": "ToggleButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "-4",
                "icon": "check",
                "layout": "IPY_MODEL_7743ef0dfcf447e7851dd305cff3f7fe",
                "style": "IPY_MODEL_50142bf9f83e4ccfbd3b72ca7ff88182",
                "value": true
            }
        },
        "ae2b6c1af27d4b58abb9b7cd3fb02228": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "23894955c9bf4f058005faf26cf9e112": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "e819e53a62b34b4c805294873cae3973": {
            "model_name": "ToggleButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "-3",
                "icon": "check",
                "layout": "IPY_MODEL_ae2b6c1af27d4b58abb9b7cd3fb02228",
                "style": "IPY_MODEL_23894955c9bf4f058005faf26cf9e112",
                "value": true
            }
        },
        "33ebb1de330f428da15a5555ddf9ff0f": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "989fee92584e4213a06d7dd0deae03ba": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "08bf469064ac4c9f910c2c36a47aac2a": {
            "model_name": "ToggleButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "-2",
                "icon": "check",
                "layout": "IPY_MODEL_33ebb1de330f428da15a5555ddf9ff0f",
                "style": "IPY_MODEL_989fee92584e4213a06d7dd0deae03ba",
                "value": true
            }
        },
        "08a37848c3c64c22a279a8d52d33a197": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "b89ce11874614a9a9b5c3b6d58e654a9": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "d2b1a85af4f341c6b683b890e97d3377": {
            "model_name": "ToggleButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "-1",
                "icon": "check",
                "layout": "IPY_MODEL_08a37848c3c64c22a279a8d52d33a197",
                "style": "IPY_MODEL_b89ce11874614a9a9b5c3b6d58e654a9",
                "value": true
            }
        },
        "a94869468839416d82118d84a035141f": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "1ec856017d354e9cbb4186e9cb93cdba": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "b7f3bf699dc14da990df176a90f8aa6b": {
            "model_name": "ToggleButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "0",
                "icon": "check",
                "layout": "IPY_MODEL_a94869468839416d82118d84a035141f",
                "style": "IPY_MODEL_1ec856017d354e9cbb4186e9cb93cdba",
                "value": true
            }
        },
        "6f31c0cfe39b4ec2a4a3131a10532829": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "07e4248aa6e048829ee87a93ac823739": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "a99ff88d0c374340b06a8bc1da9d6431": {
            "model_name": "ToggleButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "1",
                "icon": "check",
                "layout": "IPY_MODEL_6f31c0cfe39b4ec2a4a3131a10532829",
                "style": "IPY_MODEL_07e4248aa6e048829ee87a93ac823739",
                "value": true
            }
        },
        "6897d23a8fd240a5875db0d15f5a227c": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "4857f435e92c42f582c064ebe7df2534": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "8200519ece7a4bd3b9205621e81f5ec1": {
            "model_name": "ToggleButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "2",
                "icon": "check",
                "layout": "IPY_MODEL_6897d23a8fd240a5875db0d15f5a227c",
                "style": "IPY_MODEL_4857f435e92c42f582c064ebe7df2534",
                "value": true
            }
        },
        "ea9d78da9c804b3fb9639d6b4d5c7fc7": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "e3fc2705a2e046898210210679bc9ac2": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "aae2ed197a7d44839174a34800a9d525": {
            "model_name": "ToggleButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "3",
                "icon": "check",
                "layout": "IPY_MODEL_ea9d78da9c804b3fb9639d6b4d5c7fc7",
                "style": "IPY_MODEL_e3fc2705a2e046898210210679bc9ac2",
                "value": true
            }
        },
        "0e632c2cec024007b6a36c43ce5b19fa": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "28eac8ce9b1f4b0dac66132c8a01d137": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "ea640c61c3fc4db2bada5e3e2ac62ba2": {
            "model_name": "ToggleButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "4",
                "icon": "check",
                "layout": "IPY_MODEL_0e632c2cec024007b6a36c43ce5b19fa",
                "style": "IPY_MODEL_28eac8ce9b1f4b0dac66132c8a01d137",
                "value": true
            }
        },
        "4345438144d64b958bb8cddcc8b21ce9": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "627236061df54c2480c83659b35e359d": {
            "model_name": "HBoxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "children": [
                    "IPY_MODEL_e56f67f5246149f48b95bc589e2f12bb",
                    "IPY_MODEL_e819e53a62b34b4c805294873cae3973",
                    "IPY_MODEL_08bf469064ac4c9f910c2c36a47aac2a",
                    "IPY_MODEL_d2b1a85af4f341c6b683b890e97d3377",
                    "IPY_MODEL_b7f3bf699dc14da990df176a90f8aa6b",
                    "IPY_MODEL_a99ff88d0c374340b06a8bc1da9d6431",
                    "IPY_MODEL_8200519ece7a4bd3b9205621e81f5ec1",
                    "IPY_MODEL_aae2ed197a7d44839174a34800a9d525",
                    "IPY_MODEL_ea640c61c3fc4db2bada5e3e2ac62ba2"
                ],
                "layout": "IPY_MODEL_4345438144d64b958bb8cddcc8b21ce9"
            }
        },
        "a095129162ef4614a608338d59e85af0": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "a685f49db65c41f78fcd46f6ed8ea89b": {
            "model_name": "VBoxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_dom_classes": [
                    "widget-interact"
                ],
                "layout": "IPY_MODEL_a095129162ef4614a608338d59e85af0"
            }
        },
        "8733d2a43654404ea4144ccb4e0ba538": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "0d5aaf20456a44a09a4f3699023313db": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "bfcdc99ce4324304a16df051912b5342": {
            "model_name": "ToggleButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "-4",
                "icon": "check",
                "layout": "IPY_MODEL_8733d2a43654404ea4144ccb4e0ba538",
                "style": "IPY_MODEL_0d5aaf20456a44a09a4f3699023313db",
                "value": true
            }
        },
        "b49debc39a7e44e692c9b16f85aceae5": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "2c28fdbf0e164deb802db88f7ea395cd": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "3deb5e8429ba40f99a1d09e5e84265a0": {
            "model_name": "ToggleButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "-3",
                "icon": "check",
                "layout": "IPY_MODEL_b49debc39a7e44e692c9b16f85aceae5",
                "style": "IPY_MODEL_2c28fdbf0e164deb802db88f7ea395cd",
                "value": true
            }
        },
        "0a0d9d9102df45b8b3fb77e227044aac": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "ea27f66b8b394154ab944d8075892a34": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "8b4c1c8ed7bb4bca8e964f56a5b137a2": {
            "model_name": "ToggleButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "-2",
                "icon": "check",
                "layout": "IPY_MODEL_0a0d9d9102df45b8b3fb77e227044aac",
                "style": "IPY_MODEL_ea27f66b8b394154ab944d8075892a34",
                "value": true
            }
        },
        "e6f1bdb064af442eaebfdb721a91b66c": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "842a8ef5278d42daade0d1e945f0583a": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "52bed04d634745d593070664f2c0424e": {
            "model_name": "ToggleButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "-1",
                "icon": "check",
                "layout": "IPY_MODEL_e6f1bdb064af442eaebfdb721a91b66c",
                "style": "IPY_MODEL_842a8ef5278d42daade0d1e945f0583a",
                "value": true
            }
        },
        "e8c84e25532f4b1694964174a4c166d3": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "5dbc1d019c3a45d497fcedac470a35fa": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "11a527d8138e4923bf80e0b7a858c1ec": {
            "model_name": "ToggleButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "0",
                "icon": "check",
                "layout": "IPY_MODEL_e8c84e25532f4b1694964174a4c166d3",
                "style": "IPY_MODEL_5dbc1d019c3a45d497fcedac470a35fa",
                "value": true
            }
        },
        "cb87f87cfd1c425db3ba010463625fdf": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "16b5d9c320d54dd1af90e280ce08bcfc": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "ae6eedfb5c294938aed4b967e60f3708": {
            "model_name": "ToggleButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "1",
                "icon": "check",
                "layout": "IPY_MODEL_cb87f87cfd1c425db3ba010463625fdf",
                "style": "IPY_MODEL_16b5d9c320d54dd1af90e280ce08bcfc",
                "value": true
            }
        },
        "95c502cc57a047f8b616842bcb346374": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "7e2749bc7a4540628254375ff5f03407": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "13803e07b7a740d282b9c75f84cb48cd": {
            "model_name": "ToggleButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "2",
                "icon": "check",
                "layout": "IPY_MODEL_95c502cc57a047f8b616842bcb346374",
                "style": "IPY_MODEL_7e2749bc7a4540628254375ff5f03407",
                "value": true
            }
        },
        "556eab5946064bcb847f4aa24f0a5055": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "a1c1b38c454946949d062a5439d07daf": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "36628b87662f472296655221f8e5b44d": {
            "model_name": "ToggleButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "3",
                "icon": "check",
                "layout": "IPY_MODEL_556eab5946064bcb847f4aa24f0a5055",
                "style": "IPY_MODEL_a1c1b38c454946949d062a5439d07daf",
                "value": true
            }
        },
        "792d5b49a5f148478cf28fb6af3bad0f": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "4148c86314e840168d73719f5031f4ab": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "c739ae20b0084a6c850c09288f4f3389": {
            "model_name": "ToggleButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "4",
                "icon": "check",
                "layout": "IPY_MODEL_792d5b49a5f148478cf28fb6af3bad0f",
                "style": "IPY_MODEL_4148c86314e840168d73719f5031f4ab",
                "value": true
            }
        },
        "6e1cc7409f4441dbbd89dec2e03b492e": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "63586a89a1d8445c871dc3892361067c": {
            "model_name": "HBoxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "children": [
                    "IPY_MODEL_bfcdc99ce4324304a16df051912b5342",
                    "IPY_MODEL_3deb5e8429ba40f99a1d09e5e84265a0",
                    "IPY_MODEL_8b4c1c8ed7bb4bca8e964f56a5b137a2",
                    "IPY_MODEL_52bed04d634745d593070664f2c0424e",
                    "IPY_MODEL_11a527d8138e4923bf80e0b7a858c1ec",
                    "IPY_MODEL_ae6eedfb5c294938aed4b967e60f3708",
                    "IPY_MODEL_13803e07b7a740d282b9c75f84cb48cd",
                    "IPY_MODEL_36628b87662f472296655221f8e5b44d",
                    "IPY_MODEL_c739ae20b0084a6c850c09288f4f3389"
                ],
                "layout": "IPY_MODEL_6e1cc7409f4441dbbd89dec2e03b492e"
            }
        },
        "5dbf9cf619d84b729811803ff6832eb7": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "78e4ddec1c024ee58c72f566c96534d5": {
            "model_name": "VBoxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_dom_classes": [
                    "widget-interact"
                ],
                "layout": "IPY_MODEL_5dbf9cf619d84b729811803ff6832eb7"
            }
        },
        "45dca217c4ef40bcb0e733ffe16e23ce": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "d6c619d280024b629adc8880225cd238": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "0aecf12778c948b58be92106aa7c343f": {
            "model_name": "ToggleButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "-4",
                "icon": "check",
                "layout": "IPY_MODEL_45dca217c4ef40bcb0e733ffe16e23ce",
                "style": "IPY_MODEL_d6c619d280024b629adc8880225cd238",
                "value": true
            }
        },
        "23825a0484664b70b0e98a42a3362ebd": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "f028d98a5a794980bd376e04bed59e28": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "418d12f226f8418a81d60769882882de": {
            "model_name": "ToggleButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "-3",
                "icon": "check",
                "layout": "IPY_MODEL_23825a0484664b70b0e98a42a3362ebd",
                "style": "IPY_MODEL_f028d98a5a794980bd376e04bed59e28",
                "value": true
            }
        },
        "fb66d127bd414b9da83f2ac65409b6d3": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "90eb1134df4d47f6bba747cc2e04d557": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "50542ed9cc0143619766c888a46592fd": {
            "model_name": "ToggleButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "-2",
                "icon": "check",
                "layout": "IPY_MODEL_fb66d127bd414b9da83f2ac65409b6d3",
                "style": "IPY_MODEL_90eb1134df4d47f6bba747cc2e04d557",
                "value": true
            }
        },
        "19059f8669c24ae4acf95b0dc1850669": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "ddbafe5c54f84151a8122ce0281a04d6": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "4623f84791074e7dab1a44cd0f75c42b": {
            "model_name": "ToggleButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "-1",
                "icon": "check",
                "layout": "IPY_MODEL_19059f8669c24ae4acf95b0dc1850669",
                "style": "IPY_MODEL_ddbafe5c54f84151a8122ce0281a04d6",
                "value": true
            }
        },
        "9572b502e0b14d30aeb53d71aadb57db": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "8d26b8f459dc4317a8e23ad71711ed61": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "373eb46cf0e4444d8faf3e5fb2da2ce7": {
            "model_name": "ToggleButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "0",
                "icon": "check",
                "layout": "IPY_MODEL_9572b502e0b14d30aeb53d71aadb57db",
                "style": "IPY_MODEL_8d26b8f459dc4317a8e23ad71711ed61",
                "value": true
            }
        },
        "b0a6fae426c847469606cc83fcf2b0b3": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "9d52341331864c29adcd19f9431a9926": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "804b7464d0cd41c7ba80580f9128719a": {
            "model_name": "ToggleButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "1",
                "icon": "check",
                "layout": "IPY_MODEL_b0a6fae426c847469606cc83fcf2b0b3",
                "style": "IPY_MODEL_9d52341331864c29adcd19f9431a9926",
                "value": true
            }
        },
        "d1edee90b6414a14ad9375d4e0c37f96": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "3b5af26f275742968dd9983686494f94": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "59bbf9d2887c4f03a8da0b513ae32b82": {
            "model_name": "ToggleButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "2",
                "icon": "check",
                "layout": "IPY_MODEL_d1edee90b6414a14ad9375d4e0c37f96",
                "style": "IPY_MODEL_3b5af26f275742968dd9983686494f94",
                "value": true
            }
        },
        "68f883d075954012ba084a7b8eb41b44": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "19c7b7e37eab4ab3bc4ebd1a8c9fa162": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "9a5d9b37bf644536ae264b3adb138ac5": {
            "model_name": "ToggleButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "3",
                "icon": "check",
                "layout": "IPY_MODEL_68f883d075954012ba084a7b8eb41b44",
                "style": "IPY_MODEL_19c7b7e37eab4ab3bc4ebd1a8c9fa162",
                "value": true
            }
        },
        "7b2cc0f2005a47ad80a37aff43b55b4c": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "91a51b7847ed45ac980b7660cd376d28": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "fe3a1eff446e48708376c9286aa0fbe2": {
            "model_name": "ToggleButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "4",
                "icon": "check",
                "layout": "IPY_MODEL_7b2cc0f2005a47ad80a37aff43b55b4c",
                "style": "IPY_MODEL_91a51b7847ed45ac980b7660cd376d28",
                "value": true
            }
        },
        "3c37cd6a0b994ec0a271d4a03e62b6dc": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "2abd241332174fa5afacd906298442b6": {
            "model_name": "HBoxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "children": [
                    "IPY_MODEL_0aecf12778c948b58be92106aa7c343f",
                    "IPY_MODEL_418d12f226f8418a81d60769882882de",
                    "IPY_MODEL_50542ed9cc0143619766c888a46592fd",
                    "IPY_MODEL_4623f84791074e7dab1a44cd0f75c42b",
                    "IPY_MODEL_373eb46cf0e4444d8faf3e5fb2da2ce7",
                    "IPY_MODEL_804b7464d0cd41c7ba80580f9128719a",
                    "IPY_MODEL_59bbf9d2887c4f03a8da0b513ae32b82",
                    "IPY_MODEL_9a5d9b37bf644536ae264b3adb138ac5",
                    "IPY_MODEL_fe3a1eff446e48708376c9286aa0fbe2"
                ],
                "layout": "IPY_MODEL_3c37cd6a0b994ec0a271d4a03e62b6dc"
            }
        },
        "bad15df8c8a04b849011f99c66338ca9": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "9673f53afc7240a3b773f8465a5e7d2b": {
            "model_name": "VBoxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_dom_classes": [
                    "widget-interact"
                ],
                "layout": "IPY_MODEL_bad15df8c8a04b849011f99c66338ca9"
            }
        },
        "e192ee637ac64469b68195681d0a5fcb": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "c70ccee8fc1f4e188e0afd519a6298a5": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "96608c1d608b489ba8c05b4293f9413b": {
            "model_name": "ToggleButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "-4",
                "icon": "check",
                "layout": "IPY_MODEL_e192ee637ac64469b68195681d0a5fcb",
                "style": "IPY_MODEL_c70ccee8fc1f4e188e0afd519a6298a5",
                "value": true
            }
        },
        "11827a6867884327990155b090c6081f": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "af8ebfb8c2774fc3a090ea0e24da472f": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "07dc75fd0ce84cc7a621d5e88f28a0ba": {
            "model_name": "ToggleButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "-3",
                "icon": "check",
                "layout": "IPY_MODEL_11827a6867884327990155b090c6081f",
                "style": "IPY_MODEL_af8ebfb8c2774fc3a090ea0e24da472f",
                "value": true
            }
        },
        "b61f32f95c6248e5bbd2f05ad368d401": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "1facc78203d945b58c02a3612afcc8b5": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "14baf5efa4974b46ba7c33acafdd3410": {
            "model_name": "ToggleButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "-2",
                "icon": "check",
                "layout": "IPY_MODEL_b61f32f95c6248e5bbd2f05ad368d401",
                "style": "IPY_MODEL_1facc78203d945b58c02a3612afcc8b5",
                "value": true
            }
        },
        "d9be4f24205f486592d485c2d78ca53e": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "f68475bb7391440b9ee5e053a12c4683": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "9dcfe9ae871842ffb4e20f73184f1ddf": {
            "model_name": "ToggleButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "-1",
                "icon": "check",
                "layout": "IPY_MODEL_d9be4f24205f486592d485c2d78ca53e",
                "style": "IPY_MODEL_f68475bb7391440b9ee5e053a12c4683",
                "value": true
            }
        },
        "334993f39d3146c9b5e43b076d5943ea": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "489e7075fe594668b9544205808d7930": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "b35d352320044bb9ad957a9b5cc0d571": {
            "model_name": "ToggleButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "0",
                "icon": "check",
                "layout": "IPY_MODEL_334993f39d3146c9b5e43b076d5943ea",
                "style": "IPY_MODEL_489e7075fe594668b9544205808d7930",
                "value": true
            }
        },
        "16a0c00f592448549b1b6aa332c32fcc": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "c5383dd6603b47ffb28a79a091b55c48": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "20d2bf7b40a247cab66f31111410c23c": {
            "model_name": "ToggleButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "1",
                "icon": "check",
                "layout": "IPY_MODEL_16a0c00f592448549b1b6aa332c32fcc",
                "style": "IPY_MODEL_c5383dd6603b47ffb28a79a091b55c48",
                "value": true
            }
        },
        "bb328b3986a54dd7bf614fc367ff0737": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "f83b957db303461ca94d4ca460c1b98e": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "f4557c1ccc214be3a3c9694de4067ca8": {
            "model_name": "ToggleButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "2",
                "icon": "check",
                "layout": "IPY_MODEL_bb328b3986a54dd7bf614fc367ff0737",
                "style": "IPY_MODEL_f83b957db303461ca94d4ca460c1b98e",
                "value": true
            }
        },
        "5dad108286694b2aaaa356db7d128ccc": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "1a7581015c56478bbd308ac0aa12bb46": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "79b751579cdd4132a6e882710ea56b05": {
            "model_name": "ToggleButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "3",
                "icon": "check",
                "layout": "IPY_MODEL_5dad108286694b2aaaa356db7d128ccc",
                "style": "IPY_MODEL_1a7581015c56478bbd308ac0aa12bb46",
                "value": true
            }
        },
        "4419817516e2474b9f9bbf4f84660ed2": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "469892f04d82430dba7e5af1049ef4b2": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "404c041e23124f2a81d4eaf0496c14cc": {
            "model_name": "ToggleButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "4",
                "icon": "check",
                "layout": "IPY_MODEL_4419817516e2474b9f9bbf4f84660ed2",
                "style": "IPY_MODEL_469892f04d82430dba7e5af1049ef4b2",
                "value": true
            }
        },
        "c907beb64f894933af5f8decc16ecd2a": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "9429c0e981924824b8c2b57e52414429": {
            "model_name": "HBoxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "children": [
                    "IPY_MODEL_96608c1d608b489ba8c05b4293f9413b",
                    "IPY_MODEL_07dc75fd0ce84cc7a621d5e88f28a0ba",
                    "IPY_MODEL_14baf5efa4974b46ba7c33acafdd3410",
                    "IPY_MODEL_9dcfe9ae871842ffb4e20f73184f1ddf",
                    "IPY_MODEL_b35d352320044bb9ad957a9b5cc0d571",
                    "IPY_MODEL_20d2bf7b40a247cab66f31111410c23c",
                    "IPY_MODEL_f4557c1ccc214be3a3c9694de4067ca8",
                    "IPY_MODEL_79b751579cdd4132a6e882710ea56b05",
                    "IPY_MODEL_404c041e23124f2a81d4eaf0496c14cc"
                ],
                "layout": "IPY_MODEL_c907beb64f894933af5f8decc16ecd2a"
            }
        },
        "fdf3e068d64f4efc806c756660720f38": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "34c34a37437e401ea89e0f12613dd5a2": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "6acf8ff7565242c2859c350bfd2692f4": {
            "model_name": "ToggleButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "-4",
                "icon": "check",
                "layout": "IPY_MODEL_fdf3e068d64f4efc806c756660720f38",
                "style": "IPY_MODEL_34c34a37437e401ea89e0f12613dd5a2",
                "value": true
            }
        },
        "90bad31cca144c67aebfd29a5d7363f2": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "370046f23d8a454499947f62c5ea80ce": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "024ef5f006cf454ab2884ac3d836ce4f": {
            "model_name": "ToggleButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "-3",
                "icon": "check",
                "layout": "IPY_MODEL_90bad31cca144c67aebfd29a5d7363f2",
                "style": "IPY_MODEL_370046f23d8a454499947f62c5ea80ce",
                "value": true
            }
        },
        "c434078935a4432c99ad5b116affe24c": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "f32b5b80964046d287da567d4fb36bca": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "792386a092da4839a321f3f4b6d9c9d0": {
            "model_name": "ToggleButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "-2",
                "icon": "check",
                "layout": "IPY_MODEL_c434078935a4432c99ad5b116affe24c",
                "style": "IPY_MODEL_f32b5b80964046d287da567d4fb36bca",
                "value": true
            }
        },
        "95163cdaf308478fb997fde63ce63a78": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "8e7653027b454851883fec640195f1fa": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "96365f0ef5d84c058946531673e43fca": {
            "model_name": "ToggleButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "-1",
                "icon": "check",
                "layout": "IPY_MODEL_95163cdaf308478fb997fde63ce63a78",
                "style": "IPY_MODEL_8e7653027b454851883fec640195f1fa",
                "value": true
            }
        },
        "f59d32e3528344ac8e3555498cf8c5d8": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "59935553858642b38e950ca2cf2c72f6": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "cd9cb519e32e4b6d8814965d20859655": {
            "model_name": "ToggleButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "0",
                "icon": "check",
                "layout": "IPY_MODEL_f59d32e3528344ac8e3555498cf8c5d8",
                "style": "IPY_MODEL_59935553858642b38e950ca2cf2c72f6",
                "value": true
            }
        },
        "f16de5abb80144ceb392e1305d88947c": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "78ed47621ba54aa589ab8227d1f3b9d4": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "c33071aa8ebf47e8805badbd470a98dd": {
            "model_name": "ToggleButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "1",
                "icon": "check",
                "layout": "IPY_MODEL_f16de5abb80144ceb392e1305d88947c",
                "style": "IPY_MODEL_78ed47621ba54aa589ab8227d1f3b9d4",
                "value": true
            }
        },
        "0146385cf13f4c8d872ec8038116779d": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "01100223f7a64fb38d5b506c6b509a98": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "454edc367b344b828b97dd150bb7c2c1": {
            "model_name": "ToggleButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "2",
                "icon": "check",
                "layout": "IPY_MODEL_0146385cf13f4c8d872ec8038116779d",
                "style": "IPY_MODEL_01100223f7a64fb38d5b506c6b509a98",
                "value": true
            }
        },
        "967ca96ef42f4904a0a97307cae65ae0": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "d0a6bd07c9c240b9bc53c9ab610034ea": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "8d2fceee9e1c45d2b5cad49f2777766d": {
            "model_name": "ToggleButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "3",
                "icon": "check",
                "layout": "IPY_MODEL_967ca96ef42f4904a0a97307cae65ae0",
                "style": "IPY_MODEL_d0a6bd07c9c240b9bc53c9ab610034ea",
                "value": true
            }
        },
        "de86b73c858847829f18c7f32afd85d9": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "a43a1f0733be4c09aece41a683df3a8b": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "8b920f8f6b014efbbad06c4459351c67": {
            "model_name": "ToggleButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "4",
                "icon": "check",
                "layout": "IPY_MODEL_de86b73c858847829f18c7f32afd85d9",
                "style": "IPY_MODEL_a43a1f0733be4c09aece41a683df3a8b",
                "value": true
            }
        },
        "9b40b8d17ea045b990d39817db5b2289": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "8ea350da96384c5eb9c91b33b931615b": {
            "model_name": "HBoxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "children": [
                    "IPY_MODEL_6acf8ff7565242c2859c350bfd2692f4",
                    "IPY_MODEL_024ef5f006cf454ab2884ac3d836ce4f",
                    "IPY_MODEL_792386a092da4839a321f3f4b6d9c9d0",
                    "IPY_MODEL_96365f0ef5d84c058946531673e43fca",
                    "IPY_MODEL_cd9cb519e32e4b6d8814965d20859655",
                    "IPY_MODEL_c33071aa8ebf47e8805badbd470a98dd",
                    "IPY_MODEL_454edc367b344b828b97dd150bb7c2c1",
                    "IPY_MODEL_8d2fceee9e1c45d2b5cad49f2777766d",
                    "IPY_MODEL_8b920f8f6b014efbbad06c4459351c67"
                ],
                "layout": "IPY_MODEL_9b40b8d17ea045b990d39817db5b2289"
            }
        },
        "b18f2e8276d6446dada72be11b7aea7d": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "9ad31d733ac349c684e70289b28bc974": {
            "model_name": "VBoxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_dom_classes": [
                    "widget-interact"
                ],
                "layout": "IPY_MODEL_b18f2e8276d6446dada72be11b7aea7d"
            }
        },
        "6b6817055b784b7cbb14f72f39b7fc18": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "978c29bc30684710aeb719430b0e7885": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "b7b31c6459d04b66861346f2f9d9d521": {
            "model_name": "ToggleButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "-4",
                "icon": "check",
                "layout": "IPY_MODEL_6b6817055b784b7cbb14f72f39b7fc18",
                "style": "IPY_MODEL_978c29bc30684710aeb719430b0e7885",
                "value": true
            }
        },
        "f900c31162af4490bbd0be8ccf88ba26": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "d3ef2805cfc34231aeb17265c9dbcf38": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "664979af09b04a1b8bc0367990071a2a": {
            "model_name": "ToggleButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "-3",
                "icon": "check",
                "layout": "IPY_MODEL_f900c31162af4490bbd0be8ccf88ba26",
                "style": "IPY_MODEL_d3ef2805cfc34231aeb17265c9dbcf38",
                "value": true
            }
        },
        "78a23a82474c4b3da6f55ed376f10723": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "7d19b77512c845b4b42ffd4b7f3231be": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "0998c30c11b04a1380f93ff977f51714": {
            "model_name": "ToggleButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "-2",
                "icon": "check",
                "layout": "IPY_MODEL_78a23a82474c4b3da6f55ed376f10723",
                "style": "IPY_MODEL_7d19b77512c845b4b42ffd4b7f3231be",
                "value": true
            }
        },
        "e28f2bf078e64b64b83709381962f06c": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "566031ccbe46420c8824ff0d892a4db7": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "7707a6f560864b588ed6269264c70147": {
            "model_name": "ToggleButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "-1",
                "icon": "check",
                "layout": "IPY_MODEL_e28f2bf078e64b64b83709381962f06c",
                "style": "IPY_MODEL_566031ccbe46420c8824ff0d892a4db7",
                "value": true
            }
        },
        "33b9e984d04c40d49e431993d8201871": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "56ca9f1bee3045f2801d893f7a16d418": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "077b1416efc5414eb86c7d6698038e6e": {
            "model_name": "ToggleButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "0",
                "icon": "check",
                "layout": "IPY_MODEL_33b9e984d04c40d49e431993d8201871",
                "style": "IPY_MODEL_56ca9f1bee3045f2801d893f7a16d418",
                "value": true
            }
        },
        "69c2837668944be8b676e77f485f7da5": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "af1165c846d049bb9e3c9b5733e7c3e1": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "b873668d66da43389513a6b74259fbad": {
            "model_name": "ToggleButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "1",
                "icon": "check",
                "layout": "IPY_MODEL_69c2837668944be8b676e77f485f7da5",
                "style": "IPY_MODEL_af1165c846d049bb9e3c9b5733e7c3e1",
                "value": true
            }
        },
        "4b9bfb306f29419f9873b9f843979a09": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "1394d9f970a24f8d8fb77d0a014e7082": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "faa919ee2e754e93915c7ddaf7e3238e": {
            "model_name": "ToggleButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "2",
                "icon": "check",
                "layout": "IPY_MODEL_4b9bfb306f29419f9873b9f843979a09",
                "style": "IPY_MODEL_1394d9f970a24f8d8fb77d0a014e7082",
                "value": true
            }
        },
        "92cd2a49221e41d4b22d86021789b42b": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "7d00e61df0ed4f919a1cff0c6d03fb52": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "8cd3ef2c454144f3b4763800176e0ec2": {
            "model_name": "ToggleButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "3",
                "icon": "check",
                "layout": "IPY_MODEL_92cd2a49221e41d4b22d86021789b42b",
                "style": "IPY_MODEL_7d00e61df0ed4f919a1cff0c6d03fb52",
                "value": true
            }
        },
        "83589350e9d44b4d80afdbf0a41a1ad7": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "5f89dde0e4f04cf292ac0dbfdffb2401": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "3093f8fba30d4fd19e4e5fb18e905748": {
            "model_name": "ToggleButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "4",
                "icon": "check",
                "layout": "IPY_MODEL_83589350e9d44b4d80afdbf0a41a1ad7",
                "style": "IPY_MODEL_5f89dde0e4f04cf292ac0dbfdffb2401",
                "value": true
            }
        },
        "4581785d06cb4f208cf6ecce616e9302": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "93bd482b8d7b4f73b39fe3b3c2998633": {
            "model_name": "HBoxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "children": [
                    "IPY_MODEL_b7b31c6459d04b66861346f2f9d9d521",
                    "IPY_MODEL_664979af09b04a1b8bc0367990071a2a",
                    "IPY_MODEL_0998c30c11b04a1380f93ff977f51714",
                    "IPY_MODEL_7707a6f560864b588ed6269264c70147",
                    "IPY_MODEL_077b1416efc5414eb86c7d6698038e6e",
                    "IPY_MODEL_b873668d66da43389513a6b74259fbad",
                    "IPY_MODEL_faa919ee2e754e93915c7ddaf7e3238e",
                    "IPY_MODEL_8cd3ef2c454144f3b4763800176e0ec2",
                    "IPY_MODEL_3093f8fba30d4fd19e4e5fb18e905748"
                ],
                "layout": "IPY_MODEL_4581785d06cb4f208cf6ecce616e9302"
            }
        },
        "34ef8b32b68a4dc99f2d8ef86d04673f": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "987ec0f2479849c882bf96ba8610e366": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "07fc0b2b162644b38a9cf7a0e1a5b183": {
            "model_name": "ToggleButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "-4",
                "icon": "check",
                "layout": "IPY_MODEL_34ef8b32b68a4dc99f2d8ef86d04673f",
                "style": "IPY_MODEL_987ec0f2479849c882bf96ba8610e366",
                "value": true
            }
        },
        "967860fc1fcf4296a1d5898a6e2ad8c1": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "d7d97b720d6649f0ae3e94f5c06261f2": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "9005e50635554fd5bacde283523d0dd5": {
            "model_name": "ToggleButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "-3",
                "icon": "check",
                "layout": "IPY_MODEL_967860fc1fcf4296a1d5898a6e2ad8c1",
                "style": "IPY_MODEL_d7d97b720d6649f0ae3e94f5c06261f2",
                "value": true
            }
        },
        "de31d0510ee94c8597c42668378896a6": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "e7e6998f700048ee967d19675967c714": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "5112c1bae641465db20bf12e9a7e106f": {
            "model_name": "ToggleButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "-2",
                "icon": "check",
                "layout": "IPY_MODEL_de31d0510ee94c8597c42668378896a6",
                "style": "IPY_MODEL_e7e6998f700048ee967d19675967c714",
                "value": true
            }
        },
        "c5b7887e7c3a4e1bb9673bec774d9ffc": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "10ba0c8b98a9488d8d7ecd7720233919": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "8f992d766ddd4998a1b30f645c820f7c": {
            "model_name": "ToggleButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "-1",
                "icon": "check",
                "layout": "IPY_MODEL_c5b7887e7c3a4e1bb9673bec774d9ffc",
                "style": "IPY_MODEL_10ba0c8b98a9488d8d7ecd7720233919",
                "value": true
            }
        },
        "45a90a7050c14367a5123df18be2a645": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "5f329773972d47899bf731970ecdaa24": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "e12765fcd9b34137b649bc2860c03603": {
            "model_name": "ToggleButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "0",
                "icon": "check",
                "layout": "IPY_MODEL_45a90a7050c14367a5123df18be2a645",
                "style": "IPY_MODEL_5f329773972d47899bf731970ecdaa24",
                "value": true
            }
        },
        "392343ec724a42dfb87fb34620ebd941": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "62e63e554f274680b1b7ae24a85f6416": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "39c052c16c4e42ce8c8cfb600920d43b": {
            "model_name": "ToggleButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "1",
                "icon": "check",
                "layout": "IPY_MODEL_392343ec724a42dfb87fb34620ebd941",
                "style": "IPY_MODEL_62e63e554f274680b1b7ae24a85f6416",
                "value": true
            }
        },
        "ed11c8e96e2846ad9efa1164f3d60c61": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "74ffec8d87ec447eb2f5df974cbbcb07": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "cd61da3000cb4076b107e26ec526e16f": {
            "model_name": "ToggleButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "2",
                "icon": "check",
                "layout": "IPY_MODEL_ed11c8e96e2846ad9efa1164f3d60c61",
                "style": "IPY_MODEL_74ffec8d87ec447eb2f5df974cbbcb07",
                "value": true
            }
        },
        "d37b3671ab884930b2cedf9d730c1608": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "fd3bb35221ed4548b61f1a4e78c07277": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "bdcde7b8e31647398453204ded99817e": {
            "model_name": "ToggleButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "3",
                "icon": "check",
                "layout": "IPY_MODEL_d37b3671ab884930b2cedf9d730c1608",
                "style": "IPY_MODEL_fd3bb35221ed4548b61f1a4e78c07277",
                "value": true
            }
        },
        "5ef670be8d474d68a1c161e11b274e43": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "a468d6a6f0754467bec1e387172c28e1": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "c7e57d19c2114a169293a8ee9c52531c": {
            "model_name": "ToggleButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "4",
                "icon": "check",
                "layout": "IPY_MODEL_5ef670be8d474d68a1c161e11b274e43",
                "style": "IPY_MODEL_a468d6a6f0754467bec1e387172c28e1",
                "value": true
            }
        },
        "7591fa1ca2474c80b5c9ba400729a462": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "2e0575cec0364e678354bcc14ba47d96": {
            "model_name": "HBoxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "children": [
                    "IPY_MODEL_07fc0b2b162644b38a9cf7a0e1a5b183",
                    "IPY_MODEL_9005e50635554fd5bacde283523d0dd5",
                    "IPY_MODEL_5112c1bae641465db20bf12e9a7e106f",
                    "IPY_MODEL_8f992d766ddd4998a1b30f645c820f7c",
                    "IPY_MODEL_e12765fcd9b34137b649bc2860c03603",
                    "IPY_MODEL_39c052c16c4e42ce8c8cfb600920d43b",
                    "IPY_MODEL_cd61da3000cb4076b107e26ec526e16f",
                    "IPY_MODEL_bdcde7b8e31647398453204ded99817e",
                    "IPY_MODEL_c7e57d19c2114a169293a8ee9c52531c"
                ],
                "layout": "IPY_MODEL_7591fa1ca2474c80b5c9ba400729a462"
            }
        },
        "57d846ca32c74856bd70825dd0030fcb": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "ca25b17d4ba444d6916958da410d5af1": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "c4e0dccab59649e084fe2d600ac84c75": {
            "model_name": "ToggleButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "-4",
                "icon": "check",
                "layout": "IPY_MODEL_57d846ca32c74856bd70825dd0030fcb",
                "style": "IPY_MODEL_ca25b17d4ba444d6916958da410d5af1",
                "value": true
            }
        },
        "ae0fa43945584338a4cc9dc634bbbb35": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "760d752ff0454b5db05b40daed7f047d": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "189b77bdfa3c4c008f3fee087cf3ca0e": {
            "model_name": "ToggleButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "-3",
                "icon": "check",
                "layout": "IPY_MODEL_ae0fa43945584338a4cc9dc634bbbb35",
                "style": "IPY_MODEL_760d752ff0454b5db05b40daed7f047d",
                "value": true
            }
        },
        "b3068d6bdb8a49d99702a72156853c6e": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "bf547449fc514a48ab6880634c220c01": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "ea0b171ef3a9478394fb5742809f6c3d": {
            "model_name": "ToggleButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "-2",
                "icon": "check",
                "layout": "IPY_MODEL_b3068d6bdb8a49d99702a72156853c6e",
                "style": "IPY_MODEL_bf547449fc514a48ab6880634c220c01"
            }
        },
        "ff341ec3ce54499792b058d17c6e7eb6": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "782a61faaf0c4d2f99893179b46978e9": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "59d47ae6aa6142ecacb7902d14e50770": {
            "model_name": "ToggleButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "-1",
                "icon": "check",
                "layout": "IPY_MODEL_ff341ec3ce54499792b058d17c6e7eb6",
                "style": "IPY_MODEL_782a61faaf0c4d2f99893179b46978e9"
            }
        },
        "32c115f3c8ee4a21ad5774dc92f16e81": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "ef83f0b77ee4434181b8e7b6560d29e2": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "021ba51d31ce450ebaeef2136ff2125f": {
            "model_name": "ToggleButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "0",
                "icon": "check",
                "layout": "IPY_MODEL_32c115f3c8ee4a21ad5774dc92f16e81",
                "style": "IPY_MODEL_ef83f0b77ee4434181b8e7b6560d29e2",
                "value": true
            }
        },
        "d703b45c2eec438fb9f6a7f2bfd58d90": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "959f96e5cd7c4e06a3dba4b4a53a11f9": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "474af69d75f341a4bfa537a476c68f84": {
            "model_name": "ToggleButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "1",
                "icon": "check",
                "layout": "IPY_MODEL_d703b45c2eec438fb9f6a7f2bfd58d90",
                "style": "IPY_MODEL_959f96e5cd7c4e06a3dba4b4a53a11f9",
                "value": true
            }
        },
        "afd4aefc0a0d415984631bddbede70c2": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "2d79116716724b47bdee6018d80d6156": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "53550a334719429b8fad85ee689d5dca": {
            "model_name": "ToggleButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "2",
                "icon": "check",
                "layout": "IPY_MODEL_afd4aefc0a0d415984631bddbede70c2",
                "style": "IPY_MODEL_2d79116716724b47bdee6018d80d6156",
                "value": true
            }
        },
        "445ae8d4bdb14dc1ab8ff91f46eaf240": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "11bd4c595b49428781cefd3ba37fde98": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "4c4c910497da4e91bc8bb73e8590c6e8": {
            "model_name": "ToggleButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "3",
                "icon": "check",
                "layout": "IPY_MODEL_445ae8d4bdb14dc1ab8ff91f46eaf240",
                "style": "IPY_MODEL_11bd4c595b49428781cefd3ba37fde98",
                "value": true
            }
        },
        "884b17e964aa485780373948d21fd3cf": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "6b6724c8e6544f69b841441f9a989482": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "cf77858a2989435fb7943cd6f7697c34": {
            "model_name": "ToggleButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "4",
                "icon": "check",
                "layout": "IPY_MODEL_884b17e964aa485780373948d21fd3cf",
                "style": "IPY_MODEL_6b6724c8e6544f69b841441f9a989482",
                "value": true
            }
        },
        "da5f4979f676444a9bbba3f8d205bdce": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "c4a63cb595d24f2a9cdec544d47c5428": {
            "model_name": "HBoxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "children": [
                    "IPY_MODEL_c4e0dccab59649e084fe2d600ac84c75",
                    "IPY_MODEL_189b77bdfa3c4c008f3fee087cf3ca0e",
                    "IPY_MODEL_ea0b171ef3a9478394fb5742809f6c3d",
                    "IPY_MODEL_59d47ae6aa6142ecacb7902d14e50770",
                    "IPY_MODEL_021ba51d31ce450ebaeef2136ff2125f",
                    "IPY_MODEL_474af69d75f341a4bfa537a476c68f84",
                    "IPY_MODEL_53550a334719429b8fad85ee689d5dca",
                    "IPY_MODEL_4c4c910497da4e91bc8bb73e8590c6e8",
                    "IPY_MODEL_cf77858a2989435fb7943cd6f7697c34"
                ],
                "layout": "IPY_MODEL_da5f4979f676444a9bbba3f8d205bdce"
            }
        },
        "259d590638c64b9f964748ef4877197f": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "9d08fbeead9c454fa8f64e7ac5734f72": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "087a772918c84cd5859663e032dc9f23": {
            "model_name": "ToggleButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "true",
                "icon": "check",
                "layout": "IPY_MODEL_259d590638c64b9f964748ef4877197f",
                "style": "IPY_MODEL_9d08fbeead9c454fa8f64e7ac5734f72"
            }
        },
        "dccb1f4a226b402fb1719376701ed90f": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "fb13ea454f1b43f69e0be40062a76e8d": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "f390e44d39e84ffca91fe71c9f01111e": {
            "model_name": "ToggleButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "pred",
                "icon": "check",
                "layout": "IPY_MODEL_dccb1f4a226b402fb1719376701ed90f",
                "style": "IPY_MODEL_fb13ea454f1b43f69e0be40062a76e8d",
                "value": true
            }
        },
        "e7175ab7f1a847bfbe99c2b9b6073b73": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "e28143f353f24dfa8eeb54d2016f6c2b": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "f46ac0d163ff4b5fb02d238eb18a89ca": {
            "model_name": "ToggleButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "pred_-4",
                "icon": "check",
                "layout": "IPY_MODEL_e7175ab7f1a847bfbe99c2b9b6073b73",
                "style": "IPY_MODEL_e28143f353f24dfa8eeb54d2016f6c2b"
            }
        },
        "d1239fae62a042c781fe7f4e287ca784": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "f06b68b99ff24facb3d1e4b0adebad5f": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "cc300372c0ae4659a129b4c3854b868f": {
            "model_name": "ToggleButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "pred_-3",
                "icon": "check",
                "layout": "IPY_MODEL_d1239fae62a042c781fe7f4e287ca784",
                "style": "IPY_MODEL_f06b68b99ff24facb3d1e4b0adebad5f"
            }
        },
        "b0980ca8998e4f88957caa646365402b": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "3e425604f8274c90b80316141700f80e": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "6acee6fb8eec4ff297b0583111c9bc7f": {
            "model_name": "ToggleButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "pred_-2",
                "icon": "check",
                "layout": "IPY_MODEL_b0980ca8998e4f88957caa646365402b",
                "style": "IPY_MODEL_3e425604f8274c90b80316141700f80e",
                "value": true
            }
        },
        "870827a871da42a4b5fa845298071020": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "81f0010790fb474b80aeb2f72505fa31": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "4155ace674e5444e8b814016ee42da9f": {
            "model_name": "ToggleButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "pred_-1",
                "icon": "check",
                "layout": "IPY_MODEL_870827a871da42a4b5fa845298071020",
                "style": "IPY_MODEL_81f0010790fb474b80aeb2f72505fa31",
                "value": true
            }
        },
        "c4d19f811e924e9f961dd661cc55bc82": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "1aeced4d6d464ef8857c30d4cc33cdf8": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "2ce2b61f5acb444b93689a4a2eafa15d": {
            "model_name": "ToggleButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "pred_0",
                "icon": "check",
                "layout": "IPY_MODEL_c4d19f811e924e9f961dd661cc55bc82",
                "style": "IPY_MODEL_1aeced4d6d464ef8857c30d4cc33cdf8",
                "value": true
            }
        },
        "146b58890a0849afa9f9818176821120": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "5bb73f312d974a81b1a9531fa450531b": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "6730a111ee954f42ac21b59b83d6ddd7": {
            "model_name": "ToggleButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "pred_1",
                "icon": "check",
                "layout": "IPY_MODEL_146b58890a0849afa9f9818176821120",
                "style": "IPY_MODEL_5bb73f312d974a81b1a9531fa450531b",
                "value": true
            }
        },
        "be807cdb741a4e0cab97195986408fe5": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "e0a6c389ae30460d88ef0a8b0d36186e": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "98dade2d574a47a8ab8fe01384cfad00": {
            "model_name": "ToggleButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "pred_2",
                "icon": "check",
                "layout": "IPY_MODEL_be807cdb741a4e0cab97195986408fe5",
                "style": "IPY_MODEL_e0a6c389ae30460d88ef0a8b0d36186e",
                "value": true
            }
        },
        "a783b7a258714a1fb0a412010d1300d8": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "0191f2fe632c43fba971e4081b0fef7f": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "eadf27282b554ff8af4f4146e7e710ef": {
            "model_name": "ToggleButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "pred_3",
                "icon": "check",
                "layout": "IPY_MODEL_a783b7a258714a1fb0a412010d1300d8",
                "style": "IPY_MODEL_0191f2fe632c43fba971e4081b0fef7f",
                "value": true
            }
        },
        "df15284fc4c94b31a8853c844f1567ad": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "45942f85d44644fcb07a6669d67edb1a": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "a4b8ef359e1a427b98ecb4e6a360b497": {
            "model_name": "ToggleButtonModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description": "pred_4",
                "icon": "check",
                "layout": "IPY_MODEL_df15284fc4c94b31a8853c844f1567ad",
                "style": "IPY_MODEL_45942f85d44644fcb07a6669d67edb1a",
                "value": true
            }
        },
        "a4fd41d7c9474d6d9b02d98a6c046238": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "d6aeda9988434087a4761d2349a79420": {
            "model_name": "HBoxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "children": [
                    "IPY_MODEL_087a772918c84cd5859663e032dc9f23",
                    "IPY_MODEL_f390e44d39e84ffca91fe71c9f01111e",
                    "IPY_MODEL_f46ac0d163ff4b5fb02d238eb18a89ca",
                    "IPY_MODEL_cc300372c0ae4659a129b4c3854b868f",
                    "IPY_MODEL_6acee6fb8eec4ff297b0583111c9bc7f",
                    "IPY_MODEL_4155ace674e5444e8b814016ee42da9f",
                    "IPY_MODEL_2ce2b61f5acb444b93689a4a2eafa15d",
                    "IPY_MODEL_6730a111ee954f42ac21b59b83d6ddd7",
                    "IPY_MODEL_98dade2d574a47a8ab8fe01384cfad00",
                    "IPY_MODEL_eadf27282b554ff8af4f4146e7e710ef",
                    "IPY_MODEL_a4b8ef359e1a427b98ecb4e6a360b497"
                ],
                "layout": "IPY_MODEL_a4fd41d7c9474d6d9b02d98a6c046238"
            }
        },
        "519d186310694361b4a9c74c7fdf8e51": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "a6f01d356a774cf3b7d5bb056a8fdfa2": {
            "model_name": "VBoxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_dom_classes": [
                    "widget-interact"
                ],
                "layout": "IPY_MODEL_519d186310694361b4a9c74c7fdf8e51"
            }
        },
        "52d29cc8fe1c4f5eb64984fca7ec74df": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "7eee7e843654408182ccf105ad07b840": {
            "model_name": "VBoxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_dom_classes": [
                    "widget-interact"
                ],
                "layout": "IPY_MODEL_52d29cc8fe1c4f5eb64984fca7ec74df"
            }
        },
        "5adb91f6c2a6419d8d79b5f42ceefd9f": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "c5b33990ef8b447481ac01d722e79751": {
            "model_name": "VBoxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_dom_classes": [
                    "widget-interact"
                ],
                "layout": "IPY_MODEL_5adb91f6c2a6419d8d79b5f42ceefd9f"
            }
        },
        "7e9513761ef34295a79f83360f4b8c1c": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "31d022fbe06a4ece83bcf542d8fb34d2": {
            "model_name": "VBoxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_dom_classes": [
                    "widget-interact"
                ],
                "children": [
                    "IPY_MODEL_aee0aa0621464dee9e1e6c691574a62c",
                    "IPY_MODEL_a08384232aef48b38fb169e6bcd287f7"
                ],
                "layout": "IPY_MODEL_7e9513761ef34295a79f83360f4b8c1c"
            }
        },
        "8197c81096ad4dff96abaa924e419c3b": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "490f65a2976c4feca17953cb7e779be6": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "aee0aa0621464dee9e1e6c691574a62c": {
            "model_name": "DropdownModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_options_labels": [
                    "data_params",
                    "generators",
                    "loss_function",
                    "callbacks",
                    "compile",
                    "model.get_config",
                    "fit_params"
                ],
                "description": "params",
                "index": 0,
                "layout": "IPY_MODEL_8197c81096ad4dff96abaa924e419c3b",
                "style": "IPY_MODEL_490f65a2976c4feca17953cb7e779be6"
            }
        },
        "42bcbc46725d4444af80108dbcc67263": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "a08384232aef48b38fb169e6bcd287f7": {
            "model_name": "OutputModel",
            "model_module": "@jupyter-widgets/output",
            "model_module_version": "1.0.0",
            "state": {
                "layout": "IPY_MODEL_42bcbc46725d4444af80108dbcc67263",
                "outputs": [
                    {
                        "output_type": "stream",
                        "text": "data_params\n",
                        "name": "stdout"
                    },
                    {
                        "output_type": "error",
                        "ename": "AttributeError",
                        "evalue": "'str' object has no attribute 'values'",
                        "traceback": [
                            "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
                            "\u001b[1;31mAttributeError\u001b[0m                            Traceback (most recent call last)",
                            "\u001b[1;32m~\\Anaconda3\\envs\\learn-env-ext\\lib\\site-packages\\ipywidgets\\widgets\\interaction.py\u001b[0m in \u001b[0;36mupdate\u001b[1;34m(self, *args)\u001b[0m\n\u001b[0;32m    249\u001b[0m                     \u001b[0mvalue\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mwidget\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mget_interact_value\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    250\u001b[0m                     \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[1;33m[\u001b[0m\u001b[0mwidget\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0m_kwarg\u001b[0m\u001b[1;33m]\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mvalue\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m--> 251\u001b[1;33m                 \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mresult\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mf\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m**\u001b[0m\u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m    252\u001b[0m                 \u001b[0mshow_inline_matplotlib_plots\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    253\u001b[0m                 \u001b[1;32mif\u001b[0m \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mauto_display\u001b[0m \u001b[1;32mand\u001b[0m \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mresult\u001b[0m \u001b[1;32mis\u001b[0m \u001b[1;32mnot\u001b[0m \u001b[1;32mNone\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
                            "\u001b[1;32m<ipython-input-189-93590ad6b706>\u001b[0m in \u001b[0;36mdisplay_params\u001b[1;34m(params)\u001b[0m\n\u001b[0;32m      3\u001b[0m \u001b[1;32mdef\u001b[0m \u001b[0mdisplay_params\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mparams\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m      4\u001b[0m     \u001b[0mprint\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mparams\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m----> 5\u001b[1;33m     \u001b[1;32mreturn\u001b[0m \u001b[0mparams\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mvalues\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m",
                            "\u001b[1;31mAttributeError\u001b[0m: 'str' object has no attribute 'values'"
                        ]
                    }
                ]
            }
        },
        "b107f5ed03b34c2f8a4d475ff488201f": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "d128e0bc255d47b091e51dd59ca7eb2b": {
            "model_name": "VBoxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_dom_classes": [
                    "widget-interact"
                ],
                "children": [
                    "IPY_MODEL_070b929f0262440a999ce7756a55de65",
                    "IPY_MODEL_be49eb94afcb4c67ab9d57207d52485a"
                ],
                "layout": "IPY_MODEL_b107f5ed03b34c2f8a4d475ff488201f"
            }
        },
        "5b524fd030d7408393f98b50ce120d53": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "06477db8a8a042339a625d35eb641345": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "070b929f0262440a999ce7756a55de65": {
            "model_name": "DropdownModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_options_labels": [
                    "data_params",
                    "generators",
                    "loss_function",
                    "callbacks",
                    "compile",
                    "model.get_config",
                    "fit_params"
                ],
                "description": "params",
                "index": 2,
                "layout": "IPY_MODEL_5b524fd030d7408393f98b50ce120d53",
                "style": "IPY_MODEL_06477db8a8a042339a625d35eb641345"
            }
        },
        "f009096a37ba47459ce0fe8477566e0f": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "be49eb94afcb4c67ab9d57207d52485a": {
            "model_name": "OutputModel",
            "model_module": "@jupyter-widgets/output",
            "model_module_version": "1.0.0",
            "state": {
                "layout": "IPY_MODEL_f009096a37ba47459ce0fe8477566e0f",
                "outputs": [
                    {
                        "output_type": "stream",
                        "text": "<function my_rmse at 0x000002A4D5D496A8>\n",
                        "name": "stdout"
                    },
                    {
                        "output_type": "error",
                        "ename": "AttributeError",
                        "evalue": "'function' object has no attribute 'values'",
                        "traceback": [
                            "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
                            "\u001b[1;31mAttributeError\u001b[0m                            Traceback (most recent call last)",
                            "\u001b[1;32m~\\Anaconda3\\envs\\learn-env-ext\\lib\\site-packages\\ipywidgets\\widgets\\interaction.py\u001b[0m in \u001b[0;36mupdate\u001b[1;34m(self, *args)\u001b[0m\n\u001b[0;32m    249\u001b[0m                     \u001b[0mvalue\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mwidget\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mget_interact_value\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    250\u001b[0m                     \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[1;33m[\u001b[0m\u001b[0mwidget\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0m_kwarg\u001b[0m\u001b[1;33m]\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mvalue\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m--> 251\u001b[1;33m                 \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mresult\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mf\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m**\u001b[0m\u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m    252\u001b[0m                 \u001b[0mshow_inline_matplotlib_plots\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    253\u001b[0m                 \u001b[1;32mif\u001b[0m \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mauto_display\u001b[0m \u001b[1;32mand\u001b[0m \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mresult\u001b[0m \u001b[1;32mis\u001b[0m \u001b[1;32mnot\u001b[0m \u001b[1;32mNone\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
                            "\u001b[1;32m<ipython-input-190-49fffe15fe46>\u001b[0m in \u001b[0;36mdisplay_params\u001b[1;34m(params)\u001b[0m\n\u001b[0;32m      3\u001b[0m \u001b[1;32mdef\u001b[0m \u001b[0mdisplay_params\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mparams\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m      4\u001b[0m     \u001b[0mprint\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mparams\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m----> 5\u001b[1;33m     \u001b[1;32mreturn\u001b[0m \u001b[0mparams\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mvalues\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m",
                            "\u001b[1;31mAttributeError\u001b[0m: 'function' object has no attribute 'values'"
                        ]
                    }
                ]
            }
        },
        "90381f22ff2c448e9b40e65abffeca64": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "c45cbeb21a044dbfbe8461310984d9f0": {
            "model_name": "VBoxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_dom_classes": [
                    "widget-interact"
                ],
                "children": [
                    "IPY_MODEL_284405cad4f34359bf682a29c46475ec",
                    "IPY_MODEL_9a6a88b7418145a68c8951467d625bb4"
                ],
                "layout": "IPY_MODEL_90381f22ff2c448e9b40e65abffeca64"
            }
        },
        "bae1a94c529c4f74acac10aec59a81cf": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "61c55d32c16448a7878e630f25124045": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "284405cad4f34359bf682a29c46475ec": {
            "model_name": "DropdownModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_options_labels": [
                    "data_params",
                    "generators",
                    "loss_function",
                    "callbacks",
                    "compile",
                    "model.get_config",
                    "fit_params"
                ],
                "description": "model_params",
                "index": 0,
                "layout": "IPY_MODEL_bae1a94c529c4f74acac10aec59a81cf",
                "style": "IPY_MODEL_61c55d32c16448a7878e630f25124045"
            }
        },
        "f94cab753e4b4ad5bb32d6cf11182e3c": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "9a6a88b7418145a68c8951467d625bb4": {
            "model_name": "OutputModel",
            "model_module": "@jupyter-widgets/output",
            "model_module_version": "1.0.0",
            "state": {
                "layout": "IPY_MODEL_f94cab753e4b4ad5bb32d6cf11182e3c",
                "outputs": [
                    {
                        "output_type": "error",
                        "ename": "NameError",
                        "evalue": "name 'params' is not defined",
                        "traceback": [
                            "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
                            "\u001b[1;31mNameError\u001b[0m                                 Traceback (most recent call last)",
                            "\u001b[1;32m~\\Anaconda3\\envs\\learn-env-ext\\lib\\site-packages\\ipywidgets\\widgets\\interaction.py\u001b[0m in \u001b[0;36mupdate\u001b[1;34m(self, *args)\u001b[0m\n\u001b[0;32m    249\u001b[0m                     \u001b[0mvalue\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mwidget\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mget_interact_value\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    250\u001b[0m                     \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[1;33m[\u001b[0m\u001b[0mwidget\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0m_kwarg\u001b[0m\u001b[1;33m]\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mvalue\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m--> 251\u001b[1;33m                 \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mresult\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mf\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m**\u001b[0m\u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m    252\u001b[0m                 \u001b[0mshow_inline_matplotlib_plots\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    253\u001b[0m                 \u001b[1;32mif\u001b[0m \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mauto_display\u001b[0m \u001b[1;32mand\u001b[0m \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mresult\u001b[0m \u001b[1;32mis\u001b[0m \u001b[1;32mnot\u001b[0m \u001b[1;32mNone\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
                            "\u001b[1;32m<ipython-input-191-d17ba4ae7d94>\u001b[0m in \u001b[0;36mdisplay_params\u001b[1;34m(model_params)\u001b[0m\n\u001b[0;32m      2\u001b[0m \u001b[1;33m@\u001b[0m\u001b[0minteract\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mmodel_params\u001b[0m\u001b[1;33m=\u001b[0m\u001b[0mmodel_params\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m      3\u001b[0m \u001b[1;32mdef\u001b[0m \u001b[0mdisplay_params\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mmodel_params\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m----> 4\u001b[1;33m     \u001b[0mprint\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mparams\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m      5\u001b[0m     \u001b[1;32mreturn\u001b[0m \u001b[0mparams\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mvalues\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
                            "\u001b[1;31mNameError\u001b[0m: name 'params' is not defined"
                        ]
                    }
                ]
            }
        },
        "c0fa4b64a07b4ac19e8a4ccc2f15eeaa": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "5830d80b985644028e8109b7b8c7fbc6": {
            "model_name": "VBoxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_dom_classes": [
                    "widget-interact"
                ],
                "children": [
                    "IPY_MODEL_99d9197fba4041a18bc5678faf1585da",
                    "IPY_MODEL_373a80407496443a8ace2afea1c7598d"
                ],
                "layout": "IPY_MODEL_c0fa4b64a07b4ac19e8a4ccc2f15eeaa"
            }
        },
        "b13ea2a6b8f248348f889a05270b1f3e": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "77a07de0c02d4c368c76449879a14dc0": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "99d9197fba4041a18bc5678faf1585da": {
            "model_name": "DropdownModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_options_labels": [
                    "data_params",
                    "generators",
                    "loss_function",
                    "callbacks",
                    "compile",
                    "model.get_config",
                    "fit_params"
                ],
                "description": "model_params",
                "index": 0,
                "layout": "IPY_MODEL_b13ea2a6b8f248348f889a05270b1f3e",
                "style": "IPY_MODEL_77a07de0c02d4c368c76449879a14dc0"
            }
        },
        "db5ae126d21f40d6a8674e143d5ea248": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "373a80407496443a8ace2afea1c7598d": {
            "model_name": "OutputModel",
            "model_module": "@jupyter-widgets/output",
            "model_module_version": "1.0.0",
            "state": {
                "layout": "IPY_MODEL_db5ae126d21f40d6a8674e143d5ea248",
                "outputs": [
                    {
                        "output_type": "stream",
                        "text": "{'num_test_days': 45, 'num_train_days': 365, 'days_for_x_window': 5, 'x_window': 35, 'n_input': 35, 'n_features': 1, 'batch_size': 1}\n",
                        "name": "stdout"
                    },
                    {
                        "output_type": "error",
                        "ename": "NameError",
                        "evalue": "name 'params' is not defined",
                        "traceback": [
                            "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
                            "\u001b[1;31mNameError\u001b[0m                                 Traceback (most recent call last)",
                            "\u001b[1;32m~\\Anaconda3\\envs\\learn-env-ext\\lib\\site-packages\\ipywidgets\\widgets\\interaction.py\u001b[0m in \u001b[0;36mupdate\u001b[1;34m(self, *args)\u001b[0m\n\u001b[0;32m    249\u001b[0m                     \u001b[0mvalue\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mwidget\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mget_interact_value\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    250\u001b[0m                     \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[1;33m[\u001b[0m\u001b[0mwidget\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0m_kwarg\u001b[0m\u001b[1;33m]\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mvalue\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m--> 251\u001b[1;33m                 \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mresult\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mf\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m**\u001b[0m\u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m    252\u001b[0m                 \u001b[0mshow_inline_matplotlib_plots\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    253\u001b[0m                 \u001b[1;32mif\u001b[0m \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mauto_display\u001b[0m \u001b[1;32mand\u001b[0m \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mresult\u001b[0m \u001b[1;32mis\u001b[0m \u001b[1;32mnot\u001b[0m \u001b[1;32mNone\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
                            "\u001b[1;32m<ipython-input-192-56082813b7df>\u001b[0m in \u001b[0;36mdisplay_params\u001b[1;34m(model_params)\u001b[0m\n\u001b[0;32m      3\u001b[0m \u001b[1;32mdef\u001b[0m \u001b[0mdisplay_params\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mmodel_params\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m      4\u001b[0m     \u001b[0mprint\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mmodel_params\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m----> 5\u001b[1;33m     \u001b[1;32mreturn\u001b[0m \u001b[0mparams\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mvalues\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m",
                            "\u001b[1;31mNameError\u001b[0m: name 'params' is not defined"
                        ]
                    }
                ]
            }
        },
        "94efa82a45e94af48cf6479d96f7391e": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "d9f971ef509641b39830d0718a389f9b": {
            "model_name": "VBoxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_dom_classes": [
                    "widget-interact"
                ],
                "children": [
                    "IPY_MODEL_c3b139b39888414ba5adb4cd84d9d2ab",
                    "IPY_MODEL_1f7654fd62f747b59cb9f37b4f9d7321"
                ],
                "layout": "IPY_MODEL_94efa82a45e94af48cf6479d96f7391e"
            }
        },
        "c23a30a6e8b544e6bc6f70e15fc2c5f5": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "a85e0797b373478f8f09b37933ee668a": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "c3b139b39888414ba5adb4cd84d9d2ab": {
            "model_name": "DropdownModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_options_labels": [
                    "data_params",
                    "generators",
                    "loss_function",
                    "callbacks",
                    "compile",
                    "model.get_config",
                    "fit_params"
                ],
                "description": "model_params",
                "index": 0,
                "layout": "IPY_MODEL_c23a30a6e8b544e6bc6f70e15fc2c5f5",
                "style": "IPY_MODEL_a85e0797b373478f8f09b37933ee668a"
            }
        },
        "0def44691d48406a8565970d6ea1edd8": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "1f7654fd62f747b59cb9f37b4f9d7321": {
            "model_name": "OutputModel",
            "model_module": "@jupyter-widgets/output",
            "model_module_version": "1.0.0",
            "state": {
                "layout": "IPY_MODEL_0def44691d48406a8565970d6ea1edd8",
                "outputs": [
                    {
                        "output_type": "stream",
                        "text": "{'num_test_days': 45, 'num_train_days': 365, 'days_for_x_window': 5, 'x_window': 35, 'n_input': 35, 'n_features': 1, 'batch_size': 1}\n",
                        "name": "stdout"
                    },
                    {
                        "output_type": "error",
                        "ename": "NameError",
                        "evalue": "name 'params' is not defined",
                        "traceback": [
                            "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
                            "\u001b[1;31mNameError\u001b[0m                                 Traceback (most recent call last)",
                            "\u001b[1;32m~\\Anaconda3\\envs\\learn-env-ext\\lib\\site-packages\\ipywidgets\\widgets\\interaction.py\u001b[0m in \u001b[0;36mupdate\u001b[1;34m(self, *args)\u001b[0m\n\u001b[0;32m    249\u001b[0m                     \u001b[0mvalue\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mwidget\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mget_interact_value\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    250\u001b[0m                     \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[1;33m[\u001b[0m\u001b[0mwidget\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0m_kwarg\u001b[0m\u001b[1;33m]\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mvalue\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m--> 251\u001b[1;33m                 \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mresult\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mf\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m**\u001b[0m\u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m    252\u001b[0m                 \u001b[0mshow_inline_matplotlib_plots\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    253\u001b[0m                 \u001b[1;32mif\u001b[0m \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mauto_display\u001b[0m \u001b[1;32mand\u001b[0m \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mresult\u001b[0m \u001b[1;32mis\u001b[0m \u001b[1;32mnot\u001b[0m \u001b[1;32mNone\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
                            "\u001b[1;32m<ipython-input-193-aaa351b89851>\u001b[0m in \u001b[0;36mdisplay_params\u001b[1;34m(model_params)\u001b[0m\n\u001b[0;32m      3\u001b[0m \u001b[1;32mdef\u001b[0m \u001b[0mdisplay_params\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mmodel_params\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m      4\u001b[0m     \u001b[0mprint\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mmodel_params\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m----> 5\u001b[1;33m     \u001b[1;32mreturn\u001b[0m \u001b[0mparams\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mvalues\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m;\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m",
                            "\u001b[1;31mNameError\u001b[0m: name 'params' is not defined"
                        ]
                    }
                ]
            }
        },
        "511a814221b540d7a6c04a35581a12ca": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "43a15a671c4041438d8ccdd3f08dc3d0": {
            "model_name": "VBoxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_dom_classes": [
                    "widget-interact"
                ],
                "children": [
                    "IPY_MODEL_1ae1ffa6643e4404aada7b49c6f267c0",
                    "IPY_MODEL_2dbb602a2bed4dcd916712c385c1423f"
                ],
                "layout": "IPY_MODEL_511a814221b540d7a6c04a35581a12ca"
            }
        },
        "75bb5337e27b4aa48238d5377cd14ae8": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "b2e2ff7169324a7488d9f6a8839517f6": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "1ae1ffa6643e4404aada7b49c6f267c0": {
            "model_name": "DropdownModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_options_labels": [
                    "data_params",
                    "generators",
                    "loss_function",
                    "callbacks",
                    "compile",
                    "model.get_config",
                    "fit_params"
                ],
                "description": "model_params",
                "index": 0,
                "layout": "IPY_MODEL_75bb5337e27b4aa48238d5377cd14ae8",
                "style": "IPY_MODEL_b2e2ff7169324a7488d9f6a8839517f6"
            }
        },
        "4288eea92a6f4037bb05e56433577048": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "2dbb602a2bed4dcd916712c385c1423f": {
            "model_name": "OutputModel",
            "model_module": "@jupyter-widgets/output",
            "model_module_version": "1.0.0",
            "state": {
                "layout": "IPY_MODEL_4288eea92a6f4037bb05e56433577048",
                "outputs": [
                    {
                        "output_type": "stream",
                        "text": "{'num_test_days': 45, 'num_train_days': 365, 'days_for_x_window': 5, 'x_window': 35, 'n_input': 35, 'n_features': 1, 'batch_size': 1}\n",
                        "name": "stdout"
                    }
                ]
            }
        },
        "39ffd097e36446b8b1a1f0e838be18f0": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "52a2f77868df43edaa104ea2bcd0cfa0": {
            "model_name": "VBoxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_dom_classes": [
                    "widget-interact"
                ],
                "children": [
                    "IPY_MODEL_24adab81f5b949359d3ac45e562deb89",
                    "IPY_MODEL_dfb997b8b2d54047894c5e8ea57c294d"
                ],
                "layout": "IPY_MODEL_39ffd097e36446b8b1a1f0e838be18f0"
            }
        },
        "1bea8f2be44941e0aa0a4d5fa2d4e8e8": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "8940ace2a9444d4c8a7de75c17fb37ae": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "24adab81f5b949359d3ac45e562deb89": {
            "model_name": "DropdownModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_options_labels": [
                    "data_params",
                    "generators",
                    "loss_function",
                    "callbacks",
                    "compile",
                    "model.get_config",
                    "fit_params"
                ],
                "description": "model_params",
                "index": 0,
                "layout": "IPY_MODEL_1bea8f2be44941e0aa0a4d5fa2d4e8e8",
                "style": "IPY_MODEL_8940ace2a9444d4c8a7de75c17fb37ae"
            }
        },
        "98f299cda17c48c98af94f4b0f7fc935": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "dfb997b8b2d54047894c5e8ea57c294d": {
            "model_name": "OutputModel",
            "model_module": "@jupyter-widgets/output",
            "model_module_version": "1.0.0",
            "state": {
                "layout": "IPY_MODEL_98f299cda17c48c98af94f4b0f7fc935",
                "outputs": [
                    {
                        "output_type": "error",
                        "ename": "ModuleNotFoundError",
                        "evalue": "No module named 'pprint.pprint'; 'pprint' is not a package",
                        "traceback": [
                            "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
                            "\u001b[1;31mModuleNotFoundError\u001b[0m                       Traceback (most recent call last)",
                            "\u001b[1;32m~\\Anaconda3\\envs\\learn-env-ext\\lib\\site-packages\\ipywidgets\\widgets\\interaction.py\u001b[0m in \u001b[0;36mupdate\u001b[1;34m(self, *args)\u001b[0m\n\u001b[0;32m    249\u001b[0m                     \u001b[0mvalue\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mwidget\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mget_interact_value\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    250\u001b[0m                     \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[1;33m[\u001b[0m\u001b[0mwidget\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0m_kwarg\u001b[0m\u001b[1;33m]\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mvalue\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m--> 251\u001b[1;33m                 \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mresult\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mf\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m**\u001b[0m\u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m    252\u001b[0m                 \u001b[0mshow_inline_matplotlib_plots\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    253\u001b[0m                 \u001b[1;32mif\u001b[0m \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mauto_display\u001b[0m \u001b[1;32mand\u001b[0m \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mresult\u001b[0m \u001b[1;32mis\u001b[0m \u001b[1;32mnot\u001b[0m \u001b[1;32mNone\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
                            "\u001b[1;32m<ipython-input-195-90f83ecbf2e3>\u001b[0m in \u001b[0;36mdisplay_params\u001b[1;34m(model_params)\u001b[0m\n\u001b[0;32m      2\u001b[0m \u001b[1;33m@\u001b[0m\u001b[0minteract\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mmodel_params\u001b[0m\u001b[1;33m=\u001b[0m\u001b[0mmodel_params\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m      3\u001b[0m \u001b[1;32mdef\u001b[0m \u001b[0mdisplay_params\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mmodel_params\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m----> 4\u001b[1;33m     \u001b[1;32mimport\u001b[0m \u001b[0mpprint\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mpprint\u001b[0m \u001b[1;32mas\u001b[0m \u001b[0mpprint\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m      5\u001b[0m     \u001b[0mpprint\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mmodel_params\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m      6\u001b[0m     \u001b[1;32mreturn\u001b[0m \u001b[1;31m#params.values();\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
                            "\u001b[1;31mModuleNotFoundError\u001b[0m: No module named 'pprint.pprint'; 'pprint' is not a package"
                        ]
                    }
                ]
            }
        },
        "2bac2dc94ad642718d507144bcec79f7": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "73aac2d303744116b3d57f251f6237e6": {
            "model_name": "VBoxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_dom_classes": [
                    "widget-interact"
                ],
                "children": [
                    "IPY_MODEL_47b580175fe948da91591d9d75e47106",
                    "IPY_MODEL_50b751e759c44337afc1d7f38b7394d9"
                ],
                "layout": "IPY_MODEL_2bac2dc94ad642718d507144bcec79f7"
            }
        },
        "1bc3e7ae08cb4b8c90feedfb2acc70a7": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "dd60bbe2fa4b4eedb3a884dcd3066327": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "47b580175fe948da91591d9d75e47106": {
            "model_name": "DropdownModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_options_labels": [
                    "data_params",
                    "generators",
                    "loss_function",
                    "callbacks",
                    "compile",
                    "model.get_config",
                    "fit_params"
                ],
                "description": "model_params",
                "index": 2,
                "layout": "IPY_MODEL_1bc3e7ae08cb4b8c90feedfb2acc70a7",
                "style": "IPY_MODEL_dd60bbe2fa4b4eedb3a884dcd3066327"
            }
        },
        "bf6b23f0ee894bf0b1fcc3abdcc4ddb4": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "50b751e759c44337afc1d7f38b7394d9": {
            "model_name": "OutputModel",
            "model_module": "@jupyter-widgets/output",
            "model_module_version": "1.0.0",
            "state": {
                "layout": "IPY_MODEL_bf6b23f0ee894bf0b1fcc3abdcc4ddb4",
                "outputs": [
                    {
                        "output_type": "stream",
                        "text": "<function my_rmse at 0x000002A4D5D496A8>\n",
                        "name": "stdout"
                    }
                ]
            }
        },
        "10bcae72f1de4a3281cd2826c3caa451": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "eb86b9eab4004709869214c3cba57da4": {
            "model_name": "VBoxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_dom_classes": [
                    "widget-interact"
                ],
                "children": [
                    "IPY_MODEL_72d5ce21b6264b008173a17ae9487eee",
                    "IPY_MODEL_7645babbabad406fba77bb424d008719"
                ],
                "layout": "IPY_MODEL_10bcae72f1de4a3281cd2826c3caa451"
            }
        },
        "30a6e96231a4406d8935ac265b6a3748": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "99c7e3c5d6c5440c8850485c38e584ac": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "72d5ce21b6264b008173a17ae9487eee": {
            "model_name": "DropdownModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_options_labels": [
                    "data_params",
                    "generators",
                    "loss_function",
                    "callbacks",
                    "compile",
                    "model.get_config",
                    "fit_params"
                ],
                "description": "model_params",
                "index": 4,
                "layout": "IPY_MODEL_30a6e96231a4406d8935ac265b6a3748",
                "style": "IPY_MODEL_99c7e3c5d6c5440c8850485c38e584ac"
            }
        },
        "46d9daec76e447ffb33e2f17afbe0a9f": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "7645babbabad406fba77bb424d008719": {
            "model_name": "OutputModel",
            "model_module": "@jupyter-widgets/output",
            "model_module_version": "1.0.0",
            "state": {
                "layout": "IPY_MODEL_46d9daec76e447ffb33e2f17afbe0a9f",
                "outputs": [
                    {
                        "output_type": "stream",
                        "text": "{'loss': <function my_rmse at 0x000002A4D5D496A8>,\n 'metrics': ['acc', <function my_rmse at 0x000002A4D5D496A8>],\n 'optimizer': <keras.optimizers.Nadam object at 0x000002A4D0CAA5F8>}\n",
                        "name": "stdout"
                    }
                ]
            }
        },
        "66efa9b77377426b88a04f2bdba1dc88": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "4f8966536a0d4db7a4b92c356877c3c8": {
            "model_name": "VBoxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_dom_classes": [
                    "widget-interact"
                ],
                "children": [
                    "IPY_MODEL_0ed3851aec4f4792a5a72c07a74772bd",
                    "IPY_MODEL_7415e2e683ce490eb194983dd817dece"
                ],
                "layout": "IPY_MODEL_66efa9b77377426b88a04f2bdba1dc88"
            }
        },
        "9fdc8b1b3dd641d98fcfeed522cc9528": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "127dbef50c3f4fa88657e8ec839e66df": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "0ed3851aec4f4792a5a72c07a74772bd": {
            "model_name": "DropdownModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_options_labels": [
                    "data_params",
                    "generators",
                    "loss_function",
                    "callbacks",
                    "compile",
                    "model.get_config",
                    "fit_params"
                ],
                "description": "model_params",
                "index": 0,
                "layout": "IPY_MODEL_9fdc8b1b3dd641d98fcfeed522cc9528",
                "style": "IPY_MODEL_127dbef50c3f4fa88657e8ec839e66df"
            }
        },
        "8ad9c9f637874ab59cad32ffb5fa9bc2": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "7415e2e683ce490eb194983dd817dece": {
            "model_name": "OutputModel",
            "model_module": "@jupyter-widgets/output",
            "model_module_version": "1.0.0",
            "state": {
                "layout": "IPY_MODEL_8ad9c9f637874ab59cad32ffb5fa9bc2",
                "outputs": [
                    {
                        "output_type": "stream",
                        "text": "{'batch_size': 1,\n 'days_for_x_window': 5,\n 'n_features': 1,\n 'n_input': 35,\n 'num_test_days': 45,\n 'num_train_days': 365,\n 'x_window': 35}\n",
                        "name": "stdout"
                    }
                ]
            }
        },
        "559ff7e3a24846a8966b3234e3f145e1": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "d6704f30ce84487b8ae5fe5a8e0ab09b": {
            "model_name": "VBoxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_dom_classes": [
                    "widget-interact"
                ],
                "children": [
                    "IPY_MODEL_1ca261d90f2f4dab9f4b9db326a076a2",
                    "IPY_MODEL_738ba01c9ecd4b8081727e79c2148f0e"
                ],
                "layout": "IPY_MODEL_559ff7e3a24846a8966b3234e3f145e1"
            }
        },
        "1c44ab2ddfa8482aae1ddb7320db0976": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "0544f9a3943242ea8da720ac8c8ab2fe": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "1ca261d90f2f4dab9f4b9db326a076a2": {
            "model_name": "DropdownModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_options_labels": [
                    "data_params",
                    "generators",
                    "loss_function",
                    "callbacks",
                    "compile",
                    "model.get_config",
                    "fit_params"
                ],
                "description": "model_params",
                "index": 0,
                "layout": "IPY_MODEL_1c44ab2ddfa8482aae1ddb7320db0976",
                "style": "IPY_MODEL_0544f9a3943242ea8da720ac8c8ab2fe"
            }
        },
        "5c94ccc878004bbf8c972f7e3f630b97": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "738ba01c9ecd4b8081727e79c2148f0e": {
            "model_name": "OutputModel",
            "model_module": "@jupyter-widgets/output",
            "model_module_version": "1.0.0",
            "state": {
                "layout": "IPY_MODEL_5c94ccc878004bbf8c972f7e3f630b97",
                "outputs": [
                    {
                        "output_type": "stream",
                        "text": "dict_keys(['num_test_days', 'num_train_days', 'days_for_x_window', 'x_window', 'n_input', 'n_features', 'batch_size'])\n{'batch_size': 1,\n 'days_for_x_window': 5,\n 'n_features': 1,\n 'n_input': 35,\n 'num_test_days': 45,\n 'num_train_days': 365,\n 'x_window': 35}\n",
                        "name": "stdout"
                    }
                ]
            }
        },
        "8388b9ea3c254e17840d5968ccf3e32a": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "d363ebd396614d0ead61920e23974b8c": {
            "model_name": "VBoxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_dom_classes": [
                    "widget-interact"
                ],
                "children": [
                    "IPY_MODEL_9ca8447457344a0a8c9ab133cc55b141",
                    "IPY_MODEL_9986457a20f942aebf73571d44ced2d9"
                ],
                "layout": "IPY_MODEL_8388b9ea3c254e17840d5968ccf3e32a"
            }
        },
        "73e0f8080bd6483184d95f6cdbfb2fca": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "ce2d09706f9e40f8829cecc230425f8a": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "9ca8447457344a0a8c9ab133cc55b141": {
            "model_name": "DropdownModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_options_labels": [
                    "data_params",
                    "generators",
                    "loss_function",
                    "callbacks",
                    "compile",
                    "model.get_config",
                    "fit_params"
                ],
                "description": "model_params",
                "index": 0,
                "layout": "IPY_MODEL_73e0f8080bd6483184d95f6cdbfb2fca",
                "style": "IPY_MODEL_ce2d09706f9e40f8829cecc230425f8a"
            }
        },
        "2d8d0bdf01e54b3fa518d60c445856c8": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "9986457a20f942aebf73571d44ced2d9": {
            "model_name": "OutputModel",
            "model_module": "@jupyter-widgets/output",
            "model_module_version": "1.0.0",
            "state": {
                "layout": "IPY_MODEL_2d8d0bdf01e54b3fa518d60c445856c8",
                "outputs": [
                    {
                        "output_type": "stream",
                        "text": "{'batch_size': 1,\n 'days_for_x_window': 5,\n 'n_features': 1,\n 'n_input': 35,\n 'num_test_days': 45,\n 'num_train_days': 365,\n 'x_window': 35}\n",
                        "name": "stdout"
                    }
                ]
            }
        },
        "bdc2d2c9d6d4439db7837d6c8c042ca2": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "a2a1613fcc90452b9b6deba53d3bc0ae": {
            "model_name": "VBoxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_dom_classes": [
                    "widget-interact"
                ],
                "children": [
                    "IPY_MODEL_f493b33012d74d2780a35febb83739fd",
                    "IPY_MODEL_42e7cb40c58b419c8da907d6035b16a4"
                ],
                "layout": "IPY_MODEL_bdc2d2c9d6d4439db7837d6c8c042ca2"
            }
        },
        "7e8c791c59ae4bb3a182526182ec230a": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "26a4b97a6ee44c13840ceab00f20a02f": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "f493b33012d74d2780a35febb83739fd": {
            "model_name": "DropdownModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_options_labels": [
                    "data_params",
                    "generators",
                    "loss_function",
                    "callbacks",
                    "compile",
                    "model.get_config",
                    "fit_params"
                ],
                "description": "model_params",
                "index": 0,
                "layout": "IPY_MODEL_7e8c791c59ae4bb3a182526182ec230a",
                "style": "IPY_MODEL_26a4b97a6ee44c13840ceab00f20a02f"
            }
        },
        "871ca988ac2e48be9908ed861b94d119": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "42e7cb40c58b419c8da907d6035b16a4": {
            "model_name": "OutputModel",
            "model_module": "@jupyter-widgets/output",
            "model_module_version": "1.0.0",
            "state": {
                "layout": "IPY_MODEL_871ca988ac2e48be9908ed861b94d119",
                "outputs": [
                    {
                        "output_type": "stream",
                        "text": "{'batch_size': 1,\n 'days_for_x_window': 5,\n 'n_features': 1,\n 'n_input': 35,\n 'num_test_days': 45,\n 'num_train_days': 365,\n 'x_window': 35}\n",
                        "name": "stdout"
                    }
                ]
            }
        },
        "00fd260deb424e3798a7a5ab11ba529c": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "1ed37289b8294fd9896aeecbd3f1e93a": {
            "model_name": "VBoxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_dom_classes": [
                    "widget-interact"
                ],
                "children": [
                    "IPY_MODEL_cccec15372c8458ba4d270478a273977",
                    "IPY_MODEL_5a16ade7e1a64efda9502c11daad36a6"
                ],
                "layout": "IPY_MODEL_00fd260deb424e3798a7a5ab11ba529c"
            }
        },
        "c80eb6f47f664ed59d367cfd57dd8ab5": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "3e040c3090da4871be398cd9a7ae1fa4": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "cccec15372c8458ba4d270478a273977": {
            "model_name": "DropdownModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_options_labels": [
                    "data_params",
                    "generators",
                    "loss_function",
                    "callbacks",
                    "compile",
                    "model.get_config",
                    "fit_params"
                ],
                "description": "model_params",
                "index": 0,
                "layout": "IPY_MODEL_c80eb6f47f664ed59d367cfd57dd8ab5",
                "style": "IPY_MODEL_3e040c3090da4871be398cd9a7ae1fa4"
            }
        },
        "086ef95c192f4b168ff86c137d41a82a": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "5a16ade7e1a64efda9502c11daad36a6": {
            "model_name": "OutputModel",
            "model_module": "@jupyter-widgets/output",
            "model_module_version": "1.0.0",
            "state": {
                "layout": "IPY_MODEL_086ef95c192f4b168ff86c137d41a82a",
                "outputs": [
                    {
                        "output_type": "stream",
                        "text": "{'batch_size': 1,\n 'days_for_x_window': 5,\n 'n_features': 1,\n 'n_input': 35,\n 'num_test_days': 45,\n 'num_train_days': 365,\n 'x_window': 35}\n",
                        "name": "stdout"
                    }
                ]
            }
        },
        "1b90610429214bc4b0049b0297f922d2": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "6d61e92bd6ca40ecb89e73dc9afe4c6a": {
            "model_name": "VBoxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_dom_classes": [
                    "widget-interact"
                ],
                "children": [
                    "IPY_MODEL_e3723df2fc284d0eb51898143d40e0e9",
                    "IPY_MODEL_415cefba12d2465d8c92965308f69e4f"
                ],
                "layout": "IPY_MODEL_1b90610429214bc4b0049b0297f922d2"
            }
        },
        "69dab462670244ef909d7f55e69eff63": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "82a08d795dbc41738f783c01e53f7485": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "e3723df2fc284d0eb51898143d40e0e9": {
            "model_name": "DropdownModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_options_labels": [
                    "data_params",
                    "generators",
                    "loss_function",
                    "callbacks",
                    "compile",
                    "model.get_config",
                    "fit_params"
                ],
                "description": "model_params",
                "index": 0,
                "layout": "IPY_MODEL_69dab462670244ef909d7f55e69eff63",
                "style": "IPY_MODEL_82a08d795dbc41738f783c01e53f7485"
            }
        },
        "a7dc727b35d14057bf9add0f671a2e03": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "415cefba12d2465d8c92965308f69e4f": {
            "model_name": "OutputModel",
            "model_module": "@jupyter-widgets/output",
            "model_module_version": "1.0.0",
            "state": {
                "layout": "IPY_MODEL_a7dc727b35d14057bf9add0f671a2e03",
                "outputs": [
                    {
                        "output_type": "stream",
                        "text": "{'batch_size': 1,\n 'days_for_x_window': 5,\n 'n_features': 1,\n 'n_input': 35,\n 'num_test_days': 45,\n 'num_train_days': 365,\n 'x_window': 35}\n",
                        "name": "stdout"
                    }
                ]
            }
        },
        "f60a1d5454f746c6b102b451ce64ae71": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "b02910812a914451911a562b781d77b9": {
            "model_name": "VBoxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_dom_classes": [
                    "widget-interact"
                ],
                "children": [
                    "IPY_MODEL_2a850d7ca9574207b2e590e49334d3f8",
                    "IPY_MODEL_4ffcf3cb4aea4d26b912818c5d87c764"
                ],
                "layout": "IPY_MODEL_f60a1d5454f746c6b102b451ce64ae71"
            }
        },
        "fca759305d404eda9af52488f075949f": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "ee30d0256346451b9ceede321bd11fd5": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "2a850d7ca9574207b2e590e49334d3f8": {
            "model_name": "DropdownModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_options_labels": [
                    "data_params",
                    "generators",
                    "loss_function",
                    "callbacks",
                    "compile",
                    "model.get_config",
                    "fit_params"
                ],
                "description": "model_params",
                "index": 0,
                "layout": "IPY_MODEL_fca759305d404eda9af52488f075949f",
                "style": "IPY_MODEL_ee30d0256346451b9ceede321bd11fd5"
            }
        },
        "6168ae99706a4e528ea2ed01576d0254": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "4ffcf3cb4aea4d26b912818c5d87c764": {
            "model_name": "OutputModel",
            "model_module": "@jupyter-widgets/output",
            "model_module_version": "1.0.0",
            "state": {
                "layout": "IPY_MODEL_6168ae99706a4e528ea2ed01576d0254",
                "outputs": [
                    {
                        "output_type": "stream",
                        "text": "{'batch_size': 1,\n 'days_for_x_window': 5,\n 'n_features': 1,\n 'n_input': 35,\n 'num_test_days': 45,\n 'num_train_days': 365,\n 'x_window': 35}\n",
                        "name": "stdout"
                    }
                ]
            }
        },
        "86ec000571434b7c95254076c0925461": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "c877e376e8a7485ab0de9ab6ba33d9d3": {
            "model_name": "VBoxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_dom_classes": [
                    "widget-interact"
                ],
                "children": [
                    "IPY_MODEL_c0c162f78a064358881a3719989681c2",
                    "IPY_MODEL_dd13595088724fbca3e1691958780253"
                ],
                "layout": "IPY_MODEL_86ec000571434b7c95254076c0925461"
            }
        },
        "4b3671300b5043e5bfeb0bfe5e4a9add": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "487529d265f7475785d19d5507e55437": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "c0c162f78a064358881a3719989681c2": {
            "model_name": "DropdownModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_options_labels": [
                    "data_params",
                    "generators",
                    "loss_function",
                    "callbacks",
                    "compile",
                    "model.get_config",
                    "fit_params"
                ],
                "description": "model_params",
                "index": 0,
                "layout": "IPY_MODEL_4b3671300b5043e5bfeb0bfe5e4a9add",
                "style": "IPY_MODEL_487529d265f7475785d19d5507e55437"
            }
        },
        "5f64ddb7328c46bbb2d9c18ed8951b94": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "dd13595088724fbca3e1691958780253": {
            "model_name": "OutputModel",
            "model_module": "@jupyter-widgets/output",
            "model_module_version": "1.0.0",
            "state": {
                "layout": "IPY_MODEL_5f64ddb7328c46bbb2d9c18ed8951b94",
                "outputs": [
                    {
                        "output_type": "stream",
                        "text": "{'batch_size': 1,\n 'days_for_x_window': 5,\n 'n_features': 1,\n 'n_input': 35,\n 'num_test_days': 45,\n 'num_train_days': 365,\n 'x_window': 35}\n",
                        "name": "stdout"
                    }
                ]
            }
        },
        "4b0a8c9181674cfa985c92534b140991": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "f028a2a509dd45808b9f3fe08b55b550": {
            "model_name": "VBoxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_dom_classes": [
                    "widget-interact"
                ],
                "children": [
                    "IPY_MODEL_49a2d38f6c594769b6894d6cc169a0c3",
                    "IPY_MODEL_4b4b29eaca2f4a54a39bf683c6e8fba8"
                ],
                "layout": "IPY_MODEL_4b0a8c9181674cfa985c92534b140991"
            }
        },
        "f01fb455d3c14e47b44188b3e7c31230": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "4c270d2613ff4751a9e7801436b636fb": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "49a2d38f6c594769b6894d6cc169a0c3": {
            "model_name": "DropdownModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_options_labels": [
                    "data_params",
                    "generators",
                    "loss_function",
                    "callbacks",
                    "compile",
                    "model.get_config",
                    "fit_params"
                ],
                "description": "model_params",
                "index": 0,
                "layout": "IPY_MODEL_f01fb455d3c14e47b44188b3e7c31230",
                "style": "IPY_MODEL_4c270d2613ff4751a9e7801436b636fb"
            }
        },
        "45cd39ef333e47b7a56e8353fd1d5ba0": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "4b4b29eaca2f4a54a39bf683c6e8fba8": {
            "model_name": "OutputModel",
            "model_module": "@jupyter-widgets/output",
            "model_module_version": "1.0.0",
            "state": {
                "layout": "IPY_MODEL_45cd39ef333e47b7a56e8353fd1d5ba0",
                "outputs": [
                    {
                        "output_type": "stream",
                        "text": "{'batch_size': 1,\n 'days_for_x_window': 5,\n 'n_features': 1,\n 'n_input': 35,\n 'num_test_days': 45,\n 'num_train_days': 365,\n 'x_window': 35}\n",
                        "name": "stdout"
                    }
                ]
            }
        },
        "5f58cf40e85e4cf48d8b6a4157e63808": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "c173242acd564857aae66d350f9b32a2": {
            "model_name": "VBoxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_dom_classes": [
                    "widget-interact"
                ],
                "children": [
                    "IPY_MODEL_3a20eac1ac904b909279f9fff9dce833",
                    "IPY_MODEL_5cb54d65fd8b44cd9877468b2f55969e"
                ],
                "layout": "IPY_MODEL_5f58cf40e85e4cf48d8b6a4157e63808"
            }
        },
        "1b375b12ba2f49c19d0ea8d159ffac54": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "246483041b634c199f6396f8a9583188": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "3a20eac1ac904b909279f9fff9dce833": {
            "model_name": "DropdownModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_options_labels": [
                    "data_params",
                    "generators",
                    "loss_function",
                    "callbacks",
                    "compile",
                    "model.get_config",
                    "fit_params"
                ],
                "description": "model_params",
                "index": 0,
                "layout": "IPY_MODEL_1b375b12ba2f49c19d0ea8d159ffac54",
                "style": "IPY_MODEL_246483041b634c199f6396f8a9583188"
            }
        },
        "ce795a3bec204c55ac50540bb1ae59c0": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "5cb54d65fd8b44cd9877468b2f55969e": {
            "model_name": "OutputModel",
            "model_module": "@jupyter-widgets/output",
            "model_module_version": "1.0.0",
            "state": {
                "layout": "IPY_MODEL_ce795a3bec204c55ac50540bb1ae59c0",
                "outputs": [
                    {
                        "output_type": "stream",
                        "text": "{'batch_size': 1,\n 'days_for_x_window': 5,\n 'n_features': 1,\n 'n_input': 35,\n 'num_test_days': 45,\n 'num_train_days': 365,\n 'x_window': 35}\n",
                        "name": "stdout"
                    }
                ]
            }
        },
        "fe84edc51f774f5bb608fe88a7e92d91": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "868a8959a0414aa3a65e06a65c207ae5": {
            "model_name": "VBoxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_dom_classes": [
                    "widget-interact"
                ],
                "children": [
                    "IPY_MODEL_155d57cd5663494083ef2b028f654c17",
                    "IPY_MODEL_929d3a6b062a4bb08342c5d34d7e33db"
                ],
                "layout": "IPY_MODEL_fe84edc51f774f5bb608fe88a7e92d91"
            }
        },
        "3ac1ad7137d147d4b7e1e0b9008a727c": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "152b717997984d40ab3923725b1cef5c": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "155d57cd5663494083ef2b028f654c17": {
            "model_name": "DropdownModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_options_labels": [
                    "data_params",
                    "generators",
                    "loss_function",
                    "callbacks",
                    "compile",
                    "model.get_config",
                    "fit_params"
                ],
                "description": "model_params",
                "index": 0,
                "layout": "IPY_MODEL_3ac1ad7137d147d4b7e1e0b9008a727c",
                "style": "IPY_MODEL_152b717997984d40ab3923725b1cef5c"
            }
        },
        "2c1c764df1ca42fdb01557764c08f0cf": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "929d3a6b062a4bb08342c5d34d7e33db": {
            "model_name": "OutputModel",
            "model_module": "@jupyter-widgets/output",
            "model_module_version": "1.0.0",
            "state": {
                "layout": "IPY_MODEL_2c1c764df1ca42fdb01557764c08f0cf",
                "outputs": [
                    {
                        "output_type": "stream",
                        "text": "{'batch_size': 1,\n 'days_for_x_window': 5,\n 'n_features': 1,\n 'n_input': 35,\n 'num_test_days': 45,\n 'num_train_days': 365,\n 'x_window': 35}\n",
                        "name": "stdout"
                    }
                ]
            }
        },
        "7befece8451e40bbb4f13688f08f1d05": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "5da0a5e29e774f7e9868b46606cc7f2e": {
            "model_name": "VBoxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_dom_classes": [
                    "widget-interact"
                ],
                "children": [
                    "IPY_MODEL_eebc82b303804c129dc8d09af5b580e8",
                    "IPY_MODEL_1895e89a2f9c41979d87ba472977b72d"
                ],
                "layout": "IPY_MODEL_7befece8451e40bbb4f13688f08f1d05"
            }
        },
        "f39488cd1af84ef59fed98656d88488e": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "6a23eb6285b24abdbc4181c9db110ebf": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "eebc82b303804c129dc8d09af5b580e8": {
            "model_name": "DropdownModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_options_labels": [
                    "data_params",
                    "generators",
                    "loss_function",
                    "callbacks",
                    "compile",
                    "model.get_config",
                    "fit_params"
                ],
                "description": "model_params",
                "index": 0,
                "layout": "IPY_MODEL_f39488cd1af84ef59fed98656d88488e",
                "style": "IPY_MODEL_6a23eb6285b24abdbc4181c9db110ebf"
            }
        },
        "c52089b927984d1e8e7e1a05ffe19b98": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "1895e89a2f9c41979d87ba472977b72d": {
            "model_name": "OutputModel",
            "model_module": "@jupyter-widgets/output",
            "model_module_version": "1.0.0",
            "state": {
                "layout": "IPY_MODEL_c52089b927984d1e8e7e1a05ffe19b98",
                "outputs": [
                    {
                        "output_type": "stream",
                        "text": "---------\n{'batch_size': 1,\n 'days_for_x_window': 5,\n 'n_features': 1,\n 'n_input': 35,\n 'num_test_days': 45,\n 'num_train_days': 365,\n 'x_window': 35}\n",
                        "name": "stdout"
                    }
                ]
            }
        },
        "4f07e49e5df943edaff291349cc5027e": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "3ed4269d434f458eb8522a93e7818cc9": {
            "model_name": "VBoxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_dom_classes": [
                    "widget-interact"
                ],
                "children": [
                    "IPY_MODEL_da912b571baf4e15aeba532c4bce7570",
                    "IPY_MODEL_8f4f43e99c5e4c0ab07c645c36314998"
                ],
                "layout": "IPY_MODEL_4f07e49e5df943edaff291349cc5027e"
            }
        },
        "9c6f783093114e06870770b67222aeed": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "cdace57d5d0e4e14a9ce185e1b561e56": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "da912b571baf4e15aeba532c4bce7570": {
            "model_name": "DropdownModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_options_labels": [
                    "data_params",
                    "generators",
                    "loss_function",
                    "callbacks",
                    "compile",
                    "model.get_config",
                    "fit_params"
                ],
                "description": "model_params",
                "index": 5,
                "layout": "IPY_MODEL_9c6f783093114e06870770b67222aeed",
                "style": "IPY_MODEL_cdace57d5d0e4e14a9ce185e1b561e56"
            }
        },
        "8c074ce340084cb4abe748569a8c314a": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "8f4f43e99c5e4c0ab07c645c36314998": {
            "model_name": "OutputModel",
            "model_module": "@jupyter-widgets/output",
            "model_module_version": "1.0.0",
            "state": {
                "layout": "IPY_MODEL_8c074ce340084cb4abe748569a8c314a",
                "outputs": [
                    {
                        "output_type": "stream",
                        "text": "---\n{'layers': [{'class_name': 'LSTM',\n             'config': {'activation': 'tanh',\n                        'activity_regularizer': None,\n                        'batch_input_shape': (None, 35, 1),\n                        'bias_constraint': None,\n                        'bias_initializer': {'class_name': 'Zeros',\n                                             'config': {}},\n                        'bias_regularizer': None,\n                        'dropout': 0.0,\n                        'dtype': 'float32',\n                        'go_backwards': False,\n                        'implementation': 1,\n                        'kernel_constraint': None,\n                        'kernel_initializer': {'class_name': 'VarianceScaling',\n                                               'config': {'distribution': 'uniform',\n                                                          'mode': 'fan_avg',\n                                                          'scale': 1.0,\n                                                          'seed': None}},\n                        'kernel_regularizer': None,\n                        'name': 'lstm_14',\n                        'recurrent_activation': 'hard_sigmoid',\n                        'recurrent_constraint': None,\n                        'recurrent_dropout': 0.0,\n                        'recurrent_initializer': {'class_name': 'Orthogonal',\n                                                  'config': {'gain': 1.0,\n                                                             'seed': None}},\n                        'recurrent_regularizer': None,\n                        'return_sequences': True,\n                        'return_state': False,\n                        'stateful': False,\n                        'trainable': True,\n                        'unit_forget_bias': True,\n                        'units': 50,\n                        'unroll': False,\n                        'use_bias': True}},\n            {'class_name': 'LSTM',\n             'config': {'activation': 'relu',\n                        'activity_regularizer': None,\n                        'bias_constraint': None,\n                        'bias_initializer': {'class_name': 'Zeros',\n                                             'config': {}},\n                        'bias_regularizer': None,\n                        'dropout': 0.0,\n                        'go_backwards': False,\n                        'implementation': 1,\n                        'kernel_constraint': None,\n                        'kernel_initializer': {'class_name': 'VarianceScaling',\n                                               'config': {'distribution': 'uniform',\n                                                          'mode': 'fan_avg',\n                                                          'scale': 1.0,\n                                                          'seed': None}},\n                        'kernel_regularizer': None,\n                        'name': 'lstm_15',\n                        'recurrent_activation': 'hard_sigmoid',\n                        'recurrent_constraint': None,\n                        'recurrent_dropout': 0.0,\n                        'recurrent_initializer': {'class_name': 'Orthogonal',\n                                                  'config': {'gain': 1.0,\n                                                             'seed': None}},\n                        'recurrent_regularizer': None,\n                        'return_sequences': False,\n                        'return_state': False,\n                        'stateful': False,\n                        'trainable': True,\n                        'unit_forget_bias': True,\n                        'units': 50,\n                        'unroll': False,\n                        'use_bias': True}},\n            {'class_name': 'Dense',\n             'config': {'activation': 'linear',\n                        'activity_regularizer': None,\n                        'bias_constraint': None,\n                        'bias_initializer': {'class_name': 'Zeros',\n                                             'config': {}},\n                        'bias_regularizer': None,\n                        'kernel_constraint': None,\n                        'kernel_initializer': {'class_name': 'VarianceScaling',\n                                               'config': {'distribution': 'uniform',\n                                                          'mode': 'fan_avg',\n                                                          'scale': 1.0,\n                                                          'seed': None}},\n                        'kernel_regularizer': None,\n                        'name': 'dense_4',\n                        'trainable': True,\n                        'units': 1,\n                        'use_bias': True}}],\n 'name': 'sequential_11'}\n",
                        "name": "stdout"
                    }
                ]
            }
        },
        "dc81ecec32164eb58089ba06a2fc6041": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "2ba67031b5a849f4b03fb35acacbfedc": {
            "model_name": "VBoxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_dom_classes": [
                    "widget-interact"
                ],
                "children": [
                    "IPY_MODEL_c0fc946cbb07441b807c5981d8b66056",
                    "IPY_MODEL_b51e7bf3b4c7491b883ce04760345df9"
                ],
                "layout": "IPY_MODEL_dc81ecec32164eb58089ba06a2fc6041"
            }
        },
        "29e0a2b63c704b5aa308b4afc784e584": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "e734a0c8637440f19b2eee1bbd260701": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "c0fc946cbb07441b807c5981d8b66056": {
            "model_name": "DropdownModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_options_labels": [
                    "data_params",
                    "generators",
                    "loss_function",
                    "callbacks",
                    "compile",
                    "model.get_config",
                    "fit_params"
                ],
                "description": "model_params",
                "index": 4,
                "layout": "IPY_MODEL_29e0a2b63c704b5aa308b4afc784e584",
                "style": "IPY_MODEL_e734a0c8637440f19b2eee1bbd260701"
            }
        },
        "24821be5abbf4c19b99b926d0943a2e6": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "b51e7bf3b4c7491b883ce04760345df9": {
            "model_name": "OutputModel",
            "model_module": "@jupyter-widgets/output",
            "model_module_version": "1.0.0",
            "state": {
                "layout": "IPY_MODEL_24821be5abbf4c19b99b926d0943a2e6",
                "outputs": [
                    {
                        "output_type": "stream",
                        "text": "---\n{'loss': <function my_rmse at 0x000002A4D5D496A8>,\n 'metrics': ['acc', <function my_rmse at 0x000002A4D5D496A8>],\n 'optimizer': <keras.optimizers.Nadam object at 0x000002A4D0CAA5F8>}\n",
                        "name": "stdout"
                    }
                ]
            }
        },
        "ade77f1fa1ef494ea1e901db508164df": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "2a96096583944b108e10e6aeeccc9b07": {
            "model_name": "VBoxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_dom_classes": [
                    "widget-interact"
                ],
                "children": [
                    "IPY_MODEL_ce352bbb8ad54c5bba179799028d16b8",
                    "IPY_MODEL_c582f155d04b4ef19963a12ff7c7d03e"
                ],
                "layout": "IPY_MODEL_ade77f1fa1ef494ea1e901db508164df"
            }
        },
        "d451e5cbb8cc475e8ffdf4900d02ec9b": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "29ee662467dc491c9e1efd23a2bd8b7b": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "ce352bbb8ad54c5bba179799028d16b8": {
            "model_name": "DropdownModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_options_labels": [
                    "data_params",
                    "custom_loss_function",
                    "callback_params"
                ],
                "description": "model_params",
                "index": 0,
                "layout": "IPY_MODEL_d451e5cbb8cc475e8ffdf4900d02ec9b",
                "style": "IPY_MODEL_29ee662467dc491c9e1efd23a2bd8b7b"
            }
        },
        "0e721b325f004d60a6ab8e48ae865043": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "c582f155d04b4ef19963a12ff7c7d03e": {
            "model_name": "OutputModel",
            "model_module": "@jupyter-widgets/output",
            "model_module_version": "1.0.0",
            "state": {
                "layout": "IPY_MODEL_0e721b325f004d60a6ab8e48ae865043",
                "outputs": [
                    {
                        "output_type": "stream",
                        "text": "---\n{'batch_size': 1,\n 'days_for_x_window': 5,\n 'n_features': 1,\n 'n_input': 35,\n 'num_test_days': 45,\n 'num_train_days': 365,\n 'x_window': 35}\n",
                        "name": "stdout"
                    }
                ]
            }
        },
        "8f33acac8f8f48c39d9d4c40545febd3": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "3bc33ab88a04426fb4b3f0f8b7d5f64b": {
            "model_name": "VBoxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_dom_classes": [
                    "widget-interact"
                ],
                "children": [
                    "IPY_MODEL_f427084fd40f49bb826777b0c4bb8ad8",
                    "IPY_MODEL_70abd84056484cec9c3421aac7d0687e"
                ],
                "layout": "IPY_MODEL_8f33acac8f8f48c39d9d4c40545febd3"
            }
        },
        "5cff72c8710547118a68331a800ce873": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "e6e8aa009c6d42e1a0b2040bad092399": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "f427084fd40f49bb826777b0c4bb8ad8": {
            "model_name": "DropdownModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_options_labels": [
                    "data_params",
                    "custom_loss_function",
                    "callback_params",
                    "compile",
                    "model.get_config",
                    "fit_params"
                ],
                "description": "model_params",
                "index": 0,
                "layout": "IPY_MODEL_5cff72c8710547118a68331a800ce873",
                "style": "IPY_MODEL_e6e8aa009c6d42e1a0b2040bad092399"
            }
        },
        "65e34263408a4edd91c93827ab5e8432": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "70abd84056484cec9c3421aac7d0687e": {
            "model_name": "OutputModel",
            "model_module": "@jupyter-widgets/output",
            "model_module_version": "1.0.0",
            "state": {
                "layout": "IPY_MODEL_65e34263408a4edd91c93827ab5e8432",
                "outputs": [
                    {
                        "output_type": "stream",
                        "text": "---\n{'batch_size': 1,\n 'days_for_x_window': 5,\n 'n_features': 1,\n 'n_input': 35,\n 'num_test_days': 45,\n 'num_train_days': 365,\n 'x_window': 35}\n",
                        "name": "stdout"
                    }
                ]
            }
        },
        "a6342ce05ca5400c8797be864bbd7f02": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "a5c950e452a74f068c4344e1a287bd27": {
            "model_name": "VBoxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_dom_classes": [
                    "widget-interact"
                ],
                "children": [
                    "IPY_MODEL_7c9f009653a649adbe8f0c0f88e72950",
                    "IPY_MODEL_c673407acd294ed6b71c81eee32f775f"
                ],
                "layout": "IPY_MODEL_a6342ce05ca5400c8797be864bbd7f02"
            }
        },
        "5e44a2ef120940709a600e973e11da6c": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "75814a8e04bc42d09f0eea84f43592e4": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "7c9f009653a649adbe8f0c0f88e72950": {
            "model_name": "DropdownModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_options_labels": [
                    "data_params",
                    "custom_loss_function",
                    "callback_params",
                    "compile",
                    "model.get_config",
                    "fit_params"
                ],
                "description": "model_params",
                "index": 0,
                "layout": "IPY_MODEL_5e44a2ef120940709a600e973e11da6c",
                "style": "IPY_MODEL_75814a8e04bc42d09f0eea84f43592e4"
            }
        },
        "00934a0eb9694504b7364029358dae6f": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "c673407acd294ed6b71c81eee32f775f": {
            "model_name": "OutputModel",
            "model_module": "@jupyter-widgets/output",
            "model_module_version": "1.0.0",
            "state": {
                "layout": "IPY_MODEL_00934a0eb9694504b7364029358dae6f",
                "outputs": [
                    {
                        "output_type": "stream",
                        "text": "---\n{'batch_size': 1,\n 'days_for_x_window': 5,\n 'n_features': 1,\n 'n_input': 35,\n 'num_test_days': 45,\n 'num_train_days': 365,\n 'x_window': 35}\n",
                        "name": "stdout"
                    }
                ]
            }
        },
        "78f298d7b93b433cbe824485410c2f55": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "c2482a2295594ebea75cb359a3bf4025": {
            "model_name": "VBoxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_dom_classes": [
                    "widget-interact"
                ],
                "children": [
                    "IPY_MODEL_cf922daa850141698681bb6602d732dd",
                    "IPY_MODEL_ccafcfd91faf45fe841232a882c060fc"
                ],
                "layout": "IPY_MODEL_78f298d7b93b433cbe824485410c2f55"
            }
        },
        "1ee54f5ab6c94f0d9378228a1f0dd4ea": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "4232c6ae51434e1ea1c308f6044ab0d4": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "cf922daa850141698681bb6602d732dd": {
            "model_name": "DropdownModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_options_labels": [
                    "data_params",
                    "custom_loss_function",
                    "callback_params"
                ],
                "description": "model_params",
                "index": 0,
                "layout": "IPY_MODEL_1ee54f5ab6c94f0d9378228a1f0dd4ea",
                "style": "IPY_MODEL_4232c6ae51434e1ea1c308f6044ab0d4"
            }
        },
        "0599b75b7d824c4d880ef705c0e3f42a": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "ccafcfd91faf45fe841232a882c060fc": {
            "model_name": "OutputModel",
            "model_module": "@jupyter-widgets/output",
            "model_module_version": "1.0.0",
            "state": {
                "layout": "IPY_MODEL_0599b75b7d824c4d880ef705c0e3f42a",
                "outputs": [
                    {
                        "output_type": "stream",
                        "text": "---\n{'batch_size': 1,\n 'days_for_x_window': 5,\n 'n_features': 1,\n 'n_input': 35,\n 'num_test_days': 45,\n 'num_train_days': 365,\n 'x_window': 35}\n",
                        "name": "stdout"
                    }
                ]
            }
        },
        "290fc212fc2e4185a56d873009e54883": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "6a9381adad3c41d897311934e342d790": {
            "model_name": "VBoxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_dom_classes": [
                    "widget-interact"
                ],
                "children": [
                    "IPY_MODEL_f584cdca504c44bbaf875cacf3d771b7",
                    "IPY_MODEL_318b4fbc99ef4bc29c2aba1bac0d9654"
                ],
                "layout": "IPY_MODEL_290fc212fc2e4185a56d873009e54883"
            }
        },
        "7ac18e777ca84ec5b66052eeb317d97f": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "d771f50413b7490099b163293db3705b": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "f584cdca504c44bbaf875cacf3d771b7": {
            "model_name": "DropdownModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_options_labels": [
                    "data_params",
                    "custom_loss_function",
                    "callback_params"
                ],
                "description": "model_params",
                "index": 1,
                "layout": "IPY_MODEL_7ac18e777ca84ec5b66052eeb317d97f",
                "style": "IPY_MODEL_d771f50413b7490099b163293db3705b"
            }
        },
        "3efa6ad785ef45ac90932f2d43ad963d": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "318b4fbc99ef4bc29c2aba1bac0d9654": {
            "model_name": "OutputModel",
            "model_module": "@jupyter-widgets/output",
            "model_module_version": "1.0.0",
            "state": {
                "layout": "IPY_MODEL_3efa6ad785ef45ac90932f2d43ad963d",
                "outputs": [
                    {
                        "output_type": "stream",
                        "text": "---\n{'my_rmse': <function my_rmse at 0x0000024AF307A400>}\n",
                        "name": "stdout"
                    }
                ]
            }
        },
        "f868e72518a14c05b9a36a9e54f7051d": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "26829301a583493380d74ee764884bd7": {
            "model_name": "VBoxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_dom_classes": [
                    "widget-interact"
                ],
                "children": [
                    "IPY_MODEL_1c1d77b5b49e4dbebb0aa223eb8b7af3",
                    "IPY_MODEL_f95e24395c3e42959202a4ba5bb6319a"
                ],
                "layout": "IPY_MODEL_f868e72518a14c05b9a36a9e54f7051d"
            }
        },
        "59f437120cdb45859800188cba067f52": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "1f633f3370054b489c1333be220f37c3": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "1c1d77b5b49e4dbebb0aa223eb8b7af3": {
            "model_name": "DropdownModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_options_labels": [
                    "data_params",
                    "custom_loss_function",
                    "callback_params"
                ],
                "description": "model_params",
                "index": 1,
                "layout": "IPY_MODEL_59f437120cdb45859800188cba067f52",
                "style": "IPY_MODEL_1f633f3370054b489c1333be220f37c3"
            }
        },
        "89fe751f01b3456b91fc8cb3d2292646": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "f95e24395c3e42959202a4ba5bb6319a": {
            "model_name": "OutputModel",
            "model_module": "@jupyter-widgets/output",
            "model_module_version": "1.0.0",
            "state": {
                "layout": "IPY_MODEL_89fe751f01b3456b91fc8cb3d2292646",
                "outputs": [
                    {
                        "output_type": "stream",
                        "text": "{'my_rmse': <function my_rmse at 0x0000024AF307A400>}\n",
                        "name": "stdout"
                    }
                ]
            }
        },
        "0da16039a6fb4b1389681221609abe9c": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "6106d94d43bb482e8e0d29b17a03281e": {
            "model_name": "VBoxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_dom_classes": [
                    "widget-interact"
                ],
                "children": [
                    "IPY_MODEL_f98196a8e54c4ec383fbc92601e75d12",
                    "IPY_MODEL_589d001789f34270adf9028db516a5a4"
                ],
                "layout": "IPY_MODEL_0da16039a6fb4b1389681221609abe9c"
            }
        },
        "2e67f4ecf1854ebeb9edd5e78fa008fd": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "1400164613bb45f4a659734f27142837": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "f98196a8e54c4ec383fbc92601e75d12": {
            "model_name": "DropdownModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_options_labels": [
                    "data_params",
                    "custom_loss_function",
                    "callback_params",
                    "compile"
                ],
                "description": "model_params",
                "index": 2,
                "layout": "IPY_MODEL_2e67f4ecf1854ebeb9edd5e78fa008fd",
                "style": "IPY_MODEL_1400164613bb45f4a659734f27142837"
            }
        },
        "17b96c564632483e94291744c0d30ba5": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "589d001789f34270adf9028db516a5a4": {
            "model_name": "OutputModel",
            "model_module": "@jupyter-widgets/output",
            "model_module_version": "1.0.0",
            "state": {
                "layout": "IPY_MODEL_17b96c564632483e94291744c0d30ba5",
                "outputs": [
                    {
                        "output_type": "stream",
                        "text": "{'EarlyStopping': {'min_delta': 0.001,\n                   'mode': 'min',\n                   'monitor': <function my_rmse at 0x0000024AF307A1E0>,\n                   'patience': 1},\n 'ModelCheckpoint': {'mode': 'min',\n                     'monitor': <function my_rmse at 0x0000024AF307A1E0>}}\n",
                        "name": "stdout"
                    }
                ]
            }
        },
        "ba65730783d04b3cb413f32020e58e07": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "8750786d33cb485c9d7d3505c0ab9781": {
            "model_name": "VBoxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_dom_classes": [
                    "widget-interact"
                ],
                "children": [
                    "IPY_MODEL_699e294d7c63467e90d2b53a485005ac",
                    "IPY_MODEL_c90810f4b05541e892b11f8d94bcc68a"
                ],
                "layout": "IPY_MODEL_ba65730783d04b3cb413f32020e58e07"
            }
        },
        "1c39b0d1435b4c17a92dec1c851d551f": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "d5757c6a1bc54223a2666d74d568b3c8": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "699e294d7c63467e90d2b53a485005ac": {
            "model_name": "DropdownModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_options_labels": [
                    "data_params",
                    "custom_loss_function",
                    "callback_params",
                    "compile",
                    "model.get_config",
                    "fit_params"
                ],
                "description": "model_params",
                "index": 2,
                "layout": "IPY_MODEL_1c39b0d1435b4c17a92dec1c851d551f",
                "style": "IPY_MODEL_d5757c6a1bc54223a2666d74d568b3c8"
            }
        },
        "3d397f74c97e4e758ca238264311b073": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "c90810f4b05541e892b11f8d94bcc68a": {
            "model_name": "OutputModel",
            "model_module": "@jupyter-widgets/output",
            "model_module_version": "1.0.0",
            "state": {
                "layout": "IPY_MODEL_3d397f74c97e4e758ca238264311b073",
                "outputs": [
                    {
                        "output_type": "stream",
                        "text": "{'EarlyStopping': {'min_delta': 0.001,\n                   'mode': 'min',\n                   'monitor': <function my_rmse at 0x0000024A8E0CE510>,\n                   'patience': 1},\n 'ModelCheckpoint': {'mode': 'min',\n                     'monitor': <function my_rmse at 0x0000024A8E0CE510>}}\n",
                        "name": "stdout"
                    }
                ]
            }
        },
        "e19d103041504865911b035a6c418765": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "0552f34115514233adc9a770f4355435": {
            "model_name": "VBoxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_dom_classes": [
                    "widget-interact"
                ],
                "children": [
                    "IPY_MODEL_2b886aa297d542b091e9518fa5b9f4e2",
                    "IPY_MODEL_890ee29e81db44179c1bffff72223a52"
                ],
                "layout": "IPY_MODEL_e19d103041504865911b035a6c418765"
            }
        },
        "d11cb492936a42bcaca7476f705781b5": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "e6f63b35dcf3406e8bff757db6becf83": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "2b886aa297d542b091e9518fa5b9f4e2": {
            "model_name": "DropdownModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_options_labels": [
                    "data_params",
                    "custom_loss_function",
                    "callback_params"
                ],
                "description": "model_params",
                "index": 2,
                "layout": "IPY_MODEL_d11cb492936a42bcaca7476f705781b5",
                "style": "IPY_MODEL_e6f63b35dcf3406e8bff757db6becf83"
            }
        },
        "9e02800471b64b5bb96cda846fa150f7": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "890ee29e81db44179c1bffff72223a52": {
            "model_name": "OutputModel",
            "model_module": "@jupyter-widgets/output",
            "model_module_version": "1.0.0",
            "state": {
                "layout": "IPY_MODEL_9e02800471b64b5bb96cda846fa150f7",
                "outputs": [
                    {
                        "output_type": "stream",
                        "text": "{'EarlyStopping': {'min_delta': 0.001,\n                   'mode': 'min',\n                   'monitor': <function my_rmse at 0x0000024A8EB59048>,\n                   'patience': 1},\n 'ModelCheckpoint': {'mode': 'min',\n                     'monitor': <function my_rmse at 0x0000024A8EB59048>}}\n",
                        "name": "stdout"
                    }
                ]
            }
        },
        "e7935746a2ea49b6928eecdf601424d8": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "04236ffef9e248bea80569fa8ffc57bd": {
            "model_name": "VBoxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_dom_classes": [
                    "widget-interact"
                ],
                "children": [
                    "IPY_MODEL_5fb3808ac99b40a69e701965688c3687",
                    "IPY_MODEL_faf113ca70d84d8da51c4494e2562dcd"
                ],
                "layout": "IPY_MODEL_e7935746a2ea49b6928eecdf601424d8"
            }
        },
        "bf9ee091a2664764887d0cf766675451": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "7bebb751b7b44d44b7e566cc5b2bb467": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "5fb3808ac99b40a69e701965688c3687": {
            "model_name": "DropdownModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_options_labels": [
                    "data_params",
                    "custom_loss_function",
                    "callback_params",
                    "fit_params"
                ],
                "description": "model_params",
                "index": 0,
                "layout": "IPY_MODEL_bf9ee091a2664764887d0cf766675451",
                "style": "IPY_MODEL_7bebb751b7b44d44b7e566cc5b2bb467"
            }
        },
        "a5b4623b6c224dc0865949239f538c9b": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "faf113ca70d84d8da51c4494e2562dcd": {
            "model_name": "OutputModel",
            "model_module": "@jupyter-widgets/output",
            "model_module_version": "1.0.0",
            "state": {
                "layout": "IPY_MODEL_a5b4623b6c224dc0865949239f538c9b",
                "outputs": [
                    {
                        "output_type": "stream",
                        "text": "{'batch_size': 1,\n 'days_for_x_window': 5,\n 'n_features': 1,\n 'n_input': 35,\n 'num_test_days': 45,\n 'num_train_days': 365,\n 'x_window': 35}\n",
                        "name": "stdout"
                    }
                ]
            }
        },
        "64ee6b33841441449a53b209b4aa4bf4": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "797b5ec1c85e48bca8209cb4fec6677c": {
            "model_name": "VBoxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_dom_classes": [
                    "widget-interact"
                ],
                "children": [
                    "IPY_MODEL_386f64f378f6431eb855f6285cbe8b37",
                    "IPY_MODEL_ca573166a35e4b9eb455715cf17ce91b"
                ],
                "layout": "IPY_MODEL_64ee6b33841441449a53b209b4aa4bf4"
            }
        },
        "fb2ca29de55b4ee4a6af75d52cf206e7": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "cffea0a4726c4d1bb7636e4b0a48a720": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "386f64f378f6431eb855f6285cbe8b37": {
            "model_name": "DropdownModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_options_labels": [
                    "data_params",
                    "custom_loss_function",
                    "callback_params",
                    "fit_params"
                ],
                "description": "model_params",
                "index": 0,
                "layout": "IPY_MODEL_fb2ca29de55b4ee4a6af75d52cf206e7",
                "style": "IPY_MODEL_cffea0a4726c4d1bb7636e4b0a48a720"
            }
        },
        "a8a17edb0bf14ea7a00126779e89994d": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "ca573166a35e4b9eb455715cf17ce91b": {
            "model_name": "OutputModel",
            "model_module": "@jupyter-widgets/output",
            "model_module_version": "1.0.0",
            "state": {
                "layout": "IPY_MODEL_a8a17edb0bf14ea7a00126779e89994d",
                "outputs": [
                    {
                        "output_type": "stream",
                        "text": "{'batch_size': 1,\n 'days_for_x_window': 5,\n 'n_features': 1,\n 'n_input': 35,\n 'num_test_days': 45,\n 'num_train_days': 365,\n 'x_window': 35}\n",
                        "name": "stdout"
                    }
                ]
            }
        },
        "fa24be8cf3f649a185ca8da8ac5b7944": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "7a24d31c924a4b25b558cf3703fe6eea": {
            "model_name": "VBoxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_dom_classes": [
                    "widget-interact"
                ],
                "children": [
                    "IPY_MODEL_4cf4883aca8442569089e2c658cbf7c6",
                    "IPY_MODEL_16bfd112514b46c59d5419c56bcc69da"
                ],
                "layout": "IPY_MODEL_fa24be8cf3f649a185ca8da8ac5b7944"
            }
        },
        "43a811616ae84968a22eff0e98e05b3a": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "3ecab6798493458eb2a0876bdec4694f": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "4cf4883aca8442569089e2c658cbf7c6": {
            "model_name": "DropdownModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_options_labels": [
                    "data_params",
                    "custom_loss_function",
                    "callback_params",
                    "fit_params",
                    "compile",
                    "model.get_config"
                ],
                "description": "model_params",
                "index": 4,
                "layout": "IPY_MODEL_43a811616ae84968a22eff0e98e05b3a",
                "style": "IPY_MODEL_3ecab6798493458eb2a0876bdec4694f"
            }
        },
        "08bb1e11385647ab85d624479232d0a7": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "16bfd112514b46c59d5419c56bcc69da": {
            "model_name": "OutputModel",
            "model_module": "@jupyter-widgets/output",
            "model_module_version": "1.0.0",
            "state": {
                "layout": "IPY_MODEL_08bb1e11385647ab85d624479232d0a7",
                "outputs": [
                    {
                        "output_type": "stream",
                        "text": "{'loss': {'my_rmse': 'def my_rmse(y_true,y_pred):\\n'\n                     '    \"\"\"RMSE calculation using keras.backend\"\"\"\\n'\n                     '    from keras import backend as kb\\n'\n                     '    sq_err = kb.square(y_pred - y_true)\\n'\n                     '    mse = kb.mean(sq_err,axis=-1)\\n'\n                     '    rmse =kb.sqrt(mse)\\n'\n                     '    return rmse\\n'},\n 'metrics': ['acc', <function my_rmse at 0x0000024A8EDBBD90>],\n 'optimizer': <keras.optimizers.Nadam object at 0x0000024A8F6EF940>}\n",
                        "name": "stdout"
                    }
                ]
            }
        },
        "4d57161d78664501921b81c869780f9d": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "82f395b0254f4e1fbc1c1df7bb6e4847": {
            "model_name": "VBoxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_dom_classes": [
                    "widget-interact"
                ],
                "children": [
                    "IPY_MODEL_f626ddf95f9149839b9d983b5fd989a6",
                    "IPY_MODEL_a963e995e35c43b0bc78d2805cdb7bd5"
                ],
                "layout": "IPY_MODEL_4d57161d78664501921b81c869780f9d"
            }
        },
        "7d4505a1634440d5b9332bd5e996b26f": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "92dc2dc3b13845c4a8ecdd4c7c4c38f5": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "f626ddf95f9149839b9d983b5fd989a6": {
            "model_name": "DropdownModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_options_labels": [
                    "data_params",
                    "custom_loss_function",
                    "callback_params",
                    "fit_params",
                    "compile",
                    "model.get_config"
                ],
                "description": "model_params",
                "index": 4,
                "layout": "IPY_MODEL_7d4505a1634440d5b9332bd5e996b26f",
                "style": "IPY_MODEL_92dc2dc3b13845c4a8ecdd4c7c4c38f5"
            }
        },
        "a23235842264419fb25d51ae8584d5fb": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "a963e995e35c43b0bc78d2805cdb7bd5": {
            "model_name": "OutputModel",
            "model_module": "@jupyter-widgets/output",
            "model_module_version": "1.0.0",
            "state": {
                "layout": "IPY_MODEL_a23235842264419fb25d51ae8584d5fb",
                "outputs": [
                    {
                        "output_type": "stream",
                        "text": "{'loss': {'my_rmse': 'def my_rmse(y_true,y_pred):\\n'\n                     '    \"\"\"RMSE calculation using keras.backend\"\"\"\\n'\n                     '    from keras import backend as kb\\n'\n                     '    sq_err = kb.square(y_pred - y_true)\\n'\n                     '    mse = kb.mean(sq_err,axis=-1)\\n'\n                     '    rmse =kb.sqrt(mse)\\n'\n                     '    return rmse\\n'},\n 'metrics': ['acc', <function my_rmse at 0x0000024A8EDBBD90>],\n 'optimizer': 'optimizers.Nadam()'}\n",
                        "name": "stdout"
                    }
                ]
            }
        },
        "2cdc095f616d4c358257271420ef70a3": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "bab6214e098e43c39b57505739ef0463": {
            "model_name": "VBoxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_dom_classes": [
                    "widget-interact"
                ],
                "children": [
                    "IPY_MODEL_cb015f9e94344ece8585df83a7543aae",
                    "IPY_MODEL_ee0df140b720429d997a4f8d13d3f18a"
                ],
                "layout": "IPY_MODEL_2cdc095f616d4c358257271420ef70a3"
            }
        },
        "5890aafb178b4bb8b6f6c98802585536": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "455d7e72bfcf4358b10546ea753e3231": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "cb015f9e94344ece8585df83a7543aae": {
            "model_name": "DropdownModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_options_labels": [
                    "data_params",
                    "custom_loss_function",
                    "callback_params",
                    "fit_params",
                    "compile",
                    "model.get_config"
                ],
                "description": "model_params",
                "index": 0,
                "layout": "IPY_MODEL_5890aafb178b4bb8b6f6c98802585536",
                "style": "IPY_MODEL_455d7e72bfcf4358b10546ea753e3231"
            }
        },
        "8d7a2a0bf6754656b5edfe66036a1324": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "ee0df140b720429d997a4f8d13d3f18a": {
            "model_name": "OutputModel",
            "model_module": "@jupyter-widgets/output",
            "model_module_version": "1.0.0",
            "state": {
                "layout": "IPY_MODEL_8d7a2a0bf6754656b5edfe66036a1324",
                "outputs": [
                    {
                        "output_type": "stream",
                        "text": "{'batch_size': 1,\n 'days_for_x_window': 5,\n 'n_features': 1,\n 'n_input': 35,\n 'num_test_days': 45,\n 'num_train_days': 365,\n 'x_window': 35}\n",
                        "name": "stdout"
                    }
                ]
            }
        },
        "f0bf27ea46ff44c295efa81d81d0cb13": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "b80c50a84d6e496dbba8c4921aaade0b": {
            "model_name": "VBoxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_dom_classes": [
                    "widget-interact"
                ],
                "children": [
                    "IPY_MODEL_849b3e296ed641adb15621895f3a3789",
                    "IPY_MODEL_8d2cade933324bbcab58bc67b8a23dfc"
                ],
                "layout": "IPY_MODEL_f0bf27ea46ff44c295efa81d81d0cb13"
            }
        },
        "f9dc23008dee4049af537826268855bf": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "0c18ec4f7abe49fb8f5746747b8fc08c": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "849b3e296ed641adb15621895f3a3789": {
            "model_name": "DropdownModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_options_labels": [
                    "data_params",
                    "custom_loss_function",
                    "callback_params",
                    "fit_params",
                    "compile",
                    "model.get_config"
                ],
                "description": "model_params",
                "index": 0,
                "layout": "IPY_MODEL_f9dc23008dee4049af537826268855bf",
                "style": "IPY_MODEL_0c18ec4f7abe49fb8f5746747b8fc08c"
            }
        },
        "439611c7f22543d9abee93c4f0dba168": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "8d2cade933324bbcab58bc67b8a23dfc": {
            "model_name": "OutputModel",
            "model_module": "@jupyter-widgets/output",
            "model_module_version": "1.0.0",
            "state": {
                "layout": "IPY_MODEL_439611c7f22543d9abee93c4f0dba168",
                "outputs": [
                    {
                        "output_type": "stream",
                        "text": "{'batch_size': 1,\n 'days_for_x_window': 5,\n 'n_features': 1,\n 'n_input': 35,\n 'num_test_days': 45,\n 'num_train_days': 365,\n 'x_window': 35}\n",
                        "name": "stdout"
                    }
                ]
            }
        },
        "c8d0e0b0c49a45babe32e0b58d439a53": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "96c8245c8c734965acfcb6b1ba1fac43": {
            "model_name": "VBoxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_dom_classes": [
                    "widget-interact"
                ],
                "layout": "IPY_MODEL_c8d0e0b0c49a45babe32e0b58d439a53"
            }
        },
        "d936e61e685d482bafb731b5d16a5585": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "be33d0db72284096b00143ffd35159de": {
            "model_name": "VBoxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_dom_classes": [
                    "widget-interact"
                ],
                "children": [
                    "IPY_MODEL_91d575d2e0b84a369c6c2082b39d5283",
                    "IPY_MODEL_b5f698f0735b4dadbea5c656467086f6"
                ],
                "layout": "IPY_MODEL_d936e61e685d482bafb731b5d16a5585"
            }
        },
        "171b07b34fc44ec999e9a65380537b41": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "85eb3f17f11a4df186c210503519f570": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "91d575d2e0b84a369c6c2082b39d5283": {
            "model_name": "DropdownModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_options_labels": [
                    "data_params",
                    "custom_loss_function",
                    "callback_params"
                ],
                "description": "model_params",
                "index": 0,
                "layout": "IPY_MODEL_171b07b34fc44ec999e9a65380537b41",
                "style": "IPY_MODEL_85eb3f17f11a4df186c210503519f570"
            }
        },
        "472f71b2846049f4b282fcea5418be15": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "b5f698f0735b4dadbea5c656467086f6": {
            "model_name": "OutputModel",
            "model_module": "@jupyter-widgets/output",
            "model_module_version": "1.0.0",
            "state": {
                "layout": "IPY_MODEL_472f71b2846049f4b282fcea5418be15",
                "outputs": [
                    {
                        "output_type": "stream",
                        "text": "{'batch_size': 1,\n 'days_for_x_window': 5,\n 'n_features': 1,\n 'n_input': 35,\n 'num_test_days': 45,\n 'num_train_days': 365,\n 'x_window': 35}\n",
                        "name": "stdout"
                    }
                ]
            }
        },
        "503e4e73cd594d3bb89ef38a7a2ef2af": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "7b7a68687c344f0c9eb5f1cea613e3c7": {
            "model_name": "VBoxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_dom_classes": [
                    "widget-interact"
                ],
                "children": [
                    "IPY_MODEL_60441cd7d04549ef8922f4077770d47b",
                    "IPY_MODEL_c80dc99226ff430f93d223d55e6ac0d2"
                ],
                "layout": "IPY_MODEL_503e4e73cd594d3bb89ef38a7a2ef2af"
            }
        },
        "08364e18c6a14eb78587b8f939a9f22c": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "0de30ce2f5864b148833e59e500bfcde": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "60441cd7d04549ef8922f4077770d47b": {
            "model_name": "DropdownModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_options_labels": [
                    "data_params",
                    "custom_loss_function",
                    "callback_params"
                ],
                "description": "model_params",
                "index": 0,
                "layout": "IPY_MODEL_08364e18c6a14eb78587b8f939a9f22c",
                "style": "IPY_MODEL_0de30ce2f5864b148833e59e500bfcde"
            }
        },
        "f7b0c78110674e1cba6a923e677c4714": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "c80dc99226ff430f93d223d55e6ac0d2": {
            "model_name": "OutputModel",
            "model_module": "@jupyter-widgets/output",
            "model_module_version": "1.0.0",
            "state": {
                "layout": "IPY_MODEL_f7b0c78110674e1cba6a923e677c4714",
                "outputs": [
                    {
                        "output_type": "stream",
                        "text": "{'batch_size': 1,\n 'days_for_x_window': 5,\n 'n_features': 1,\n 'n_input': 35,\n 'num_test_days': 45,\n 'num_train_days': 365,\n 'x_window': 35}\n",
                        "name": "stdout"
                    }
                ]
            }
        },
        "213383a46180428ba2daa474c4f54cda": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "fddc687990954c4b8ff87af30356040d": {
            "model_name": "VBoxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_dom_classes": [
                    "widget-interact"
                ],
                "children": [
                    "IPY_MODEL_624b4958f89646b8a1e0e0749d83bd08",
                    "IPY_MODEL_3ad90a5d63c842a3abf57e7db4f9d635"
                ],
                "layout": "IPY_MODEL_213383a46180428ba2daa474c4f54cda"
            }
        },
        "3456293332cb4c38bf05ecddb9a6c0d3": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "bd23c4c622e0409892be9a5ff91a7797": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "624b4958f89646b8a1e0e0749d83bd08": {
            "model_name": "DropdownModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_options_labels": [
                    "data_params",
                    "custom_loss_function",
                    "callback_params",
                    "compile",
                    "fit_params"
                ],
                "description": "model_params",
                "index": 0,
                "layout": "IPY_MODEL_3456293332cb4c38bf05ecddb9a6c0d3",
                "style": "IPY_MODEL_bd23c4c622e0409892be9a5ff91a7797"
            }
        },
        "b2de6dec1642436b8dcbf0e42f8f90c7": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "3ad90a5d63c842a3abf57e7db4f9d635": {
            "model_name": "OutputModel",
            "model_module": "@jupyter-widgets/output",
            "model_module_version": "1.0.0",
            "state": {
                "layout": "IPY_MODEL_b2de6dec1642436b8dcbf0e42f8f90c7",
                "outputs": [
                    {
                        "output_type": "stream",
                        "text": "{'batch_size': 1,\n 'days_for_x_window': 5,\n 'n_features': 1,\n 'n_input': 35,\n 'num_test_days': 45,\n 'num_train_days': 365,\n 'x_window': 35}\n",
                        "name": "stdout"
                    }
                ]
            }
        },
        "458655b3749c473c96cd678b4199919e": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "e102b84bc2e448e29045216dbf819c7f": {
            "model_name": "VBoxModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_dom_classes": [
                    "widget-interact"
                ],
                "children": [
                    "IPY_MODEL_495367f58ec64064bf6d014005d9abbd",
                    "IPY_MODEL_3c1ba95815bd43769f4e823462b96451"
                ],
                "layout": "IPY_MODEL_458655b3749c473c96cd678b4199919e"
            }
        },
        "4496b61877ff4c7e922acca192eca160": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "9fb83f43e79843fe9bdd1a0bea0c6ba6": {
            "model_name": "DescriptionStyleModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "description_width": ""
            }
        },
        "495367f58ec64064bf6d014005d9abbd": {
            "model_name": "DropdownModel",
            "model_module": "@jupyter-widgets/controls",
            "model_module_version": "1.4.0",
            "state": {
                "_options_labels": [
                    "data_params",
                    "custom_loss_function",
                    "callback_params",
                    "compile",
                    "fit_params"
                ],
                "description": "dict_to_display",
                "index": 3,
                "layout": "IPY_MODEL_4496b61877ff4c7e922acca192eca160",
                "style": "IPY_MODEL_9fb83f43e79843fe9bdd1a0bea0c6ba6"
            }
        },
        "bd0f64245f8346abbc558b69e87fc3f7": {
            "model_name": "LayoutModel",
            "model_module": "@jupyter-widgets/base",
            "model_module_version": "1.1.0",
            "state": {}
        },
        "3c1ba95815bd43769f4e823462b96451": {
            "model_name": "OutputModel",
            "model_module": "@jupyter-widgets/output",
            "model_module_version": "1.0.0",
            "state": {
                "layout": "IPY_MODEL_bd0f64245f8346abbc558b69e87fc3f7",
                "outputs": [
                    {
                        "output_type": "stream",
                        "text": "{'loss': {'my_rmse': 'def my_rmse(y_true,y_pred):\\n'\n                     '    \"\"\"RMSE calculation using keras.backend\"\"\"\\n'\n                     '    from keras import backend as kb\\n'\n                     '    sq_err = kb.square(y_pred - y_true)\\n'\n                     '    mse = kb.mean(sq_err,axis=-1)\\n'\n                     '    rmse =kb.sqrt(mse)\\n'\n                     '    return rmse\\n'},\n 'metrics': ['acc', <function my_rmse at 0x000002A242BA62F0>],\n 'optimizer': 'optimizers.Nadam()'}\n",
                        "name": "stdout"
                    }
                ]
            }
        }
    }
}
</script>
</head>
<body>

<script type="application/vnd.jupyter.widget-view+json">
{
    "version_major": 2,
    "version_minor": 0,
    "model_id": "e102b84bc2e448e29045216dbf819c7f"
}
</script>

<script type="application/vnd.jupyter.widget-view+json">
{
    "version_major": 2,
    "version_minor": 0,
    "model_id": "fddc687990954c4b8ff87af30356040d"
}
</script>

</body>
</html>

